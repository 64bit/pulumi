// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "plugin.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

package pulumirpc;

// Analyzer is a pluggable service that checks entire projects/stacks/snapshots, and/or individual resources,
// for arbitrary issues.  These might be style, policy, correctness, security, or performance related.
service Analyzer {
    // Analyze analyzes a single resource object, and returns any errors that it finds.
    rpc Analyze(AnalyzeRequest) returns (AnalyzeResponse) {}
    // AnalyzeStack analyzes an entire stack of resources, and returns any errors that it finds.
    rpc AnalyzeStack(AnalyzeStackRequest) returns (AnalyzeResponse) {}
    // GetPluginInfo returns generic information about this plugin, like its version.
    rpc GetPluginInfo(google.protobuf.Empty) returns (PluginInfo) {}
}

message AnalyzeRequest {
    string urn = 1;                        // the URN for this resource.
    string id = 2;                         // the ID for this resource, if known.
    google.protobuf.Struct properties = 3; // the full properties to use for validation.
}

message AnalyzeStackRequest {
    repeated AnalyzeRequest resources = 1; // the full set of resources to analyze within this stack.
}

message AnalyzeResponse {
    repeated AnalyzerDiagnostic diagnostics = 1; // any diagnostics/errors that occurred (or empty if none).
}

message AnalyzerDiagnostic {
    string id = 1;        // an optional string ID unique to this message.
    string message = 2;   // a freeform message describing the issue discovered by the analyzer.
    string severity = 3;  // the severity of this diagnostic, indicating how seriously it is to be taken.
    string category = 4;  // a category classifying this diagnostic for purposes of aggregation.
    float confidence = 5; // a score from 0.0 to 1.0 indicating how confident the analyzer is about this issue.
}

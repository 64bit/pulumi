// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package apitype

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype(in *jlexer.Lexer, out *StackSummary) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "orgName":
			out.OrgName = string(in.String())
		case "projectName":
			out.ProjectName = string(in.String())
		case "stackName":
			out.StackName = string(in.String())
		case "lastUpdate":
			if in.IsNull() {
				in.Skip()
				out.LastUpdate = nil
			} else {
				if out.LastUpdate == nil {
					out.LastUpdate = new(int64)
				}
				*out.LastUpdate = int64(in.Int64())
			}
		case "resourceCount":
			if in.IsNull() {
				in.Skip()
				out.ResourceCount = nil
			} else {
				if out.ResourceCount == nil {
					out.ResourceCount = new(int)
				}
				*out.ResourceCount = int(in.Int())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype(out *jwriter.Writer, in StackSummary) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"orgName\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrgName))
	}
	{
		const prefix string = ",\"projectName\":"
		out.RawString(prefix)
		out.String(string(in.ProjectName))
	}
	{
		const prefix string = ",\"stackName\":"
		out.RawString(prefix)
		out.String(string(in.StackName))
	}
	if in.LastUpdate != nil {
		const prefix string = ",\"lastUpdate\":"
		out.RawString(prefix)
		out.Int64(int64(*in.LastUpdate))
	}
	if in.ResourceCount != nil {
		const prefix string = ",\"resourceCount\":"
		out.RawString(prefix)
		out.Int(int(*in.ResourceCount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v StackSummary) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v StackSummary) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *StackSummary) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *StackSummary) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype1(in *jlexer.Lexer, out *ListStacksResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "stacks":
			if in.IsNull() {
				in.Skip()
				out.Stacks = nil
			} else {
				in.Delim('[')
				if out.Stacks == nil {
					if !in.IsDelim(']') {
						out.Stacks = make([]StackSummary, 0, 1)
					} else {
						out.Stacks = []StackSummary{}
					}
				} else {
					out.Stacks = (out.Stacks)[:0]
				}
				for !in.IsDelim(']') {
					var v1 StackSummary
					(v1).UnmarshalEasyJSON(in)
					out.Stacks = append(out.Stacks, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "continuationToken":
			if in.IsNull() {
				in.Skip()
				out.ContinuationToken = nil
			} else {
				if out.ContinuationToken == nil {
					out.ContinuationToken = new(string)
				}
				*out.ContinuationToken = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype1(out *jwriter.Writer, in ListStacksResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"stacks\":"
		out.RawString(prefix[1:])
		if in.Stacks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Stacks {
				if v2 > 0 {
					out.RawByte(',')
				}
				(v3).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	if in.ContinuationToken != nil {
		const prefix string = ",\"continuationToken\":"
		out.RawString(prefix)
		out.String(string(*in.ContinuationToken))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ListStacksResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ListStacksResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ListStacksResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ListStacksResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype1(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype2(in *jlexer.Lexer, out *ImportStackResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "updateId":
			out.UpdateID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype2(out *jwriter.Writer, in ImportStackResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"updateId\":"
		out.RawString(prefix[1:])
		out.String(string(in.UpdateID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ImportStackResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ImportStackResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ImportStackResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ImportStackResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype2(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype3(in *jlexer.Lexer, out *ImportStackRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "version":
			out.Version = int(in.Int())
		case "deployment":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Deployment).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype3(out *jwriter.Writer, in ImportStackRequest) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Version != 0 {
		const prefix string = ",\"version\":"
		first = false
		out.RawString(prefix[1:])
		out.Int(int(in.Version))
	}
	if len(in.Deployment) != 0 {
		const prefix string = ",\"deployment\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Raw((in.Deployment).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ImportStackRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ImportStackRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ImportStackRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ImportStackRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype3(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype4(in *jlexer.Lexer, out *ExportStackResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "version":
			out.Version = int(in.Int())
		case "deployment":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Deployment).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype4(out *jwriter.Writer, in ExportStackResponse) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Version != 0 {
		const prefix string = ",\"version\":"
		first = false
		out.RawString(prefix[1:])
		out.Int(int(in.Version))
	}
	if len(in.Deployment) != 0 {
		const prefix string = ",\"deployment\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Raw((in.Deployment).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ExportStackResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ExportStackResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ExportStackResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ExportStackResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype4(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype5(in *jlexer.Lexer, out *EncryptValueResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ciphertext":
			if in.IsNull() {
				in.Skip()
				out.Ciphertext = nil
			} else {
				out.Ciphertext = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype5(out *jwriter.Writer, in EncryptValueResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ciphertext\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Ciphertext)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EncryptValueResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EncryptValueResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EncryptValueResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EncryptValueResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype5(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype6(in *jlexer.Lexer, out *EncryptValueRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "plaintext":
			if in.IsNull() {
				in.Skip()
				out.Plaintext = nil
			} else {
				out.Plaintext = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype6(out *jwriter.Writer, in EncryptValueRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"plaintext\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Plaintext)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EncryptValueRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EncryptValueRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EncryptValueRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EncryptValueRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype6(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype7(in *jlexer.Lexer, out *DecryptValueResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "plaintext":
			if in.IsNull() {
				in.Skip()
				out.Plaintext = nil
			} else {
				out.Plaintext = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype7(out *jwriter.Writer, in DecryptValueResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"plaintext\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Plaintext)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DecryptValueResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DecryptValueResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DecryptValueResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DecryptValueResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype7(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype8(in *jlexer.Lexer, out *DecryptValueRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ciphertext":
			if in.IsNull() {
				in.Skip()
				out.Ciphertext = nil
			} else {
				out.Ciphertext = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype8(out *jwriter.Writer, in DecryptValueRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ciphertext\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Ciphertext)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DecryptValueRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DecryptValueRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DecryptValueRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DecryptValueRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype8(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype9(in *jlexer.Lexer, out *CreateStackResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype9(out *jwriter.Writer, in CreateStackResponse) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreateStackResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreateStackResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreateStackResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreateStackResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype9(l, v)
}
func easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype10(in *jlexer.Lexer, out *CreateStackRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "stackName":
			out.StackName = string(in.String())
		case "tags":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Tags = make(map[string]string)
				} else {
					out.Tags = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v16 string
					v16 = string(in.String())
					(out.Tags)[key] = v16
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype10(out *jwriter.Writer, in CreateStackRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"stackName\":"
		out.RawString(prefix[1:])
		out.String(string(in.StackName))
	}
	if len(in.Tags) != 0 {
		const prefix string = ",\"tags\":"
		out.RawString(prefix)
		{
			out.RawByte('{')
			v17First := true
			for v17Name, v17Value := range in.Tags {
				if v17First {
					v17First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v17Name))
				out.RawByte(':')
				out.String(string(v17Value))
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreateStackRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreateStackRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson861d4b27EncodeGithubComPulumiPulumiSdkV3GoCommonApitype10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreateStackRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreateStackRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson861d4b27DecodeGithubComPulumiPulumiSdkV3GoCommonApitype10(l, v)
}

// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package pulumi

import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"os"
	"strconv"

	"github.com/pulumi/pulumi/sdk/v2/go/common/resource"
	"github.com/pulumi/pulumi/sdk/v2/go/common/resource/plugin"
	"github.com/pulumi/pulumi/sdk/v2/go/common/util/contract"
)

type ConstructFunc func(ctx *Context, name string, options ...ResourceOption) (ComponentResource, error)

// Construct runs the body of a Pulumi program using the given Context for information about the target stack,
// configuration, and engine connection.
func Construct(info RunInfo, name string, inputs resource.PropertyMap, argconstructor ConstructFunc,
	options plugin.ConstructOptions) (plugin.ConstructResult, error) {

	// Create a fresh context.
	ctx, err := NewContext(context.TODO(), info)
	if err != nil {
		return plugin.ConstructResult{}, err
	}
	defer contract.IgnoreClose(ctx)

	var result ComponentResource
	err = RunWithContext(ctx, func(ctx *Context) (err error) {
		result, err = constructor(ctx)
		return
	})
	if err != nil {
		return plugin.ConstructResult{}, err
	}

}

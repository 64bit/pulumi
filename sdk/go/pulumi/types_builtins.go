// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// nolint: lll, interfacer
package pulumi

import (
	"context"
	"reflect"
)

var archiveType = reflect.TypeOf((*Archive)(nil)).Elem()

// ArchiveInput is an input type that accepts Archive and ArchiveOutput values.
type ArchiveInput interface {
	Input

	ToArchiveOutput() ArchiveOutput
	ToArchiveOutputWithContext(ctx context.Context) ArchiveOutput
}

// ElementType returns the element type of this Input (Archive).
func (*archive) ElementType() reflect.Type {
	return archiveType
}

func (in *archive) ToArchiveOutput() ArchiveOutput {
	return ToOutput(in).(ArchiveOutput)
}

func (in *archive) ToArchiveOutputWithContext(ctx context.Context) ArchiveOutput {
	return ToOutputWithContext(ctx, in).(ArchiveOutput)
}

func (in *archive) ToAssetOrArchiveOutput() AssetOrArchiveOutput {
	return in.ToAssetOrArchiveOutputWithContext(context.Background())
}

func (in *archive) ToAssetOrArchiveOutputWithContext(ctx context.Context) AssetOrArchiveOutput {
	return in.ToArchiveOutputWithContext(ctx).ToAssetOrArchiveOutputWithContext(ctx)
}

// ArchiveOutput is an Output that returns Archive values.
type ArchiveOutput struct{ *OutputState }

// ElementType returns the element type of this Output (Archive).
func (ArchiveOutput) ElementType() reflect.Type {
	return archiveType
}

func (o ArchiveOutput) ToArchiveOutput() ArchiveOutput {
	return o
}

func (o ArchiveOutput) ToArchiveOutputWithContext(ctx context.Context) ArchiveOutput {
	return o
}

func (o ArchiveOutput) ToAssetOrArchiveOutput() AssetOrArchiveOutput {
	return o.ToAssetOrArchiveOutputWithContext(context.Background())
}

func (o ArchiveOutput) ToAssetOrArchiveOutputWithContext(ctx context.Context) AssetOrArchiveOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Archive) AssetOrArchive {
		return (AssetOrArchive)(v)
	}).(AssetOrArchiveOutput)
}

var archiveArrayType = reflect.TypeOf((*[]Archive)(nil)).Elem()

// ArchiveArrayInput is an input type that accepts ArchiveArray and ArchiveArrayOutput values.
type ArchiveArrayInput interface {
	Input

	ToArchiveArrayOutput() ArchiveArrayOutput
	ToArchiveArrayOutputWithContext(ctx context.Context) ArchiveArrayOutput
}

// ArchiveArray is an input type for []ArchiveInput values.
type ArchiveArray []ArchiveInput

// ElementType returns the element type of this Input ([]Archive).
func (ArchiveArray) ElementType() reflect.Type {
	return archiveArrayType
}

func (in ArchiveArray) ToArchiveArrayOutput() ArchiveArrayOutput {
	return ToOutput(in).(ArchiveArrayOutput)
}

func (in ArchiveArray) ToArchiveArrayOutputWithContext(ctx context.Context) ArchiveArrayOutput {
	return ToOutputWithContext(ctx, in).(ArchiveArrayOutput)
}

// ArchiveArrayOutput is an Output that returns []Archive values.
type ArchiveArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]Archive).
func (ArchiveArrayOutput) ElementType() reflect.Type {
	return archiveArrayType
}

func (o ArchiveArrayOutput) ToArchiveArrayOutput() ArchiveArrayOutput {
	return o
}

func (o ArchiveArrayOutput) ToArchiveArrayOutputWithContext(ctx context.Context) ArchiveArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o ArchiveArrayOutput) Index(i IntInput) ArchiveOutput {
	return All(o, i).ApplyT(func(vs []interface{}) Archive {
		arr := vs[0].([]Archive)
		idx := vs[1].(int)
		var ret Archive
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(ArchiveOutput)
}

func ToArchiveArray(in []Archive) ArchiveArray {
	a := make(ArchiveArray, len(in))
	for i, v := range in {
		a[i] = (v)
	}
	return a
}

func ToArchiveArrayOutput(in []ArchiveOutput) ArchiveArrayOutput {
	a := make(ArchiveArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToArchiveArrayOutput()
}

var archiveMapType = reflect.TypeOf((*map[string]Archive)(nil)).Elem()

// ArchiveMapInput is an input type that accepts ArchiveMap and ArchiveMapOutput values.
type ArchiveMapInput interface {
	Input

	ToArchiveMapOutput() ArchiveMapOutput
	ToArchiveMapOutputWithContext(ctx context.Context) ArchiveMapOutput
}

// ArchiveMap is an input type for map[string]ArchiveInput values.
type ArchiveMap map[string]ArchiveInput

// ElementType returns the element type of this Input (map[string]Archive).
func (ArchiveMap) ElementType() reflect.Type {
	return archiveMapType
}

func (in ArchiveMap) ToArchiveMapOutput() ArchiveMapOutput {
	return ToOutput(in).(ArchiveMapOutput)
}

func (in ArchiveMap) ToArchiveMapOutputWithContext(ctx context.Context) ArchiveMapOutput {
	return ToOutputWithContext(ctx, in).(ArchiveMapOutput)
}

// ArchiveMapOutput is an Output that returns map[string]Archive values.
type ArchiveMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]Archive).
func (ArchiveMapOutput) ElementType() reflect.Type {
	return archiveMapType
}

func (o ArchiveMapOutput) ToArchiveMapOutput() ArchiveMapOutput {
	return o
}

func (o ArchiveMapOutput) ToArchiveMapOutputWithContext(ctx context.Context) ArchiveMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o ArchiveMapOutput) MapIndex(k StringInput) ArchiveOutput {
	return All(o, k).ApplyT(func(vs []interface{}) Archive {
		return vs[0].(map[string]Archive)[vs[1].(string)]
	}).(ArchiveOutput)
}

func ToArchiveMap(in map[string]Archive) ArchiveMap {
	m := make(ArchiveMap)
	for k, v := range in {
		m[k] = (v)
	}
	return m
}

func ToArchiveMapOutput(in map[string]ArchiveOutput) ArchiveMapOutput {
	m := make(ArchiveMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToArchiveMapOutput()
}

var archiveArrayMapType = reflect.TypeOf((*map[string][]Archive)(nil)).Elem()

// ArchiveArrayMapInput is an input type that accepts ArchiveArrayMap and ArchiveArrayMapOutput values.
type ArchiveArrayMapInput interface {
	Input

	ToArchiveArrayMapOutput() ArchiveArrayMapOutput
	ToArchiveArrayMapOutputWithContext(ctx context.Context) ArchiveArrayMapOutput
}

// ArchiveArrayMap is an input type for map[string]ArchiveArrayInput values.
type ArchiveArrayMap map[string]ArchiveArrayInput

// ElementType returns the element type of this Input (map[string][]Archive).
func (ArchiveArrayMap) ElementType() reflect.Type {
	return archiveArrayMapType
}

func (in ArchiveArrayMap) ToArchiveArrayMapOutput() ArchiveArrayMapOutput {
	return ToOutput(in).(ArchiveArrayMapOutput)
}

func (in ArchiveArrayMap) ToArchiveArrayMapOutputWithContext(ctx context.Context) ArchiveArrayMapOutput {
	return ToOutputWithContext(ctx, in).(ArchiveArrayMapOutput)
}

// ArchiveArrayMapOutput is an Output that returns map[string][]Archive values.
type ArchiveArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]Archive).
func (ArchiveArrayMapOutput) ElementType() reflect.Type {
	return archiveArrayMapType
}

func (o ArchiveArrayMapOutput) ToArchiveArrayMapOutput() ArchiveArrayMapOutput {
	return o
}

func (o ArchiveArrayMapOutput) ToArchiveArrayMapOutputWithContext(ctx context.Context) ArchiveArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o ArchiveArrayMapOutput) MapIndex(k StringInput) ArchiveArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []Archive {
		return vs[0].(map[string][]Archive)[vs[1].(string)]
	}).(ArchiveArrayOutput)
}

func ToArchiveArrayMap(in map[string][]Archive) ArchiveArrayMap {
	m := make(ArchiveArrayMap)
	for k, v := range in {
		m[k] = ToArchiveArray(v)
	}
	return m
}

func ToArchiveArrayMapOutput(in map[string]ArchiveArrayOutput) ArchiveArrayMapOutput {
	m := make(ArchiveArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToArchiveArrayMapOutput()
}

var archiveMapArrayType = reflect.TypeOf((*[]map[string]Archive)(nil)).Elem()

// ArchiveMapArrayInput is an input type that accepts ArchiveMapArray and ArchiveMapArrayOutput values.
type ArchiveMapArrayInput interface {
	Input

	ToArchiveMapArrayOutput() ArchiveMapArrayOutput
	ToArchiveMapArrayOutputWithContext(ctx context.Context) ArchiveMapArrayOutput
}

// ArchiveMapArray is an input type for []ArchiveMapInput values.
type ArchiveMapArray []ArchiveMapInput

// ElementType returns the element type of this Input ([]map[string]Archive).
func (ArchiveMapArray) ElementType() reflect.Type {
	return archiveMapArrayType
}

func (in ArchiveMapArray) ToArchiveMapArrayOutput() ArchiveMapArrayOutput {
	return ToOutput(in).(ArchiveMapArrayOutput)
}

func (in ArchiveMapArray) ToArchiveMapArrayOutputWithContext(ctx context.Context) ArchiveMapArrayOutput {
	return ToOutputWithContext(ctx, in).(ArchiveMapArrayOutput)
}

// ArchiveMapArrayOutput is an Output that returns []map[string]Archive values.
type ArchiveMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]Archive).
func (ArchiveMapArrayOutput) ElementType() reflect.Type {
	return archiveMapArrayType
}

func (o ArchiveMapArrayOutput) ToArchiveMapArrayOutput() ArchiveMapArrayOutput {
	return o
}

func (o ArchiveMapArrayOutput) ToArchiveMapArrayOutputWithContext(ctx context.Context) ArchiveMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o ArchiveMapArrayOutput) Index(i IntInput) ArchiveMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]Archive {
		arr := vs[0].([]map[string]Archive)
		idx := vs[1].(int)
		var ret map[string]Archive
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(ArchiveMapOutput)
}

func ToArchiveMapArray(in []map[string]Archive) ArchiveMapArray {
	a := make(ArchiveMapArray, len(in))
	for i, v := range in {
		a[i] = ToArchiveMap(v)
	}
	return a
}

func ToArchiveMapArrayOutput(in []ArchiveMapOutput) ArchiveMapArrayOutput {
	a := make(ArchiveMapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToArchiveMapArrayOutput()
}

var archiveMapMapType = reflect.TypeOf((*map[string]map[string]Archive)(nil)).Elem()

// ArchiveMapMapInput is an input type that accepts ArchiveMapMap and ArchiveMapMapOutput values.
type ArchiveMapMapInput interface {
	Input

	ToArchiveMapMapOutput() ArchiveMapMapOutput
	ToArchiveMapMapOutputWithContext(ctx context.Context) ArchiveMapMapOutput
}

// ArchiveMapMap is an input type for map[string]ArchiveMapInput values.
type ArchiveMapMap map[string]ArchiveMapInput

// ElementType returns the element type of this Input (map[string]map[string]Archive).
func (ArchiveMapMap) ElementType() reflect.Type {
	return archiveMapMapType
}

func (in ArchiveMapMap) ToArchiveMapMapOutput() ArchiveMapMapOutput {
	return ToOutput(in).(ArchiveMapMapOutput)
}

func (in ArchiveMapMap) ToArchiveMapMapOutputWithContext(ctx context.Context) ArchiveMapMapOutput {
	return ToOutputWithContext(ctx, in).(ArchiveMapMapOutput)
}

// ArchiveMapMapOutput is an Output that returns map[string]map[string]Archive values.
type ArchiveMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]Archive).
func (ArchiveMapMapOutput) ElementType() reflect.Type {
	return archiveMapMapType
}

func (o ArchiveMapMapOutput) ToArchiveMapMapOutput() ArchiveMapMapOutput {
	return o
}

func (o ArchiveMapMapOutput) ToArchiveMapMapOutputWithContext(ctx context.Context) ArchiveMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o ArchiveMapMapOutput) MapIndex(k StringInput) ArchiveMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]Archive {
		return vs[0].(map[string]map[string]Archive)[vs[1].(string)]
	}).(ArchiveMapOutput)
}

func ToArchiveMapMap(in map[string]map[string]Archive) ArchiveMapMap {
	m := make(ArchiveMapMap)
	for k, v := range in {
		m[k] = ToArchiveMap(v)
	}
	return m
}

func ToArchiveMapMapOutput(in map[string]ArchiveMapOutput) ArchiveMapMapOutput {
	m := make(ArchiveMapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToArchiveMapMapOutput()
}

var archiveArrayArrayType = reflect.TypeOf((*[][]Archive)(nil)).Elem()

// ArchiveArrayArrayInput is an input type that accepts ArchiveArrayArray and ArchiveArrayArrayOutput values.
type ArchiveArrayArrayInput interface {
	Input

	ToArchiveArrayArrayOutput() ArchiveArrayArrayOutput
	ToArchiveArrayArrayOutputWithContext(ctx context.Context) ArchiveArrayArrayOutput
}

// ArchiveArrayArray is an input type for []ArchiveArrayInput values.
type ArchiveArrayArray []ArchiveArrayInput

// ElementType returns the element type of this Input ([][]Archive).
func (ArchiveArrayArray) ElementType() reflect.Type {
	return archiveArrayArrayType
}

func (in ArchiveArrayArray) ToArchiveArrayArrayOutput() ArchiveArrayArrayOutput {
	return ToOutput(in).(ArchiveArrayArrayOutput)
}

func (in ArchiveArrayArray) ToArchiveArrayArrayOutputWithContext(ctx context.Context) ArchiveArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(ArchiveArrayArrayOutput)
}

// ArchiveArrayArrayOutput is an Output that returns [][]Archive values.
type ArchiveArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]Archive).
func (ArchiveArrayArrayOutput) ElementType() reflect.Type {
	return archiveArrayArrayType
}

func (o ArchiveArrayArrayOutput) ToArchiveArrayArrayOutput() ArchiveArrayArrayOutput {
	return o
}

func (o ArchiveArrayArrayOutput) ToArchiveArrayArrayOutputWithContext(ctx context.Context) ArchiveArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o ArchiveArrayArrayOutput) Index(i IntInput) ArchiveArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []Archive {
		arr := vs[0].([][]Archive)
		idx := vs[1].(int)
		var ret []Archive
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(ArchiveArrayOutput)
}

func ToArchiveArrayArray(in [][]Archive) ArchiveArrayArray {
	a := make(ArchiveArrayArray, len(in))
	for i, v := range in {
		a[i] = ToArchiveArray(v)
	}
	return a
}

func ToArchiveArrayArrayOutput(in []ArchiveArrayOutput) ArchiveArrayArrayOutput {
	a := make(ArchiveArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToArchiveArrayArrayOutput()
}

var assetType = reflect.TypeOf((*Asset)(nil)).Elem()

// AssetInput is an input type that accepts Asset and AssetOutput values.
type AssetInput interface {
	Input

	ToAssetOutput() AssetOutput
	ToAssetOutputWithContext(ctx context.Context) AssetOutput
}

// ElementType returns the element type of this Input (Asset).
func (*asset) ElementType() reflect.Type {
	return assetType
}

func (in *asset) ToAssetOutput() AssetOutput {
	return ToOutput(in).(AssetOutput)
}

func (in *asset) ToAssetOutputWithContext(ctx context.Context) AssetOutput {
	return ToOutputWithContext(ctx, in).(AssetOutput)
}

func (in *asset) ToAssetOrArchiveOutput() AssetOrArchiveOutput {
	return in.ToAssetOrArchiveOutputWithContext(context.Background())
}

func (in *asset) ToAssetOrArchiveOutputWithContext(ctx context.Context) AssetOrArchiveOutput {
	return in.ToAssetOutputWithContext(ctx).ToAssetOrArchiveOutputWithContext(ctx)
}

// AssetOutput is an Output that returns Asset values.
type AssetOutput struct{ *OutputState }

// ElementType returns the element type of this Output (Asset).
func (AssetOutput) ElementType() reflect.Type {
	return assetType
}

func (o AssetOutput) ToAssetOutput() AssetOutput {
	return o
}

func (o AssetOutput) ToAssetOutputWithContext(ctx context.Context) AssetOutput {
	return o
}

func (o AssetOutput) ToAssetOrArchiveOutput() AssetOrArchiveOutput {
	return o.ToAssetOrArchiveOutputWithContext(context.Background())
}

func (o AssetOutput) ToAssetOrArchiveOutputWithContext(ctx context.Context) AssetOrArchiveOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Asset) AssetOrArchive {
		return (AssetOrArchive)(v)
	}).(AssetOrArchiveOutput)
}

var assetArrayType = reflect.TypeOf((*[]Asset)(nil)).Elem()

// AssetArrayInput is an input type that accepts AssetArray and AssetArrayOutput values.
type AssetArrayInput interface {
	Input

	ToAssetArrayOutput() AssetArrayOutput
	ToAssetArrayOutputWithContext(ctx context.Context) AssetArrayOutput
}

// AssetArray is an input type for []AssetInput values.
type AssetArray []AssetInput

// ElementType returns the element type of this Input ([]Asset).
func (AssetArray) ElementType() reflect.Type {
	return assetArrayType
}

func (in AssetArray) ToAssetArrayOutput() AssetArrayOutput {
	return ToOutput(in).(AssetArrayOutput)
}

func (in AssetArray) ToAssetArrayOutputWithContext(ctx context.Context) AssetArrayOutput {
	return ToOutputWithContext(ctx, in).(AssetArrayOutput)
}

// AssetArrayOutput is an Output that returns []Asset values.
type AssetArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]Asset).
func (AssetArrayOutput) ElementType() reflect.Type {
	return assetArrayType
}

func (o AssetArrayOutput) ToAssetArrayOutput() AssetArrayOutput {
	return o
}

func (o AssetArrayOutput) ToAssetArrayOutputWithContext(ctx context.Context) AssetArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o AssetArrayOutput) Index(i IntInput) AssetOutput {
	return All(o, i).ApplyT(func(vs []interface{}) Asset {
		arr := vs[0].([]Asset)
		idx := vs[1].(int)
		var ret Asset
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(AssetOutput)
}

func ToAssetArray(in []Asset) AssetArray {
	a := make(AssetArray, len(in))
	for i, v := range in {
		a[i] = (v)
	}
	return a
}

func ToAssetArrayOutput(in []AssetOutput) AssetArrayOutput {
	a := make(AssetArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToAssetArrayOutput()
}

var assetMapType = reflect.TypeOf((*map[string]Asset)(nil)).Elem()

// AssetMapInput is an input type that accepts AssetMap and AssetMapOutput values.
type AssetMapInput interface {
	Input

	ToAssetMapOutput() AssetMapOutput
	ToAssetMapOutputWithContext(ctx context.Context) AssetMapOutput
}

// AssetMap is an input type for map[string]AssetInput values.
type AssetMap map[string]AssetInput

// ElementType returns the element type of this Input (map[string]Asset).
func (AssetMap) ElementType() reflect.Type {
	return assetMapType
}

func (in AssetMap) ToAssetMapOutput() AssetMapOutput {
	return ToOutput(in).(AssetMapOutput)
}

func (in AssetMap) ToAssetMapOutputWithContext(ctx context.Context) AssetMapOutput {
	return ToOutputWithContext(ctx, in).(AssetMapOutput)
}

// AssetMapOutput is an Output that returns map[string]Asset values.
type AssetMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]Asset).
func (AssetMapOutput) ElementType() reflect.Type {
	return assetMapType
}

func (o AssetMapOutput) ToAssetMapOutput() AssetMapOutput {
	return o
}

func (o AssetMapOutput) ToAssetMapOutputWithContext(ctx context.Context) AssetMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o AssetMapOutput) MapIndex(k StringInput) AssetOutput {
	return All(o, k).ApplyT(func(vs []interface{}) Asset {
		return vs[0].(map[string]Asset)[vs[1].(string)]
	}).(AssetOutput)
}

func ToAssetMap(in map[string]Asset) AssetMap {
	m := make(AssetMap)
	for k, v := range in {
		m[k] = (v)
	}
	return m
}

func ToAssetMapOutput(in map[string]AssetOutput) AssetMapOutput {
	m := make(AssetMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToAssetMapOutput()
}

var assetArrayMapType = reflect.TypeOf((*map[string][]Asset)(nil)).Elem()

// AssetArrayMapInput is an input type that accepts AssetArrayMap and AssetArrayMapOutput values.
type AssetArrayMapInput interface {
	Input

	ToAssetArrayMapOutput() AssetArrayMapOutput
	ToAssetArrayMapOutputWithContext(ctx context.Context) AssetArrayMapOutput
}

// AssetArrayMap is an input type for map[string]AssetArrayInput values.
type AssetArrayMap map[string]AssetArrayInput

// ElementType returns the element type of this Input (map[string][]Asset).
func (AssetArrayMap) ElementType() reflect.Type {
	return assetArrayMapType
}

func (in AssetArrayMap) ToAssetArrayMapOutput() AssetArrayMapOutput {
	return ToOutput(in).(AssetArrayMapOutput)
}

func (in AssetArrayMap) ToAssetArrayMapOutputWithContext(ctx context.Context) AssetArrayMapOutput {
	return ToOutputWithContext(ctx, in).(AssetArrayMapOutput)
}

// AssetArrayMapOutput is an Output that returns map[string][]Asset values.
type AssetArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]Asset).
func (AssetArrayMapOutput) ElementType() reflect.Type {
	return assetArrayMapType
}

func (o AssetArrayMapOutput) ToAssetArrayMapOutput() AssetArrayMapOutput {
	return o
}

func (o AssetArrayMapOutput) ToAssetArrayMapOutputWithContext(ctx context.Context) AssetArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o AssetArrayMapOutput) MapIndex(k StringInput) AssetArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []Asset {
		return vs[0].(map[string][]Asset)[vs[1].(string)]
	}).(AssetArrayOutput)
}

func ToAssetArrayMap(in map[string][]Asset) AssetArrayMap {
	m := make(AssetArrayMap)
	for k, v := range in {
		m[k] = ToAssetArray(v)
	}
	return m
}

func ToAssetArrayMapOutput(in map[string]AssetArrayOutput) AssetArrayMapOutput {
	m := make(AssetArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToAssetArrayMapOutput()
}

var assetMapArrayType = reflect.TypeOf((*[]map[string]Asset)(nil)).Elem()

// AssetMapArrayInput is an input type that accepts AssetMapArray and AssetMapArrayOutput values.
type AssetMapArrayInput interface {
	Input

	ToAssetMapArrayOutput() AssetMapArrayOutput
	ToAssetMapArrayOutputWithContext(ctx context.Context) AssetMapArrayOutput
}

// AssetMapArray is an input type for []AssetMapInput values.
type AssetMapArray []AssetMapInput

// ElementType returns the element type of this Input ([]map[string]Asset).
func (AssetMapArray) ElementType() reflect.Type {
	return assetMapArrayType
}

func (in AssetMapArray) ToAssetMapArrayOutput() AssetMapArrayOutput {
	return ToOutput(in).(AssetMapArrayOutput)
}

func (in AssetMapArray) ToAssetMapArrayOutputWithContext(ctx context.Context) AssetMapArrayOutput {
	return ToOutputWithContext(ctx, in).(AssetMapArrayOutput)
}

// AssetMapArrayOutput is an Output that returns []map[string]Asset values.
type AssetMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]Asset).
func (AssetMapArrayOutput) ElementType() reflect.Type {
	return assetMapArrayType
}

func (o AssetMapArrayOutput) ToAssetMapArrayOutput() AssetMapArrayOutput {
	return o
}

func (o AssetMapArrayOutput) ToAssetMapArrayOutputWithContext(ctx context.Context) AssetMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o AssetMapArrayOutput) Index(i IntInput) AssetMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]Asset {
		arr := vs[0].([]map[string]Asset)
		idx := vs[1].(int)
		var ret map[string]Asset
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(AssetMapOutput)
}

func ToAssetMapArray(in []map[string]Asset) AssetMapArray {
	a := make(AssetMapArray, len(in))
	for i, v := range in {
		a[i] = ToAssetMap(v)
	}
	return a
}

func ToAssetMapArrayOutput(in []AssetMapOutput) AssetMapArrayOutput {
	a := make(AssetMapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToAssetMapArrayOutput()
}

var assetMapMapType = reflect.TypeOf((*map[string]map[string]Asset)(nil)).Elem()

// AssetMapMapInput is an input type that accepts AssetMapMap and AssetMapMapOutput values.
type AssetMapMapInput interface {
	Input

	ToAssetMapMapOutput() AssetMapMapOutput
	ToAssetMapMapOutputWithContext(ctx context.Context) AssetMapMapOutput
}

// AssetMapMap is an input type for map[string]AssetMapInput values.
type AssetMapMap map[string]AssetMapInput

// ElementType returns the element type of this Input (map[string]map[string]Asset).
func (AssetMapMap) ElementType() reflect.Type {
	return assetMapMapType
}

func (in AssetMapMap) ToAssetMapMapOutput() AssetMapMapOutput {
	return ToOutput(in).(AssetMapMapOutput)
}

func (in AssetMapMap) ToAssetMapMapOutputWithContext(ctx context.Context) AssetMapMapOutput {
	return ToOutputWithContext(ctx, in).(AssetMapMapOutput)
}

// AssetMapMapOutput is an Output that returns map[string]map[string]Asset values.
type AssetMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]Asset).
func (AssetMapMapOutput) ElementType() reflect.Type {
	return assetMapMapType
}

func (o AssetMapMapOutput) ToAssetMapMapOutput() AssetMapMapOutput {
	return o
}

func (o AssetMapMapOutput) ToAssetMapMapOutputWithContext(ctx context.Context) AssetMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o AssetMapMapOutput) MapIndex(k StringInput) AssetMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]Asset {
		return vs[0].(map[string]map[string]Asset)[vs[1].(string)]
	}).(AssetMapOutput)
}

func ToAssetMapMap(in map[string]map[string]Asset) AssetMapMap {
	m := make(AssetMapMap)
	for k, v := range in {
		m[k] = ToAssetMap(v)
	}
	return m
}

func ToAssetMapMapOutput(in map[string]AssetMapOutput) AssetMapMapOutput {
	m := make(AssetMapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToAssetMapMapOutput()
}

var assetArrayArrayType = reflect.TypeOf((*[][]Asset)(nil)).Elem()

// AssetArrayArrayInput is an input type that accepts AssetArrayArray and AssetArrayArrayOutput values.
type AssetArrayArrayInput interface {
	Input

	ToAssetArrayArrayOutput() AssetArrayArrayOutput
	ToAssetArrayArrayOutputWithContext(ctx context.Context) AssetArrayArrayOutput
}

// AssetArrayArray is an input type for []AssetArrayInput values.
type AssetArrayArray []AssetArrayInput

// ElementType returns the element type of this Input ([][]Asset).
func (AssetArrayArray) ElementType() reflect.Type {
	return assetArrayArrayType
}

func (in AssetArrayArray) ToAssetArrayArrayOutput() AssetArrayArrayOutput {
	return ToOutput(in).(AssetArrayArrayOutput)
}

func (in AssetArrayArray) ToAssetArrayArrayOutputWithContext(ctx context.Context) AssetArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(AssetArrayArrayOutput)
}

// AssetArrayArrayOutput is an Output that returns [][]Asset values.
type AssetArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]Asset).
func (AssetArrayArrayOutput) ElementType() reflect.Type {
	return assetArrayArrayType
}

func (o AssetArrayArrayOutput) ToAssetArrayArrayOutput() AssetArrayArrayOutput {
	return o
}

func (o AssetArrayArrayOutput) ToAssetArrayArrayOutputWithContext(ctx context.Context) AssetArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o AssetArrayArrayOutput) Index(i IntInput) AssetArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []Asset {
		arr := vs[0].([][]Asset)
		idx := vs[1].(int)
		var ret []Asset
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(AssetArrayOutput)
}

func ToAssetArrayArray(in [][]Asset) AssetArrayArray {
	a := make(AssetArrayArray, len(in))
	for i, v := range in {
		a[i] = ToAssetArray(v)
	}
	return a
}

func ToAssetArrayArrayOutput(in []AssetArrayOutput) AssetArrayArrayOutput {
	a := make(AssetArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToAssetArrayArrayOutput()
}

var assetOrArchiveType = reflect.TypeOf((*AssetOrArchive)(nil)).Elem()

// AssetOrArchiveInput is an input type that accepts AssetOrArchive and AssetOrArchiveOutput values.
type AssetOrArchiveInput interface {
	Input

	ToAssetOrArchiveOutput() AssetOrArchiveOutput
	ToAssetOrArchiveOutputWithContext(ctx context.Context) AssetOrArchiveOutput
}

// AssetOrArchiveOutput is an Output that returns AssetOrArchive values.
type AssetOrArchiveOutput struct{ *OutputState }

// ElementType returns the element type of this Output (AssetOrArchive).
func (AssetOrArchiveOutput) ElementType() reflect.Type {
	return assetOrArchiveType
}

func (o AssetOrArchiveOutput) ToAssetOrArchiveOutput() AssetOrArchiveOutput {
	return o
}

func (o AssetOrArchiveOutput) ToAssetOrArchiveOutputWithContext(ctx context.Context) AssetOrArchiveOutput {
	return o
}

var assetOrArchiveArrayType = reflect.TypeOf((*[]AssetOrArchive)(nil)).Elem()

// AssetOrArchiveArrayInput is an input type that accepts AssetOrArchiveArray and AssetOrArchiveArrayOutput values.
type AssetOrArchiveArrayInput interface {
	Input

	ToAssetOrArchiveArrayOutput() AssetOrArchiveArrayOutput
	ToAssetOrArchiveArrayOutputWithContext(ctx context.Context) AssetOrArchiveArrayOutput
}

// AssetOrArchiveArray is an input type for []AssetOrArchiveInput values.
type AssetOrArchiveArray []AssetOrArchiveInput

// ElementType returns the element type of this Input ([]AssetOrArchive).
func (AssetOrArchiveArray) ElementType() reflect.Type {
	return assetOrArchiveArrayType
}

func (in AssetOrArchiveArray) ToAssetOrArchiveArrayOutput() AssetOrArchiveArrayOutput {
	return ToOutput(in).(AssetOrArchiveArrayOutput)
}

func (in AssetOrArchiveArray) ToAssetOrArchiveArrayOutputWithContext(ctx context.Context) AssetOrArchiveArrayOutput {
	return ToOutputWithContext(ctx, in).(AssetOrArchiveArrayOutput)
}

// AssetOrArchiveArrayOutput is an Output that returns []AssetOrArchive values.
type AssetOrArchiveArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]AssetOrArchive).
func (AssetOrArchiveArrayOutput) ElementType() reflect.Type {
	return assetOrArchiveArrayType
}

func (o AssetOrArchiveArrayOutput) ToAssetOrArchiveArrayOutput() AssetOrArchiveArrayOutput {
	return o
}

func (o AssetOrArchiveArrayOutput) ToAssetOrArchiveArrayOutputWithContext(ctx context.Context) AssetOrArchiveArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o AssetOrArchiveArrayOutput) Index(i IntInput) AssetOrArchiveOutput {
	return All(o, i).ApplyT(func(vs []interface{}) AssetOrArchive {
		arr := vs[0].([]AssetOrArchive)
		idx := vs[1].(int)
		var ret AssetOrArchive
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(AssetOrArchiveOutput)
}

var assetOrArchiveMapType = reflect.TypeOf((*map[string]AssetOrArchive)(nil)).Elem()

// AssetOrArchiveMapInput is an input type that accepts AssetOrArchiveMap and AssetOrArchiveMapOutput values.
type AssetOrArchiveMapInput interface {
	Input

	ToAssetOrArchiveMapOutput() AssetOrArchiveMapOutput
	ToAssetOrArchiveMapOutputWithContext(ctx context.Context) AssetOrArchiveMapOutput
}

// AssetOrArchiveMap is an input type for map[string]AssetOrArchiveInput values.
type AssetOrArchiveMap map[string]AssetOrArchiveInput

// ElementType returns the element type of this Input (map[string]AssetOrArchive).
func (AssetOrArchiveMap) ElementType() reflect.Type {
	return assetOrArchiveMapType
}

func (in AssetOrArchiveMap) ToAssetOrArchiveMapOutput() AssetOrArchiveMapOutput {
	return ToOutput(in).(AssetOrArchiveMapOutput)
}

func (in AssetOrArchiveMap) ToAssetOrArchiveMapOutputWithContext(ctx context.Context) AssetOrArchiveMapOutput {
	return ToOutputWithContext(ctx, in).(AssetOrArchiveMapOutput)
}

// AssetOrArchiveMapOutput is an Output that returns map[string]AssetOrArchive values.
type AssetOrArchiveMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]AssetOrArchive).
func (AssetOrArchiveMapOutput) ElementType() reflect.Type {
	return assetOrArchiveMapType
}

func (o AssetOrArchiveMapOutput) ToAssetOrArchiveMapOutput() AssetOrArchiveMapOutput {
	return o
}

func (o AssetOrArchiveMapOutput) ToAssetOrArchiveMapOutputWithContext(ctx context.Context) AssetOrArchiveMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o AssetOrArchiveMapOutput) MapIndex(k StringInput) AssetOrArchiveOutput {
	return All(o, k).ApplyT(func(vs []interface{}) AssetOrArchive {
		return vs[0].(map[string]AssetOrArchive)[vs[1].(string)]
	}).(AssetOrArchiveOutput)
}

var assetOrArchiveArrayMapType = reflect.TypeOf((*map[string][]AssetOrArchive)(nil)).Elem()

// AssetOrArchiveArrayMapInput is an input type that accepts AssetOrArchiveArrayMap and AssetOrArchiveArrayMapOutput values.
type AssetOrArchiveArrayMapInput interface {
	Input

	ToAssetOrArchiveArrayMapOutput() AssetOrArchiveArrayMapOutput
	ToAssetOrArchiveArrayMapOutputWithContext(ctx context.Context) AssetOrArchiveArrayMapOutput
}

// AssetOrArchiveArrayMap is an input type for map[string]AssetOrArchiveArrayInput values.
type AssetOrArchiveArrayMap map[string]AssetOrArchiveArrayInput

// ElementType returns the element type of this Input (map[string][]AssetOrArchive).
func (AssetOrArchiveArrayMap) ElementType() reflect.Type {
	return assetOrArchiveArrayMapType
}

func (in AssetOrArchiveArrayMap) ToAssetOrArchiveArrayMapOutput() AssetOrArchiveArrayMapOutput {
	return ToOutput(in).(AssetOrArchiveArrayMapOutput)
}

func (in AssetOrArchiveArrayMap) ToAssetOrArchiveArrayMapOutputWithContext(ctx context.Context) AssetOrArchiveArrayMapOutput {
	return ToOutputWithContext(ctx, in).(AssetOrArchiveArrayMapOutput)
}

// AssetOrArchiveArrayMapOutput is an Output that returns map[string][]AssetOrArchive values.
type AssetOrArchiveArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]AssetOrArchive).
func (AssetOrArchiveArrayMapOutput) ElementType() reflect.Type {
	return assetOrArchiveArrayMapType
}

func (o AssetOrArchiveArrayMapOutput) ToAssetOrArchiveArrayMapOutput() AssetOrArchiveArrayMapOutput {
	return o
}

func (o AssetOrArchiveArrayMapOutput) ToAssetOrArchiveArrayMapOutputWithContext(ctx context.Context) AssetOrArchiveArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o AssetOrArchiveArrayMapOutput) MapIndex(k StringInput) AssetOrArchiveArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []AssetOrArchive {
		return vs[0].(map[string][]AssetOrArchive)[vs[1].(string)]
	}).(AssetOrArchiveArrayOutput)
}

var assetOrArchiveMapArrayType = reflect.TypeOf((*[]map[string]AssetOrArchive)(nil)).Elem()

// AssetOrArchiveMapArrayInput is an input type that accepts AssetOrArchiveMapArray and AssetOrArchiveMapArrayOutput values.
type AssetOrArchiveMapArrayInput interface {
	Input

	ToAssetOrArchiveMapArrayOutput() AssetOrArchiveMapArrayOutput
	ToAssetOrArchiveMapArrayOutputWithContext(ctx context.Context) AssetOrArchiveMapArrayOutput
}

// AssetOrArchiveMapArray is an input type for []AssetOrArchiveMapInput values.
type AssetOrArchiveMapArray []AssetOrArchiveMapInput

// ElementType returns the element type of this Input ([]map[string]AssetOrArchive).
func (AssetOrArchiveMapArray) ElementType() reflect.Type {
	return assetOrArchiveMapArrayType
}

func (in AssetOrArchiveMapArray) ToAssetOrArchiveMapArrayOutput() AssetOrArchiveMapArrayOutput {
	return ToOutput(in).(AssetOrArchiveMapArrayOutput)
}

func (in AssetOrArchiveMapArray) ToAssetOrArchiveMapArrayOutputWithContext(ctx context.Context) AssetOrArchiveMapArrayOutput {
	return ToOutputWithContext(ctx, in).(AssetOrArchiveMapArrayOutput)
}

// AssetOrArchiveMapArrayOutput is an Output that returns []map[string]AssetOrArchive values.
type AssetOrArchiveMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]AssetOrArchive).
func (AssetOrArchiveMapArrayOutput) ElementType() reflect.Type {
	return assetOrArchiveMapArrayType
}

func (o AssetOrArchiveMapArrayOutput) ToAssetOrArchiveMapArrayOutput() AssetOrArchiveMapArrayOutput {
	return o
}

func (o AssetOrArchiveMapArrayOutput) ToAssetOrArchiveMapArrayOutputWithContext(ctx context.Context) AssetOrArchiveMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o AssetOrArchiveMapArrayOutput) Index(i IntInput) AssetOrArchiveMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]AssetOrArchive {
		arr := vs[0].([]map[string]AssetOrArchive)
		idx := vs[1].(int)
		var ret map[string]AssetOrArchive
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(AssetOrArchiveMapOutput)
}

var assetOrArchiveMapMapType = reflect.TypeOf((*map[string]map[string]AssetOrArchive)(nil)).Elem()

// AssetOrArchiveMapMapInput is an input type that accepts AssetOrArchiveMapMap and AssetOrArchiveMapMapOutput values.
type AssetOrArchiveMapMapInput interface {
	Input

	ToAssetOrArchiveMapMapOutput() AssetOrArchiveMapMapOutput
	ToAssetOrArchiveMapMapOutputWithContext(ctx context.Context) AssetOrArchiveMapMapOutput
}

// AssetOrArchiveMapMap is an input type for map[string]AssetOrArchiveMapInput values.
type AssetOrArchiveMapMap map[string]AssetOrArchiveMapInput

// ElementType returns the element type of this Input (map[string]map[string]AssetOrArchive).
func (AssetOrArchiveMapMap) ElementType() reflect.Type {
	return assetOrArchiveMapMapType
}

func (in AssetOrArchiveMapMap) ToAssetOrArchiveMapMapOutput() AssetOrArchiveMapMapOutput {
	return ToOutput(in).(AssetOrArchiveMapMapOutput)
}

func (in AssetOrArchiveMapMap) ToAssetOrArchiveMapMapOutputWithContext(ctx context.Context) AssetOrArchiveMapMapOutput {
	return ToOutputWithContext(ctx, in).(AssetOrArchiveMapMapOutput)
}

// AssetOrArchiveMapMapOutput is an Output that returns map[string]map[string]AssetOrArchive values.
type AssetOrArchiveMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]AssetOrArchive).
func (AssetOrArchiveMapMapOutput) ElementType() reflect.Type {
	return assetOrArchiveMapMapType
}

func (o AssetOrArchiveMapMapOutput) ToAssetOrArchiveMapMapOutput() AssetOrArchiveMapMapOutput {
	return o
}

func (o AssetOrArchiveMapMapOutput) ToAssetOrArchiveMapMapOutputWithContext(ctx context.Context) AssetOrArchiveMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o AssetOrArchiveMapMapOutput) MapIndex(k StringInput) AssetOrArchiveMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]AssetOrArchive {
		return vs[0].(map[string]map[string]AssetOrArchive)[vs[1].(string)]
	}).(AssetOrArchiveMapOutput)
}

var assetOrArchiveArrayArrayType = reflect.TypeOf((*[][]AssetOrArchive)(nil)).Elem()

// AssetOrArchiveArrayArrayInput is an input type that accepts AssetOrArchiveArrayArray and AssetOrArchiveArrayArrayOutput values.
type AssetOrArchiveArrayArrayInput interface {
	Input

	ToAssetOrArchiveArrayArrayOutput() AssetOrArchiveArrayArrayOutput
	ToAssetOrArchiveArrayArrayOutputWithContext(ctx context.Context) AssetOrArchiveArrayArrayOutput
}

// AssetOrArchiveArrayArray is an input type for []AssetOrArchiveArrayInput values.
type AssetOrArchiveArrayArray []AssetOrArchiveArrayInput

// ElementType returns the element type of this Input ([][]AssetOrArchive).
func (AssetOrArchiveArrayArray) ElementType() reflect.Type {
	return assetOrArchiveArrayArrayType
}

func (in AssetOrArchiveArrayArray) ToAssetOrArchiveArrayArrayOutput() AssetOrArchiveArrayArrayOutput {
	return ToOutput(in).(AssetOrArchiveArrayArrayOutput)
}

func (in AssetOrArchiveArrayArray) ToAssetOrArchiveArrayArrayOutputWithContext(ctx context.Context) AssetOrArchiveArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(AssetOrArchiveArrayArrayOutput)
}

// AssetOrArchiveArrayArrayOutput is an Output that returns [][]AssetOrArchive values.
type AssetOrArchiveArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]AssetOrArchive).
func (AssetOrArchiveArrayArrayOutput) ElementType() reflect.Type {
	return assetOrArchiveArrayArrayType
}

func (o AssetOrArchiveArrayArrayOutput) ToAssetOrArchiveArrayArrayOutput() AssetOrArchiveArrayArrayOutput {
	return o
}

func (o AssetOrArchiveArrayArrayOutput) ToAssetOrArchiveArrayArrayOutputWithContext(ctx context.Context) AssetOrArchiveArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o AssetOrArchiveArrayArrayOutput) Index(i IntInput) AssetOrArchiveArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []AssetOrArchive {
		arr := vs[0].([][]AssetOrArchive)
		idx := vs[1].(int)
		var ret []AssetOrArchive
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(AssetOrArchiveArrayOutput)
}

var boolType = reflect.TypeOf((*bool)(nil)).Elem()

// BoolInput is an input type that accepts Bool and BoolOutput values.
type BoolInput interface {
	Input

	ToBoolOutput() BoolOutput
	ToBoolOutputWithContext(ctx context.Context) BoolOutput

	ToBoolPtrOutput() BoolPtrOutput
	ToBoolPtrOutputWithContext(ctx context.Context) BoolPtrOutput
}

// Bool is an input type for bool values.
type Bool bool

// ElementType returns the element type of this Input (bool).
func (Bool) ElementType() reflect.Type {
	return boolType
}

func (in Bool) ToBoolOutput() BoolOutput {
	return ToOutput(in).(BoolOutput)
}

func (in Bool) ToBoolOutputWithContext(ctx context.Context) BoolOutput {
	return ToOutputWithContext(ctx, in).(BoolOutput)
}

func (in Bool) ToBoolPtrOutput() BoolPtrOutput {
	return in.ToBoolPtrOutputWithContext(context.Background())
}

func (in Bool) ToBoolPtrOutputWithContext(ctx context.Context) BoolPtrOutput {
	return in.ToBoolOutputWithContext(ctx).ToBoolPtrOutputWithContext(ctx)
}

// BoolOutput is an Output that returns bool values.
type BoolOutput struct{ *OutputState }

// ElementType returns the element type of this Output (bool).
func (BoolOutput) ElementType() reflect.Type {
	return boolType
}

func (o BoolOutput) ToBoolOutput() BoolOutput {
	return o
}

func (o BoolOutput) ToBoolOutputWithContext(ctx context.Context) BoolOutput {
	return o
}

func (o BoolOutput) ToBoolPtrOutput() BoolPtrOutput {
	return o.ToBoolPtrOutputWithContext(context.Background())
}

func (o BoolOutput) ToBoolPtrOutputWithContext(ctx context.Context) BoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v bool) *bool {
		return &v
	}).(BoolPtrOutput)
}

var boolPtrType = reflect.TypeOf((**bool)(nil)).Elem()

// BoolPtrInput is an input type that accepts BoolPtr and BoolPtrOutput values.
type BoolPtrInput interface {
	Input

	ToBoolPtrOutput() BoolPtrOutput
	ToBoolPtrOutputWithContext(ctx context.Context) BoolPtrOutput
}

type boolPtr bool

// BoolPtr is an input type for *bool values.
func BoolPtr(v bool) BoolPtrInput {
	return (*boolPtr)(&v)
}

// ElementType returns the element type of this Input (*bool).
func (*boolPtr) ElementType() reflect.Type {
	return boolPtrType
}

func (in *boolPtr) ToBoolPtrOutput() BoolPtrOutput {
	return ToOutput(in).(BoolPtrOutput)
}

func (in *boolPtr) ToBoolPtrOutputWithContext(ctx context.Context) BoolPtrOutput {
	return ToOutputWithContext(ctx, in).(BoolPtrOutput)
}

// BoolPtrOutput is an Output that returns *bool values.
type BoolPtrOutput struct{ *OutputState }

// ElementType returns the element type of this Output (*bool).
func (BoolPtrOutput) ElementType() reflect.Type {
	return boolPtrType
}

func (o BoolPtrOutput) ToBoolPtrOutput() BoolPtrOutput {
	return o
}

func (o BoolPtrOutput) ToBoolPtrOutputWithContext(ctx context.Context) BoolPtrOutput {
	return o
}

// Elem dereferences the pointer value or returns the zero value of the approporiate type if the pointer is nil.
func (o BoolPtrOutput) Elem() BoolOutput {
	return o.ApplyT(func(v *bool) bool {
		var ret bool
		if v != nil {
			ret = *v
		}
		return ret
	}).(BoolOutput)
}

var boolArrayType = reflect.TypeOf((*[]bool)(nil)).Elem()

// BoolArrayInput is an input type that accepts BoolArray and BoolArrayOutput values.
type BoolArrayInput interface {
	Input

	ToBoolArrayOutput() BoolArrayOutput
	ToBoolArrayOutputWithContext(ctx context.Context) BoolArrayOutput
}

// BoolArray is an input type for []BoolInput values.
type BoolArray []BoolInput

// ElementType returns the element type of this Input ([]bool).
func (BoolArray) ElementType() reflect.Type {
	return boolArrayType
}

func (in BoolArray) ToBoolArrayOutput() BoolArrayOutput {
	return ToOutput(in).(BoolArrayOutput)
}

func (in BoolArray) ToBoolArrayOutputWithContext(ctx context.Context) BoolArrayOutput {
	return ToOutputWithContext(ctx, in).(BoolArrayOutput)
}

// BoolArrayOutput is an Output that returns []bool values.
type BoolArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]bool).
func (BoolArrayOutput) ElementType() reflect.Type {
	return boolArrayType
}

func (o BoolArrayOutput) ToBoolArrayOutput() BoolArrayOutput {
	return o
}

func (o BoolArrayOutput) ToBoolArrayOutputWithContext(ctx context.Context) BoolArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o BoolArrayOutput) Index(i IntInput) BoolOutput {
	return All(o, i).ApplyT(func(vs []interface{}) bool {
		arr := vs[0].([]bool)
		idx := vs[1].(int)
		var ret bool
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(BoolOutput)
}

func ToBoolArray(in []bool) BoolArray {
	a := make(BoolArray, len(in))
	for i, v := range in {
		a[i] = Bool(v)
	}
	return a
}

func ToBoolArrayOutput(in []BoolOutput) BoolArrayOutput {
	a := make(BoolArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToBoolArrayOutput()
}

var boolMapType = reflect.TypeOf((*map[string]bool)(nil)).Elem()

// BoolMapInput is an input type that accepts BoolMap and BoolMapOutput values.
type BoolMapInput interface {
	Input

	ToBoolMapOutput() BoolMapOutput
	ToBoolMapOutputWithContext(ctx context.Context) BoolMapOutput
}

// BoolMap is an input type for map[string]BoolInput values.
type BoolMap map[string]BoolInput

// ElementType returns the element type of this Input (map[string]bool).
func (BoolMap) ElementType() reflect.Type {
	return boolMapType
}

func (in BoolMap) ToBoolMapOutput() BoolMapOutput {
	return ToOutput(in).(BoolMapOutput)
}

func (in BoolMap) ToBoolMapOutputWithContext(ctx context.Context) BoolMapOutput {
	return ToOutputWithContext(ctx, in).(BoolMapOutput)
}

// BoolMapOutput is an Output that returns map[string]bool values.
type BoolMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]bool).
func (BoolMapOutput) ElementType() reflect.Type {
	return boolMapType
}

func (o BoolMapOutput) ToBoolMapOutput() BoolMapOutput {
	return o
}

func (o BoolMapOutput) ToBoolMapOutputWithContext(ctx context.Context) BoolMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o BoolMapOutput) MapIndex(k StringInput) BoolOutput {
	return All(o, k).ApplyT(func(vs []interface{}) bool {
		return vs[0].(map[string]bool)[vs[1].(string)]
	}).(BoolOutput)
}

func ToBoolMap(in map[string]bool) BoolMap {
	m := make(BoolMap)
	for k, v := range in {
		m[k] = Bool(v)
	}
	return m
}

func ToBoolMapOutput(in map[string]BoolOutput) BoolMapOutput {
	m := make(BoolMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToBoolMapOutput()
}

var boolArrayMapType = reflect.TypeOf((*map[string][]bool)(nil)).Elem()

// BoolArrayMapInput is an input type that accepts BoolArrayMap and BoolArrayMapOutput values.
type BoolArrayMapInput interface {
	Input

	ToBoolArrayMapOutput() BoolArrayMapOutput
	ToBoolArrayMapOutputWithContext(ctx context.Context) BoolArrayMapOutput
}

// BoolArrayMap is an input type for map[string]BoolArrayInput values.
type BoolArrayMap map[string]BoolArrayInput

// ElementType returns the element type of this Input (map[string][]bool).
func (BoolArrayMap) ElementType() reflect.Type {
	return boolArrayMapType
}

func (in BoolArrayMap) ToBoolArrayMapOutput() BoolArrayMapOutput {
	return ToOutput(in).(BoolArrayMapOutput)
}

func (in BoolArrayMap) ToBoolArrayMapOutputWithContext(ctx context.Context) BoolArrayMapOutput {
	return ToOutputWithContext(ctx, in).(BoolArrayMapOutput)
}

// BoolArrayMapOutput is an Output that returns map[string][]bool values.
type BoolArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]bool).
func (BoolArrayMapOutput) ElementType() reflect.Type {
	return boolArrayMapType
}

func (o BoolArrayMapOutput) ToBoolArrayMapOutput() BoolArrayMapOutput {
	return o
}

func (o BoolArrayMapOutput) ToBoolArrayMapOutputWithContext(ctx context.Context) BoolArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o BoolArrayMapOutput) MapIndex(k StringInput) BoolArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []bool {
		return vs[0].(map[string][]bool)[vs[1].(string)]
	}).(BoolArrayOutput)
}

func ToBoolArrayMap(in map[string][]bool) BoolArrayMap {
	m := make(BoolArrayMap)
	for k, v := range in {
		m[k] = ToBoolArray(v)
	}
	return m
}

func ToBoolArrayMapOutput(in map[string]BoolArrayOutput) BoolArrayMapOutput {
	m := make(BoolArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToBoolArrayMapOutput()
}

var boolMapArrayType = reflect.TypeOf((*[]map[string]bool)(nil)).Elem()

// BoolMapArrayInput is an input type that accepts BoolMapArray and BoolMapArrayOutput values.
type BoolMapArrayInput interface {
	Input

	ToBoolMapArrayOutput() BoolMapArrayOutput
	ToBoolMapArrayOutputWithContext(ctx context.Context) BoolMapArrayOutput
}

// BoolMapArray is an input type for []BoolMapInput values.
type BoolMapArray []BoolMapInput

// ElementType returns the element type of this Input ([]map[string]bool).
func (BoolMapArray) ElementType() reflect.Type {
	return boolMapArrayType
}

func (in BoolMapArray) ToBoolMapArrayOutput() BoolMapArrayOutput {
	return ToOutput(in).(BoolMapArrayOutput)
}

func (in BoolMapArray) ToBoolMapArrayOutputWithContext(ctx context.Context) BoolMapArrayOutput {
	return ToOutputWithContext(ctx, in).(BoolMapArrayOutput)
}

// BoolMapArrayOutput is an Output that returns []map[string]bool values.
type BoolMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]bool).
func (BoolMapArrayOutput) ElementType() reflect.Type {
	return boolMapArrayType
}

func (o BoolMapArrayOutput) ToBoolMapArrayOutput() BoolMapArrayOutput {
	return o
}

func (o BoolMapArrayOutput) ToBoolMapArrayOutputWithContext(ctx context.Context) BoolMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o BoolMapArrayOutput) Index(i IntInput) BoolMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]bool {
		arr := vs[0].([]map[string]bool)
		idx := vs[1].(int)
		var ret map[string]bool
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(BoolMapOutput)
}

func ToBoolMapArray(in []map[string]bool) BoolMapArray {
	a := make(BoolMapArray, len(in))
	for i, v := range in {
		a[i] = ToBoolMap(v)
	}
	return a
}

func ToBoolMapArrayOutput(in []BoolMapOutput) BoolMapArrayOutput {
	a := make(BoolMapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToBoolMapArrayOutput()
}

var boolMapMapType = reflect.TypeOf((*map[string]map[string]bool)(nil)).Elem()

// BoolMapMapInput is an input type that accepts BoolMapMap and BoolMapMapOutput values.
type BoolMapMapInput interface {
	Input

	ToBoolMapMapOutput() BoolMapMapOutput
	ToBoolMapMapOutputWithContext(ctx context.Context) BoolMapMapOutput
}

// BoolMapMap is an input type for map[string]BoolMapInput values.
type BoolMapMap map[string]BoolMapInput

// ElementType returns the element type of this Input (map[string]map[string]bool).
func (BoolMapMap) ElementType() reflect.Type {
	return boolMapMapType
}

func (in BoolMapMap) ToBoolMapMapOutput() BoolMapMapOutput {
	return ToOutput(in).(BoolMapMapOutput)
}

func (in BoolMapMap) ToBoolMapMapOutputWithContext(ctx context.Context) BoolMapMapOutput {
	return ToOutputWithContext(ctx, in).(BoolMapMapOutput)
}

// BoolMapMapOutput is an Output that returns map[string]map[string]bool values.
type BoolMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]bool).
func (BoolMapMapOutput) ElementType() reflect.Type {
	return boolMapMapType
}

func (o BoolMapMapOutput) ToBoolMapMapOutput() BoolMapMapOutput {
	return o
}

func (o BoolMapMapOutput) ToBoolMapMapOutputWithContext(ctx context.Context) BoolMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o BoolMapMapOutput) MapIndex(k StringInput) BoolMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]bool {
		return vs[0].(map[string]map[string]bool)[vs[1].(string)]
	}).(BoolMapOutput)
}

func ToBoolMapMap(in map[string]map[string]bool) BoolMapMap {
	m := make(BoolMapMap)
	for k, v := range in {
		m[k] = ToBoolMap(v)
	}
	return m
}

func ToBoolMapMapOutput(in map[string]BoolMapOutput) BoolMapMapOutput {
	m := make(BoolMapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToBoolMapMapOutput()
}

var boolArrayArrayType = reflect.TypeOf((*[][]bool)(nil)).Elem()

// BoolArrayArrayInput is an input type that accepts BoolArrayArray and BoolArrayArrayOutput values.
type BoolArrayArrayInput interface {
	Input

	ToBoolArrayArrayOutput() BoolArrayArrayOutput
	ToBoolArrayArrayOutputWithContext(ctx context.Context) BoolArrayArrayOutput
}

// BoolArrayArray is an input type for []BoolArrayInput values.
type BoolArrayArray []BoolArrayInput

// ElementType returns the element type of this Input ([][]bool).
func (BoolArrayArray) ElementType() reflect.Type {
	return boolArrayArrayType
}

func (in BoolArrayArray) ToBoolArrayArrayOutput() BoolArrayArrayOutput {
	return ToOutput(in).(BoolArrayArrayOutput)
}

func (in BoolArrayArray) ToBoolArrayArrayOutputWithContext(ctx context.Context) BoolArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(BoolArrayArrayOutput)
}

// BoolArrayArrayOutput is an Output that returns [][]bool values.
type BoolArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]bool).
func (BoolArrayArrayOutput) ElementType() reflect.Type {
	return boolArrayArrayType
}

func (o BoolArrayArrayOutput) ToBoolArrayArrayOutput() BoolArrayArrayOutput {
	return o
}

func (o BoolArrayArrayOutput) ToBoolArrayArrayOutputWithContext(ctx context.Context) BoolArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o BoolArrayArrayOutput) Index(i IntInput) BoolArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []bool {
		arr := vs[0].([][]bool)
		idx := vs[1].(int)
		var ret []bool
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(BoolArrayOutput)
}

func ToBoolArrayArray(in [][]bool) BoolArrayArray {
	a := make(BoolArrayArray, len(in))
	for i, v := range in {
		a[i] = ToBoolArray(v)
	}
	return a
}

func ToBoolArrayArrayOutput(in []BoolArrayOutput) BoolArrayArrayOutput {
	a := make(BoolArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToBoolArrayArrayOutput()
}

var float64Type = reflect.TypeOf((*float64)(nil)).Elem()

// Float64Input is an input type that accepts Float64 and Float64Output values.
type Float64Input interface {
	Input

	ToFloat64Output() Float64Output
	ToFloat64OutputWithContext(ctx context.Context) Float64Output

	ToFloat64PtrOutput() Float64PtrOutput
	ToFloat64PtrOutputWithContext(ctx context.Context) Float64PtrOutput
}

// Float64 is an input type for float64 values.
type Float64 float64

// ElementType returns the element type of this Input (float64).
func (Float64) ElementType() reflect.Type {
	return float64Type
}

func (in Float64) ToFloat64Output() Float64Output {
	return ToOutput(in).(Float64Output)
}

func (in Float64) ToFloat64OutputWithContext(ctx context.Context) Float64Output {
	return ToOutputWithContext(ctx, in).(Float64Output)
}

func (in Float64) ToFloat64PtrOutput() Float64PtrOutput {
	return in.ToFloat64PtrOutputWithContext(context.Background())
}

func (in Float64) ToFloat64PtrOutputWithContext(ctx context.Context) Float64PtrOutput {
	return in.ToFloat64OutputWithContext(ctx).ToFloat64PtrOutputWithContext(ctx)
}

// Float64Output is an Output that returns float64 values.
type Float64Output struct{ *OutputState }

// ElementType returns the element type of this Output (float64).
func (Float64Output) ElementType() reflect.Type {
	return float64Type
}

func (o Float64Output) ToFloat64Output() Float64Output {
	return o
}

func (o Float64Output) ToFloat64OutputWithContext(ctx context.Context) Float64Output {
	return o
}

func (o Float64Output) ToFloat64PtrOutput() Float64PtrOutput {
	return o.ToFloat64PtrOutputWithContext(context.Background())
}

func (o Float64Output) ToFloat64PtrOutputWithContext(ctx context.Context) Float64PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v float64) *float64 {
		return &v
	}).(Float64PtrOutput)
}

var float64PtrType = reflect.TypeOf((**float64)(nil)).Elem()

// Float64PtrInput is an input type that accepts Float64Ptr and Float64PtrOutput values.
type Float64PtrInput interface {
	Input

	ToFloat64PtrOutput() Float64PtrOutput
	ToFloat64PtrOutputWithContext(ctx context.Context) Float64PtrOutput
}

type float64Ptr float64

// Float64Ptr is an input type for *float64 values.
func Float64Ptr(v float64) Float64PtrInput {
	return (*float64Ptr)(&v)
}

// ElementType returns the element type of this Input (*float64).
func (*float64Ptr) ElementType() reflect.Type {
	return float64PtrType
}

func (in *float64Ptr) ToFloat64PtrOutput() Float64PtrOutput {
	return ToOutput(in).(Float64PtrOutput)
}

func (in *float64Ptr) ToFloat64PtrOutputWithContext(ctx context.Context) Float64PtrOutput {
	return ToOutputWithContext(ctx, in).(Float64PtrOutput)
}

// Float64PtrOutput is an Output that returns *float64 values.
type Float64PtrOutput struct{ *OutputState }

// ElementType returns the element type of this Output (*float64).
func (Float64PtrOutput) ElementType() reflect.Type {
	return float64PtrType
}

func (o Float64PtrOutput) ToFloat64PtrOutput() Float64PtrOutput {
	return o
}

func (o Float64PtrOutput) ToFloat64PtrOutputWithContext(ctx context.Context) Float64PtrOutput {
	return o
}

// Elem dereferences the pointer value or returns the zero value of the approporiate type if the pointer is nil.
func (o Float64PtrOutput) Elem() Float64Output {
	return o.ApplyT(func(v *float64) float64 {
		var ret float64
		if v != nil {
			ret = *v
		}
		return ret
	}).(Float64Output)
}

var float64ArrayType = reflect.TypeOf((*[]float64)(nil)).Elem()

// Float64ArrayInput is an input type that accepts Float64Array and Float64ArrayOutput values.
type Float64ArrayInput interface {
	Input

	ToFloat64ArrayOutput() Float64ArrayOutput
	ToFloat64ArrayOutputWithContext(ctx context.Context) Float64ArrayOutput
}

// Float64Array is an input type for []Float64Input values.
type Float64Array []Float64Input

// ElementType returns the element type of this Input ([]float64).
func (Float64Array) ElementType() reflect.Type {
	return float64ArrayType
}

func (in Float64Array) ToFloat64ArrayOutput() Float64ArrayOutput {
	return ToOutput(in).(Float64ArrayOutput)
}

func (in Float64Array) ToFloat64ArrayOutputWithContext(ctx context.Context) Float64ArrayOutput {
	return ToOutputWithContext(ctx, in).(Float64ArrayOutput)
}

// Float64ArrayOutput is an Output that returns []float64 values.
type Float64ArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]float64).
func (Float64ArrayOutput) ElementType() reflect.Type {
	return float64ArrayType
}

func (o Float64ArrayOutput) ToFloat64ArrayOutput() Float64ArrayOutput {
	return o
}

func (o Float64ArrayOutput) ToFloat64ArrayOutputWithContext(ctx context.Context) Float64ArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o Float64ArrayOutput) Index(i IntInput) Float64Output {
	return All(o, i).ApplyT(func(vs []interface{}) float64 {
		arr := vs[0].([]float64)
		idx := vs[1].(int)
		var ret float64
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(Float64Output)
}

func ToFloat64Array(in []float64) Float64Array {
	a := make(Float64Array, len(in))
	for i, v := range in {
		a[i] = Float64(v)
	}
	return a
}

func ToFloat64ArrayOutput(in []Float64Output) Float64ArrayOutput {
	a := make(Float64Array, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToFloat64ArrayOutput()
}

var float64MapType = reflect.TypeOf((*map[string]float64)(nil)).Elem()

// Float64MapInput is an input type that accepts Float64Map and Float64MapOutput values.
type Float64MapInput interface {
	Input

	ToFloat64MapOutput() Float64MapOutput
	ToFloat64MapOutputWithContext(ctx context.Context) Float64MapOutput
}

// Float64Map is an input type for map[string]Float64Input values.
type Float64Map map[string]Float64Input

// ElementType returns the element type of this Input (map[string]float64).
func (Float64Map) ElementType() reflect.Type {
	return float64MapType
}

func (in Float64Map) ToFloat64MapOutput() Float64MapOutput {
	return ToOutput(in).(Float64MapOutput)
}

func (in Float64Map) ToFloat64MapOutputWithContext(ctx context.Context) Float64MapOutput {
	return ToOutputWithContext(ctx, in).(Float64MapOutput)
}

// Float64MapOutput is an Output that returns map[string]float64 values.
type Float64MapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]float64).
func (Float64MapOutput) ElementType() reflect.Type {
	return float64MapType
}

func (o Float64MapOutput) ToFloat64MapOutput() Float64MapOutput {
	return o
}

func (o Float64MapOutput) ToFloat64MapOutputWithContext(ctx context.Context) Float64MapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o Float64MapOutput) MapIndex(k StringInput) Float64Output {
	return All(o, k).ApplyT(func(vs []interface{}) float64 {
		return vs[0].(map[string]float64)[vs[1].(string)]
	}).(Float64Output)
}

func ToFloat64Map(in map[string]float64) Float64Map {
	m := make(Float64Map)
	for k, v := range in {
		m[k] = Float64(v)
	}
	return m
}

func ToFloat64MapOutput(in map[string]Float64Output) Float64MapOutput {
	m := make(Float64Map)
	for k, v := range in {
		m[k] = v
	}
	return m.ToFloat64MapOutput()
}

var float64ArrayMapType = reflect.TypeOf((*map[string][]float64)(nil)).Elem()

// Float64ArrayMapInput is an input type that accepts Float64ArrayMap and Float64ArrayMapOutput values.
type Float64ArrayMapInput interface {
	Input

	ToFloat64ArrayMapOutput() Float64ArrayMapOutput
	ToFloat64ArrayMapOutputWithContext(ctx context.Context) Float64ArrayMapOutput
}

// Float64ArrayMap is an input type for map[string]Float64ArrayInput values.
type Float64ArrayMap map[string]Float64ArrayInput

// ElementType returns the element type of this Input (map[string][]float64).
func (Float64ArrayMap) ElementType() reflect.Type {
	return float64ArrayMapType
}

func (in Float64ArrayMap) ToFloat64ArrayMapOutput() Float64ArrayMapOutput {
	return ToOutput(in).(Float64ArrayMapOutput)
}

func (in Float64ArrayMap) ToFloat64ArrayMapOutputWithContext(ctx context.Context) Float64ArrayMapOutput {
	return ToOutputWithContext(ctx, in).(Float64ArrayMapOutput)
}

// Float64ArrayMapOutput is an Output that returns map[string][]float64 values.
type Float64ArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]float64).
func (Float64ArrayMapOutput) ElementType() reflect.Type {
	return float64ArrayMapType
}

func (o Float64ArrayMapOutput) ToFloat64ArrayMapOutput() Float64ArrayMapOutput {
	return o
}

func (o Float64ArrayMapOutput) ToFloat64ArrayMapOutputWithContext(ctx context.Context) Float64ArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o Float64ArrayMapOutput) MapIndex(k StringInput) Float64ArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []float64 {
		return vs[0].(map[string][]float64)[vs[1].(string)]
	}).(Float64ArrayOutput)
}

func ToFloat64ArrayMap(in map[string][]float64) Float64ArrayMap {
	m := make(Float64ArrayMap)
	for k, v := range in {
		m[k] = ToFloat64Array(v)
	}
	return m
}

func ToFloat64ArrayMapOutput(in map[string]Float64ArrayOutput) Float64ArrayMapOutput {
	m := make(Float64ArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToFloat64ArrayMapOutput()
}

var float64MapArrayType = reflect.TypeOf((*[]map[string]float64)(nil)).Elem()

// Float64MapArrayInput is an input type that accepts Float64MapArray and Float64MapArrayOutput values.
type Float64MapArrayInput interface {
	Input

	ToFloat64MapArrayOutput() Float64MapArrayOutput
	ToFloat64MapArrayOutputWithContext(ctx context.Context) Float64MapArrayOutput
}

// Float64MapArray is an input type for []Float64MapInput values.
type Float64MapArray []Float64MapInput

// ElementType returns the element type of this Input ([]map[string]float64).
func (Float64MapArray) ElementType() reflect.Type {
	return float64MapArrayType
}

func (in Float64MapArray) ToFloat64MapArrayOutput() Float64MapArrayOutput {
	return ToOutput(in).(Float64MapArrayOutput)
}

func (in Float64MapArray) ToFloat64MapArrayOutputWithContext(ctx context.Context) Float64MapArrayOutput {
	return ToOutputWithContext(ctx, in).(Float64MapArrayOutput)
}

// Float64MapArrayOutput is an Output that returns []map[string]float64 values.
type Float64MapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]float64).
func (Float64MapArrayOutput) ElementType() reflect.Type {
	return float64MapArrayType
}

func (o Float64MapArrayOutput) ToFloat64MapArrayOutput() Float64MapArrayOutput {
	return o
}

func (o Float64MapArrayOutput) ToFloat64MapArrayOutputWithContext(ctx context.Context) Float64MapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o Float64MapArrayOutput) Index(i IntInput) Float64MapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]float64 {
		arr := vs[0].([]map[string]float64)
		idx := vs[1].(int)
		var ret map[string]float64
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(Float64MapOutput)
}

func ToFloat64MapArray(in []map[string]float64) Float64MapArray {
	a := make(Float64MapArray, len(in))
	for i, v := range in {
		a[i] = ToFloat64Map(v)
	}
	return a
}

func ToFloat64MapArrayOutput(in []Float64MapOutput) Float64MapArrayOutput {
	a := make(Float64MapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToFloat64MapArrayOutput()
}

var float64MapMapType = reflect.TypeOf((*map[string]map[string]float64)(nil)).Elem()

// Float64MapMapInput is an input type that accepts Float64MapMap and Float64MapMapOutput values.
type Float64MapMapInput interface {
	Input

	ToFloat64MapMapOutput() Float64MapMapOutput
	ToFloat64MapMapOutputWithContext(ctx context.Context) Float64MapMapOutput
}

// Float64MapMap is an input type for map[string]Float64MapInput values.
type Float64MapMap map[string]Float64MapInput

// ElementType returns the element type of this Input (map[string]map[string]float64).
func (Float64MapMap) ElementType() reflect.Type {
	return float64MapMapType
}

func (in Float64MapMap) ToFloat64MapMapOutput() Float64MapMapOutput {
	return ToOutput(in).(Float64MapMapOutput)
}

func (in Float64MapMap) ToFloat64MapMapOutputWithContext(ctx context.Context) Float64MapMapOutput {
	return ToOutputWithContext(ctx, in).(Float64MapMapOutput)
}

// Float64MapMapOutput is an Output that returns map[string]map[string]float64 values.
type Float64MapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]float64).
func (Float64MapMapOutput) ElementType() reflect.Type {
	return float64MapMapType
}

func (o Float64MapMapOutput) ToFloat64MapMapOutput() Float64MapMapOutput {
	return o
}

func (o Float64MapMapOutput) ToFloat64MapMapOutputWithContext(ctx context.Context) Float64MapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o Float64MapMapOutput) MapIndex(k StringInput) Float64MapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]float64 {
		return vs[0].(map[string]map[string]float64)[vs[1].(string)]
	}).(Float64MapOutput)
}

func ToFloat64MapMap(in map[string]map[string]float64) Float64MapMap {
	m := make(Float64MapMap)
	for k, v := range in {
		m[k] = ToFloat64Map(v)
	}
	return m
}

func ToFloat64MapMapOutput(in map[string]Float64MapOutput) Float64MapMapOutput {
	m := make(Float64MapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToFloat64MapMapOutput()
}

var float64ArrayArrayType = reflect.TypeOf((*[][]float64)(nil)).Elem()

// Float64ArrayArrayInput is an input type that accepts Float64ArrayArray and Float64ArrayArrayOutput values.
type Float64ArrayArrayInput interface {
	Input

	ToFloat64ArrayArrayOutput() Float64ArrayArrayOutput
	ToFloat64ArrayArrayOutputWithContext(ctx context.Context) Float64ArrayArrayOutput
}

// Float64ArrayArray is an input type for []Float64ArrayInput values.
type Float64ArrayArray []Float64ArrayInput

// ElementType returns the element type of this Input ([][]float64).
func (Float64ArrayArray) ElementType() reflect.Type {
	return float64ArrayArrayType
}

func (in Float64ArrayArray) ToFloat64ArrayArrayOutput() Float64ArrayArrayOutput {
	return ToOutput(in).(Float64ArrayArrayOutput)
}

func (in Float64ArrayArray) ToFloat64ArrayArrayOutputWithContext(ctx context.Context) Float64ArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(Float64ArrayArrayOutput)
}

// Float64ArrayArrayOutput is an Output that returns [][]float64 values.
type Float64ArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]float64).
func (Float64ArrayArrayOutput) ElementType() reflect.Type {
	return float64ArrayArrayType
}

func (o Float64ArrayArrayOutput) ToFloat64ArrayArrayOutput() Float64ArrayArrayOutput {
	return o
}

func (o Float64ArrayArrayOutput) ToFloat64ArrayArrayOutputWithContext(ctx context.Context) Float64ArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o Float64ArrayArrayOutput) Index(i IntInput) Float64ArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []float64 {
		arr := vs[0].([][]float64)
		idx := vs[1].(int)
		var ret []float64
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(Float64ArrayOutput)
}

func ToFloat64ArrayArray(in [][]float64) Float64ArrayArray {
	a := make(Float64ArrayArray, len(in))
	for i, v := range in {
		a[i] = ToFloat64Array(v)
	}
	return a
}

func ToFloat64ArrayArrayOutput(in []Float64ArrayOutput) Float64ArrayArrayOutput {
	a := make(Float64ArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToFloat64ArrayArrayOutput()
}

var idType = reflect.TypeOf((*ID)(nil)).Elem()

// IDInput is an input type that accepts ID and IDOutput values.
type IDInput interface {
	Input

	ToIDOutput() IDOutput
	ToIDOutputWithContext(ctx context.Context) IDOutput

	ToIDPtrOutput() IDPtrOutput
	ToIDPtrOutputWithContext(ctx context.Context) IDPtrOutput
}

// ElementType returns the element type of this Input (ID).
func (ID) ElementType() reflect.Type {
	return idType
}

func (in ID) ToIDOutput() IDOutput {
	return ToOutput(in).(IDOutput)
}

func (in ID) ToIDOutputWithContext(ctx context.Context) IDOutput {
	return ToOutputWithContext(ctx, in).(IDOutput)
}

func (in ID) ToStringOutput() StringOutput {
	return in.ToStringOutputWithContext(context.Background())
}

func (in ID) ToStringOutputWithContext(ctx context.Context) StringOutput {
	return in.ToIDOutputWithContext(ctx).ToStringOutputWithContext(ctx)
}

func (in ID) ToIDPtrOutput() IDPtrOutput {
	return in.ToIDPtrOutputWithContext(context.Background())
}

func (in ID) ToIDPtrOutputWithContext(ctx context.Context) IDPtrOutput {
	return in.ToIDOutputWithContext(ctx).ToIDPtrOutputWithContext(ctx)
}

// IDOutput is an Output that returns ID values.
type IDOutput struct{ *OutputState }

// ElementType returns the element type of this Output (ID).
func (IDOutput) ElementType() reflect.Type {
	return idType
}

func (o IDOutput) ToIDOutput() IDOutput {
	return o
}

func (o IDOutput) ToIDOutputWithContext(ctx context.Context) IDOutput {
	return o
}

func (o IDOutput) ToStringOutput() StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IDOutput) ToStringOutputWithContext(ctx context.Context) StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ID) string {
		return (string)(v)
	}).(StringOutput)
}

func (o IDOutput) ToIDPtrOutput() IDPtrOutput {
	return o.ToIDPtrOutputWithContext(context.Background())
}

func (o IDOutput) ToIDPtrOutputWithContext(ctx context.Context) IDPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ID) *ID {
		return &v
	}).(IDPtrOutput)
}

var iDPtrType = reflect.TypeOf((**ID)(nil)).Elem()

// IDPtrInput is an input type that accepts IDPtr and IDPtrOutput values.
type IDPtrInput interface {
	Input

	ToIDPtrOutput() IDPtrOutput
	ToIDPtrOutputWithContext(ctx context.Context) IDPtrOutput
}

type idPtr ID

// IDPtr is an input type for *ID values.
func IDPtr(v ID) IDPtrInput {
	return (*idPtr)(&v)
}

// ElementType returns the element type of this Input (*ID).
func (*idPtr) ElementType() reflect.Type {
	return iDPtrType
}

func (in *idPtr) ToIDPtrOutput() IDPtrOutput {
	return ToOutput(in).(IDPtrOutput)
}

func (in *idPtr) ToIDPtrOutputWithContext(ctx context.Context) IDPtrOutput {
	return ToOutputWithContext(ctx, in).(IDPtrOutput)
}

// IDPtrOutput is an Output that returns *ID values.
type IDPtrOutput struct{ *OutputState }

// ElementType returns the element type of this Output (*ID).
func (IDPtrOutput) ElementType() reflect.Type {
	return iDPtrType
}

func (o IDPtrOutput) ToIDPtrOutput() IDPtrOutput {
	return o
}

func (o IDPtrOutput) ToIDPtrOutputWithContext(ctx context.Context) IDPtrOutput {
	return o
}

// Elem dereferences the pointer value or returns the zero value of the approporiate type if the pointer is nil.
func (o IDPtrOutput) Elem() IDOutput {
	return o.ApplyT(func(v *ID) ID {
		var ret ID
		if v != nil {
			ret = *v
		}
		return ret
	}).(IDOutput)
}

var iDArrayType = reflect.TypeOf((*[]ID)(nil)).Elem()

// IDArrayInput is an input type that accepts IDArray and IDArrayOutput values.
type IDArrayInput interface {
	Input

	ToIDArrayOutput() IDArrayOutput
	ToIDArrayOutputWithContext(ctx context.Context) IDArrayOutput
}

// IDArray is an input type for []IDInput values.
type IDArray []IDInput

// ElementType returns the element type of this Input ([]ID).
func (IDArray) ElementType() reflect.Type {
	return iDArrayType
}

func (in IDArray) ToIDArrayOutput() IDArrayOutput {
	return ToOutput(in).(IDArrayOutput)
}

func (in IDArray) ToIDArrayOutputWithContext(ctx context.Context) IDArrayOutput {
	return ToOutputWithContext(ctx, in).(IDArrayOutput)
}

// IDArrayOutput is an Output that returns []ID values.
type IDArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]ID).
func (IDArrayOutput) ElementType() reflect.Type {
	return iDArrayType
}

func (o IDArrayOutput) ToIDArrayOutput() IDArrayOutput {
	return o
}

func (o IDArrayOutput) ToIDArrayOutputWithContext(ctx context.Context) IDArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o IDArrayOutput) Index(i IntInput) IDOutput {
	return All(o, i).ApplyT(func(vs []interface{}) ID {
		arr := vs[0].([]ID)
		idx := vs[1].(int)
		var ret ID
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(IDOutput)
}

func ToIDArray(in []ID) IDArray {
	a := make(IDArray, len(in))
	for i, v := range in {
		a[i] = (v)
	}
	return a
}

func ToIDArrayOutput(in []IDOutput) IDArrayOutput {
	a := make(IDArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToIDArrayOutput()
}

var iDMapType = reflect.TypeOf((*map[string]ID)(nil)).Elem()

// IDMapInput is an input type that accepts IDMap and IDMapOutput values.
type IDMapInput interface {
	Input

	ToIDMapOutput() IDMapOutput
	ToIDMapOutputWithContext(ctx context.Context) IDMapOutput
}

// IDMap is an input type for map[string]IDInput values.
type IDMap map[string]IDInput

// ElementType returns the element type of this Input (map[string]ID).
func (IDMap) ElementType() reflect.Type {
	return iDMapType
}

func (in IDMap) ToIDMapOutput() IDMapOutput {
	return ToOutput(in).(IDMapOutput)
}

func (in IDMap) ToIDMapOutputWithContext(ctx context.Context) IDMapOutput {
	return ToOutputWithContext(ctx, in).(IDMapOutput)
}

// IDMapOutput is an Output that returns map[string]ID values.
type IDMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]ID).
func (IDMapOutput) ElementType() reflect.Type {
	return iDMapType
}

func (o IDMapOutput) ToIDMapOutput() IDMapOutput {
	return o
}

func (o IDMapOutput) ToIDMapOutputWithContext(ctx context.Context) IDMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o IDMapOutput) MapIndex(k StringInput) IDOutput {
	return All(o, k).ApplyT(func(vs []interface{}) ID {
		return vs[0].(map[string]ID)[vs[1].(string)]
	}).(IDOutput)
}

func ToIDMap(in map[string]ID) IDMap {
	m := make(IDMap)
	for k, v := range in {
		m[k] = (v)
	}
	return m
}

func ToIDMapOutput(in map[string]IDOutput) IDMapOutput {
	m := make(IDMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToIDMapOutput()
}

var iDArrayMapType = reflect.TypeOf((*map[string][]ID)(nil)).Elem()

// IDArrayMapInput is an input type that accepts IDArrayMap and IDArrayMapOutput values.
type IDArrayMapInput interface {
	Input

	ToIDArrayMapOutput() IDArrayMapOutput
	ToIDArrayMapOutputWithContext(ctx context.Context) IDArrayMapOutput
}

// IDArrayMap is an input type for map[string]IDArrayInput values.
type IDArrayMap map[string]IDArrayInput

// ElementType returns the element type of this Input (map[string][]ID).
func (IDArrayMap) ElementType() reflect.Type {
	return iDArrayMapType
}

func (in IDArrayMap) ToIDArrayMapOutput() IDArrayMapOutput {
	return ToOutput(in).(IDArrayMapOutput)
}

func (in IDArrayMap) ToIDArrayMapOutputWithContext(ctx context.Context) IDArrayMapOutput {
	return ToOutputWithContext(ctx, in).(IDArrayMapOutput)
}

// IDArrayMapOutput is an Output that returns map[string][]ID values.
type IDArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]ID).
func (IDArrayMapOutput) ElementType() reflect.Type {
	return iDArrayMapType
}

func (o IDArrayMapOutput) ToIDArrayMapOutput() IDArrayMapOutput {
	return o
}

func (o IDArrayMapOutput) ToIDArrayMapOutputWithContext(ctx context.Context) IDArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o IDArrayMapOutput) MapIndex(k StringInput) IDArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []ID {
		return vs[0].(map[string][]ID)[vs[1].(string)]
	}).(IDArrayOutput)
}

func ToIDArrayMap(in map[string][]ID) IDArrayMap {
	m := make(IDArrayMap)
	for k, v := range in {
		m[k] = ToIDArray(v)
	}
	return m
}

func ToIDArrayMapOutput(in map[string]IDArrayOutput) IDArrayMapOutput {
	m := make(IDArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToIDArrayMapOutput()
}

var iDMapArrayType = reflect.TypeOf((*[]map[string]ID)(nil)).Elem()

// IDMapArrayInput is an input type that accepts IDMapArray and IDMapArrayOutput values.
type IDMapArrayInput interface {
	Input

	ToIDMapArrayOutput() IDMapArrayOutput
	ToIDMapArrayOutputWithContext(ctx context.Context) IDMapArrayOutput
}

// IDMapArray is an input type for []IDMapInput values.
type IDMapArray []IDMapInput

// ElementType returns the element type of this Input ([]map[string]ID).
func (IDMapArray) ElementType() reflect.Type {
	return iDMapArrayType
}

func (in IDMapArray) ToIDMapArrayOutput() IDMapArrayOutput {
	return ToOutput(in).(IDMapArrayOutput)
}

func (in IDMapArray) ToIDMapArrayOutputWithContext(ctx context.Context) IDMapArrayOutput {
	return ToOutputWithContext(ctx, in).(IDMapArrayOutput)
}

// IDMapArrayOutput is an Output that returns []map[string]ID values.
type IDMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]ID).
func (IDMapArrayOutput) ElementType() reflect.Type {
	return iDMapArrayType
}

func (o IDMapArrayOutput) ToIDMapArrayOutput() IDMapArrayOutput {
	return o
}

func (o IDMapArrayOutput) ToIDMapArrayOutputWithContext(ctx context.Context) IDMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o IDMapArrayOutput) Index(i IntInput) IDMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]ID {
		arr := vs[0].([]map[string]ID)
		idx := vs[1].(int)
		var ret map[string]ID
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(IDMapOutput)
}

func ToIDMapArray(in []map[string]ID) IDMapArray {
	a := make(IDMapArray, len(in))
	for i, v := range in {
		a[i] = ToIDMap(v)
	}
	return a
}

func ToIDMapArrayOutput(in []IDMapOutput) IDMapArrayOutput {
	a := make(IDMapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToIDMapArrayOutput()
}

var iDMapMapType = reflect.TypeOf((*map[string]map[string]ID)(nil)).Elem()

// IDMapMapInput is an input type that accepts IDMapMap and IDMapMapOutput values.
type IDMapMapInput interface {
	Input

	ToIDMapMapOutput() IDMapMapOutput
	ToIDMapMapOutputWithContext(ctx context.Context) IDMapMapOutput
}

// IDMapMap is an input type for map[string]IDMapInput values.
type IDMapMap map[string]IDMapInput

// ElementType returns the element type of this Input (map[string]map[string]ID).
func (IDMapMap) ElementType() reflect.Type {
	return iDMapMapType
}

func (in IDMapMap) ToIDMapMapOutput() IDMapMapOutput {
	return ToOutput(in).(IDMapMapOutput)
}

func (in IDMapMap) ToIDMapMapOutputWithContext(ctx context.Context) IDMapMapOutput {
	return ToOutputWithContext(ctx, in).(IDMapMapOutput)
}

// IDMapMapOutput is an Output that returns map[string]map[string]ID values.
type IDMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]ID).
func (IDMapMapOutput) ElementType() reflect.Type {
	return iDMapMapType
}

func (o IDMapMapOutput) ToIDMapMapOutput() IDMapMapOutput {
	return o
}

func (o IDMapMapOutput) ToIDMapMapOutputWithContext(ctx context.Context) IDMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o IDMapMapOutput) MapIndex(k StringInput) IDMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]ID {
		return vs[0].(map[string]map[string]ID)[vs[1].(string)]
	}).(IDMapOutput)
}

func ToIDMapMap(in map[string]map[string]ID) IDMapMap {
	m := make(IDMapMap)
	for k, v := range in {
		m[k] = ToIDMap(v)
	}
	return m
}

func ToIDMapMapOutput(in map[string]IDMapOutput) IDMapMapOutput {
	m := make(IDMapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToIDMapMapOutput()
}

var iDArrayArrayType = reflect.TypeOf((*[][]ID)(nil)).Elem()

// IDArrayArrayInput is an input type that accepts IDArrayArray and IDArrayArrayOutput values.
type IDArrayArrayInput interface {
	Input

	ToIDArrayArrayOutput() IDArrayArrayOutput
	ToIDArrayArrayOutputWithContext(ctx context.Context) IDArrayArrayOutput
}

// IDArrayArray is an input type for []IDArrayInput values.
type IDArrayArray []IDArrayInput

// ElementType returns the element type of this Input ([][]ID).
func (IDArrayArray) ElementType() reflect.Type {
	return iDArrayArrayType
}

func (in IDArrayArray) ToIDArrayArrayOutput() IDArrayArrayOutput {
	return ToOutput(in).(IDArrayArrayOutput)
}

func (in IDArrayArray) ToIDArrayArrayOutputWithContext(ctx context.Context) IDArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(IDArrayArrayOutput)
}

// IDArrayArrayOutput is an Output that returns [][]ID values.
type IDArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]ID).
func (IDArrayArrayOutput) ElementType() reflect.Type {
	return iDArrayArrayType
}

func (o IDArrayArrayOutput) ToIDArrayArrayOutput() IDArrayArrayOutput {
	return o
}

func (o IDArrayArrayOutput) ToIDArrayArrayOutputWithContext(ctx context.Context) IDArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o IDArrayArrayOutput) Index(i IntInput) IDArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []ID {
		arr := vs[0].([][]ID)
		idx := vs[1].(int)
		var ret []ID
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(IDArrayOutput)
}

func ToIDArrayArray(in [][]ID) IDArrayArray {
	a := make(IDArrayArray, len(in))
	for i, v := range in {
		a[i] = ToIDArray(v)
	}
	return a
}

func ToIDArrayArrayOutput(in []IDArrayOutput) IDArrayArrayOutput {
	a := make(IDArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToIDArrayArrayOutput()
}

var arrayType = reflect.TypeOf((*[]interface{})(nil)).Elem()

// ArrayInput is an input type that accepts Array and ArrayOutput values.
type ArrayInput interface {
	Input

	ToArrayOutput() ArrayOutput
	ToArrayOutputWithContext(ctx context.Context) ArrayOutput
}

// Array is an input type for []Input values.
type Array []Input

// ElementType returns the element type of this Input ([]interface{}).
func (Array) ElementType() reflect.Type {
	return arrayType
}

func (in Array) ToArrayOutput() ArrayOutput {
	return ToOutput(in).(ArrayOutput)
}

func (in Array) ToArrayOutputWithContext(ctx context.Context) ArrayOutput {
	return ToOutputWithContext(ctx, in).(ArrayOutput)
}

// ArrayOutput is an Output that returns []interface{} values.
type ArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]interface{}).
func (ArrayOutput) ElementType() reflect.Type {
	return arrayType
}

func (o ArrayOutput) ToArrayOutput() ArrayOutput {
	return o
}

func (o ArrayOutput) ToArrayOutputWithContext(ctx context.Context) ArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o ArrayOutput) Index(i IntInput) Output {
	return All(o, i).ApplyT(func(vs []interface{}) interface{} {
		arr := vs[0].([]interface{})
		idx := vs[1].(int)
		var ret interface{}
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(Output)
}

func ToArray(in []interface{}) Array {
	a := make(Array, len(in))
	for i, v := range in {
		a[i] = ToOutput(v)
	}
	return a
}

func ToArrayOutput(in []Output) ArrayOutput {
	a := make(Array, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToArrayOutput()
}

var mapType = reflect.TypeOf((*map[string]interface{})(nil)).Elem()

// MapInput is an input type that accepts Map and MapOutput values.
type MapInput interface {
	Input

	ToMapOutput() MapOutput
	ToMapOutputWithContext(ctx context.Context) MapOutput
}

// Map is an input type for map[string]Input values.
type Map map[string]Input

// ElementType returns the element type of this Input (map[string]interface{}).
func (Map) ElementType() reflect.Type {
	return mapType
}

func (in Map) ToMapOutput() MapOutput {
	return ToOutput(in).(MapOutput)
}

func (in Map) ToMapOutputWithContext(ctx context.Context) MapOutput {
	return ToOutputWithContext(ctx, in).(MapOutput)
}

// MapOutput is an Output that returns map[string]interface{} values.
type MapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]interface{}).
func (MapOutput) ElementType() reflect.Type {
	return mapType
}

func (o MapOutput) ToMapOutput() MapOutput {
	return o
}

func (o MapOutput) ToMapOutputWithContext(ctx context.Context) MapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o MapOutput) MapIndex(k StringInput) Output {
	return All(o, k).ApplyT(func(vs []interface{}) interface{} {
		return vs[0].(map[string]interface{})[vs[1].(string)]
	}).(Output)
}

func ToMap(in map[string]interface{}) Map {
	m := make(Map)
	for k, v := range in {
		m[k] = ToOutput(v)
	}
	return m
}

func ToMapOutput(in map[string]Output) MapOutput {
	m := make(Map)
	for k, v := range in {
		m[k] = v
	}
	return m.ToMapOutput()
}

var arrayMapType = reflect.TypeOf((*map[string][]interface{})(nil)).Elem()

// ArrayMapInput is an input type that accepts ArrayMap and ArrayMapOutput values.
type ArrayMapInput interface {
	Input

	ToArrayMapOutput() ArrayMapOutput
	ToArrayMapOutputWithContext(ctx context.Context) ArrayMapOutput
}

// ArrayMap is an input type for map[string]ArrayInput values.
type ArrayMap map[string]ArrayInput

// ElementType returns the element type of this Input (map[string][]interface{}).
func (ArrayMap) ElementType() reflect.Type {
	return arrayMapType
}

func (in ArrayMap) ToArrayMapOutput() ArrayMapOutput {
	return ToOutput(in).(ArrayMapOutput)
}

func (in ArrayMap) ToArrayMapOutputWithContext(ctx context.Context) ArrayMapOutput {
	return ToOutputWithContext(ctx, in).(ArrayMapOutput)
}

// ArrayMapOutput is an Output that returns map[string][]interface{} values.
type ArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]interface{}).
func (ArrayMapOutput) ElementType() reflect.Type {
	return arrayMapType
}

func (o ArrayMapOutput) ToArrayMapOutput() ArrayMapOutput {
	return o
}

func (o ArrayMapOutput) ToArrayMapOutputWithContext(ctx context.Context) ArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o ArrayMapOutput) MapIndex(k StringInput) ArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []interface{} {
		return vs[0].(map[string][]interface{})[vs[1].(string)]
	}).(ArrayOutput)
}

func ToArrayMap(in map[string][]interface{}) ArrayMap {
	m := make(ArrayMap)
	for k, v := range in {
		m[k] = ToArray(v)
	}
	return m
}

func ToArrayMapOutput(in map[string]ArrayOutput) ArrayMapOutput {
	m := make(ArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToArrayMapOutput()
}

var mapArrayType = reflect.TypeOf((*[]map[string]interface{})(nil)).Elem()

// MapArrayInput is an input type that accepts MapArray and MapArrayOutput values.
type MapArrayInput interface {
	Input

	ToMapArrayOutput() MapArrayOutput
	ToMapArrayOutputWithContext(ctx context.Context) MapArrayOutput
}

// MapArray is an input type for []MapInput values.
type MapArray []MapInput

// ElementType returns the element type of this Input ([]map[string]interface{}).
func (MapArray) ElementType() reflect.Type {
	return mapArrayType
}

func (in MapArray) ToMapArrayOutput() MapArrayOutput {
	return ToOutput(in).(MapArrayOutput)
}

func (in MapArray) ToMapArrayOutputWithContext(ctx context.Context) MapArrayOutput {
	return ToOutputWithContext(ctx, in).(MapArrayOutput)
}

// MapArrayOutput is an Output that returns []map[string]interface{} values.
type MapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]interface{}).
func (MapArrayOutput) ElementType() reflect.Type {
	return mapArrayType
}

func (o MapArrayOutput) ToMapArrayOutput() MapArrayOutput {
	return o
}

func (o MapArrayOutput) ToMapArrayOutputWithContext(ctx context.Context) MapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o MapArrayOutput) Index(i IntInput) MapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]interface{} {
		arr := vs[0].([]map[string]interface{})
		idx := vs[1].(int)
		var ret map[string]interface{}
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(MapOutput)
}

func ToMapArray(in []map[string]interface{}) MapArray {
	a := make(MapArray, len(in))
	for i, v := range in {
		a[i] = ToMap(v)
	}
	return a
}

func ToMapArrayOutput(in []MapOutput) MapArrayOutput {
	a := make(MapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToMapArrayOutput()
}

var mapMapType = reflect.TypeOf((*map[string]map[string]interface{})(nil)).Elem()

// MapMapInput is an input type that accepts MapMap and MapMapOutput values.
type MapMapInput interface {
	Input

	ToMapMapOutput() MapMapOutput
	ToMapMapOutputWithContext(ctx context.Context) MapMapOutput
}

// MapMap is an input type for map[string]MapInput values.
type MapMap map[string]MapInput

// ElementType returns the element type of this Input (map[string]map[string]interface{}).
func (MapMap) ElementType() reflect.Type {
	return mapMapType
}

func (in MapMap) ToMapMapOutput() MapMapOutput {
	return ToOutput(in).(MapMapOutput)
}

func (in MapMap) ToMapMapOutputWithContext(ctx context.Context) MapMapOutput {
	return ToOutputWithContext(ctx, in).(MapMapOutput)
}

// MapMapOutput is an Output that returns map[string]map[string]interface{} values.
type MapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]interface{}).
func (MapMapOutput) ElementType() reflect.Type {
	return mapMapType
}

func (o MapMapOutput) ToMapMapOutput() MapMapOutput {
	return o
}

func (o MapMapOutput) ToMapMapOutputWithContext(ctx context.Context) MapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o MapMapOutput) MapIndex(k StringInput) MapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]interface{} {
		return vs[0].(map[string]map[string]interface{})[vs[1].(string)]
	}).(MapOutput)
}

func ToMapMap(in map[string]map[string]interface{}) MapMap {
	m := make(MapMap)
	for k, v := range in {
		m[k] = ToMap(v)
	}
	return m
}

func ToMapMapOutput(in map[string]MapOutput) MapMapOutput {
	m := make(MapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToMapMapOutput()
}

var arrayArrayType = reflect.TypeOf((*[][]interface{})(nil)).Elem()

// ArrayArrayInput is an input type that accepts ArrayArray and ArrayArrayOutput values.
type ArrayArrayInput interface {
	Input

	ToArrayArrayOutput() ArrayArrayOutput
	ToArrayArrayOutputWithContext(ctx context.Context) ArrayArrayOutput
}

// ArrayArray is an input type for []ArrayInput values.
type ArrayArray []ArrayInput

// ElementType returns the element type of this Input ([][]interface{}).
func (ArrayArray) ElementType() reflect.Type {
	return arrayArrayType
}

func (in ArrayArray) ToArrayArrayOutput() ArrayArrayOutput {
	return ToOutput(in).(ArrayArrayOutput)
}

func (in ArrayArray) ToArrayArrayOutputWithContext(ctx context.Context) ArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(ArrayArrayOutput)
}

// ArrayArrayOutput is an Output that returns [][]interface{} values.
type ArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]interface{}).
func (ArrayArrayOutput) ElementType() reflect.Type {
	return arrayArrayType
}

func (o ArrayArrayOutput) ToArrayArrayOutput() ArrayArrayOutput {
	return o
}

func (o ArrayArrayOutput) ToArrayArrayOutputWithContext(ctx context.Context) ArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o ArrayArrayOutput) Index(i IntInput) ArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []interface{} {
		arr := vs[0].([][]interface{})
		idx := vs[1].(int)
		var ret []interface{}
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(ArrayOutput)
}

func ToArrayArray(in [][]interface{}) ArrayArray {
	a := make(ArrayArray, len(in))
	for i, v := range in {
		a[i] = ToArray(v)
	}
	return a
}

func ToArrayArrayOutput(in []ArrayOutput) ArrayArrayOutput {
	a := make(ArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToArrayArrayOutput()
}

var intType = reflect.TypeOf((*int)(nil)).Elem()

// IntInput is an input type that accepts Int and IntOutput values.
type IntInput interface {
	Input

	ToIntOutput() IntOutput
	ToIntOutputWithContext(ctx context.Context) IntOutput

	ToIntPtrOutput() IntPtrOutput
	ToIntPtrOutputWithContext(ctx context.Context) IntPtrOutput
}

// Int is an input type for int values.
type Int int

// ElementType returns the element type of this Input (int).
func (Int) ElementType() reflect.Type {
	return intType
}

func (in Int) ToIntOutput() IntOutput {
	return ToOutput(in).(IntOutput)
}

func (in Int) ToIntOutputWithContext(ctx context.Context) IntOutput {
	return ToOutputWithContext(ctx, in).(IntOutput)
}

func (in Int) ToIntPtrOutput() IntPtrOutput {
	return in.ToIntPtrOutputWithContext(context.Background())
}

func (in Int) ToIntPtrOutputWithContext(ctx context.Context) IntPtrOutput {
	return in.ToIntOutputWithContext(ctx).ToIntPtrOutputWithContext(ctx)
}

// IntOutput is an Output that returns int values.
type IntOutput struct{ *OutputState }

// ElementType returns the element type of this Output (int).
func (IntOutput) ElementType() reflect.Type {
	return intType
}

func (o IntOutput) ToIntOutput() IntOutput {
	return o
}

func (o IntOutput) ToIntOutputWithContext(ctx context.Context) IntOutput {
	return o
}

func (o IntOutput) ToIntPtrOutput() IntPtrOutput {
	return o.ToIntPtrOutputWithContext(context.Background())
}

func (o IntOutput) ToIntPtrOutputWithContext(ctx context.Context) IntPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v int) *int {
		return &v
	}).(IntPtrOutput)
}

var intPtrType = reflect.TypeOf((**int)(nil)).Elem()

// IntPtrInput is an input type that accepts IntPtr and IntPtrOutput values.
type IntPtrInput interface {
	Input

	ToIntPtrOutput() IntPtrOutput
	ToIntPtrOutputWithContext(ctx context.Context) IntPtrOutput
}

type intPtr int

// IntPtr is an input type for *int values.
func IntPtr(v int) IntPtrInput {
	return (*intPtr)(&v)
}

// ElementType returns the element type of this Input (*int).
func (*intPtr) ElementType() reflect.Type {
	return intPtrType
}

func (in *intPtr) ToIntPtrOutput() IntPtrOutput {
	return ToOutput(in).(IntPtrOutput)
}

func (in *intPtr) ToIntPtrOutputWithContext(ctx context.Context) IntPtrOutput {
	return ToOutputWithContext(ctx, in).(IntPtrOutput)
}

// IntPtrOutput is an Output that returns *int values.
type IntPtrOutput struct{ *OutputState }

// ElementType returns the element type of this Output (*int).
func (IntPtrOutput) ElementType() reflect.Type {
	return intPtrType
}

func (o IntPtrOutput) ToIntPtrOutput() IntPtrOutput {
	return o
}

func (o IntPtrOutput) ToIntPtrOutputWithContext(ctx context.Context) IntPtrOutput {
	return o
}

// Elem dereferences the pointer value or returns the zero value of the approporiate type if the pointer is nil.
func (o IntPtrOutput) Elem() IntOutput {
	return o.ApplyT(func(v *int) int {
		var ret int
		if v != nil {
			ret = *v
		}
		return ret
	}).(IntOutput)
}

var intArrayType = reflect.TypeOf((*[]int)(nil)).Elem()

// IntArrayInput is an input type that accepts IntArray and IntArrayOutput values.
type IntArrayInput interface {
	Input

	ToIntArrayOutput() IntArrayOutput
	ToIntArrayOutputWithContext(ctx context.Context) IntArrayOutput
}

// IntArray is an input type for []IntInput values.
type IntArray []IntInput

// ElementType returns the element type of this Input ([]int).
func (IntArray) ElementType() reflect.Type {
	return intArrayType
}

func (in IntArray) ToIntArrayOutput() IntArrayOutput {
	return ToOutput(in).(IntArrayOutput)
}

func (in IntArray) ToIntArrayOutputWithContext(ctx context.Context) IntArrayOutput {
	return ToOutputWithContext(ctx, in).(IntArrayOutput)
}

// IntArrayOutput is an Output that returns []int values.
type IntArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]int).
func (IntArrayOutput) ElementType() reflect.Type {
	return intArrayType
}

func (o IntArrayOutput) ToIntArrayOutput() IntArrayOutput {
	return o
}

func (o IntArrayOutput) ToIntArrayOutputWithContext(ctx context.Context) IntArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o IntArrayOutput) Index(i IntInput) IntOutput {
	return All(o, i).ApplyT(func(vs []interface{}) int {
		arr := vs[0].([]int)
		idx := vs[1].(int)
		var ret int
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(IntOutput)
}

func ToIntArray(in []int) IntArray {
	a := make(IntArray, len(in))
	for i, v := range in {
		a[i] = Int(v)
	}
	return a
}

func ToIntArrayOutput(in []IntOutput) IntArrayOutput {
	a := make(IntArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToIntArrayOutput()
}

var intMapType = reflect.TypeOf((*map[string]int)(nil)).Elem()

// IntMapInput is an input type that accepts IntMap and IntMapOutput values.
type IntMapInput interface {
	Input

	ToIntMapOutput() IntMapOutput
	ToIntMapOutputWithContext(ctx context.Context) IntMapOutput
}

// IntMap is an input type for map[string]IntInput values.
type IntMap map[string]IntInput

// ElementType returns the element type of this Input (map[string]int).
func (IntMap) ElementType() reflect.Type {
	return intMapType
}

func (in IntMap) ToIntMapOutput() IntMapOutput {
	return ToOutput(in).(IntMapOutput)
}

func (in IntMap) ToIntMapOutputWithContext(ctx context.Context) IntMapOutput {
	return ToOutputWithContext(ctx, in).(IntMapOutput)
}

// IntMapOutput is an Output that returns map[string]int values.
type IntMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]int).
func (IntMapOutput) ElementType() reflect.Type {
	return intMapType
}

func (o IntMapOutput) ToIntMapOutput() IntMapOutput {
	return o
}

func (o IntMapOutput) ToIntMapOutputWithContext(ctx context.Context) IntMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o IntMapOutput) MapIndex(k StringInput) IntOutput {
	return All(o, k).ApplyT(func(vs []interface{}) int {
		return vs[0].(map[string]int)[vs[1].(string)]
	}).(IntOutput)
}

func ToIntMap(in map[string]int) IntMap {
	m := make(IntMap)
	for k, v := range in {
		m[k] = Int(v)
	}
	return m
}

func ToIntMapOutput(in map[string]IntOutput) IntMapOutput {
	m := make(IntMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToIntMapOutput()
}

var intArrayMapType = reflect.TypeOf((*map[string][]int)(nil)).Elem()

// IntArrayMapInput is an input type that accepts IntArrayMap and IntArrayMapOutput values.
type IntArrayMapInput interface {
	Input

	ToIntArrayMapOutput() IntArrayMapOutput
	ToIntArrayMapOutputWithContext(ctx context.Context) IntArrayMapOutput
}

// IntArrayMap is an input type for map[string]IntArrayInput values.
type IntArrayMap map[string]IntArrayInput

// ElementType returns the element type of this Input (map[string][]int).
func (IntArrayMap) ElementType() reflect.Type {
	return intArrayMapType
}

func (in IntArrayMap) ToIntArrayMapOutput() IntArrayMapOutput {
	return ToOutput(in).(IntArrayMapOutput)
}

func (in IntArrayMap) ToIntArrayMapOutputWithContext(ctx context.Context) IntArrayMapOutput {
	return ToOutputWithContext(ctx, in).(IntArrayMapOutput)
}

// IntArrayMapOutput is an Output that returns map[string][]int values.
type IntArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]int).
func (IntArrayMapOutput) ElementType() reflect.Type {
	return intArrayMapType
}

func (o IntArrayMapOutput) ToIntArrayMapOutput() IntArrayMapOutput {
	return o
}

func (o IntArrayMapOutput) ToIntArrayMapOutputWithContext(ctx context.Context) IntArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o IntArrayMapOutput) MapIndex(k StringInput) IntArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []int {
		return vs[0].(map[string][]int)[vs[1].(string)]
	}).(IntArrayOutput)
}

func ToIntArrayMap(in map[string][]int) IntArrayMap {
	m := make(IntArrayMap)
	for k, v := range in {
		m[k] = ToIntArray(v)
	}
	return m
}

func ToIntArrayMapOutput(in map[string]IntArrayOutput) IntArrayMapOutput {
	m := make(IntArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToIntArrayMapOutput()
}

var intMapArrayType = reflect.TypeOf((*[]map[string]int)(nil)).Elem()

// IntMapArrayInput is an input type that accepts IntMapArray and IntMapArrayOutput values.
type IntMapArrayInput interface {
	Input

	ToIntMapArrayOutput() IntMapArrayOutput
	ToIntMapArrayOutputWithContext(ctx context.Context) IntMapArrayOutput
}

// IntMapArray is an input type for []IntMapInput values.
type IntMapArray []IntMapInput

// ElementType returns the element type of this Input ([]map[string]int).
func (IntMapArray) ElementType() reflect.Type {
	return intMapArrayType
}

func (in IntMapArray) ToIntMapArrayOutput() IntMapArrayOutput {
	return ToOutput(in).(IntMapArrayOutput)
}

func (in IntMapArray) ToIntMapArrayOutputWithContext(ctx context.Context) IntMapArrayOutput {
	return ToOutputWithContext(ctx, in).(IntMapArrayOutput)
}

// IntMapArrayOutput is an Output that returns []map[string]int values.
type IntMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]int).
func (IntMapArrayOutput) ElementType() reflect.Type {
	return intMapArrayType
}

func (o IntMapArrayOutput) ToIntMapArrayOutput() IntMapArrayOutput {
	return o
}

func (o IntMapArrayOutput) ToIntMapArrayOutputWithContext(ctx context.Context) IntMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o IntMapArrayOutput) Index(i IntInput) IntMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]int {
		arr := vs[0].([]map[string]int)
		idx := vs[1].(int)
		var ret map[string]int
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(IntMapOutput)
}

func ToIntMapArray(in []map[string]int) IntMapArray {
	a := make(IntMapArray, len(in))
	for i, v := range in {
		a[i] = ToIntMap(v)
	}
	return a
}

func ToIntMapArrayOutput(in []IntMapOutput) IntMapArrayOutput {
	a := make(IntMapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToIntMapArrayOutput()
}

var intMapMapType = reflect.TypeOf((*map[string]map[string]int)(nil)).Elem()

// IntMapMapInput is an input type that accepts IntMapMap and IntMapMapOutput values.
type IntMapMapInput interface {
	Input

	ToIntMapMapOutput() IntMapMapOutput
	ToIntMapMapOutputWithContext(ctx context.Context) IntMapMapOutput
}

// IntMapMap is an input type for map[string]IntMapInput values.
type IntMapMap map[string]IntMapInput

// ElementType returns the element type of this Input (map[string]map[string]int).
func (IntMapMap) ElementType() reflect.Type {
	return intMapMapType
}

func (in IntMapMap) ToIntMapMapOutput() IntMapMapOutput {
	return ToOutput(in).(IntMapMapOutput)
}

func (in IntMapMap) ToIntMapMapOutputWithContext(ctx context.Context) IntMapMapOutput {
	return ToOutputWithContext(ctx, in).(IntMapMapOutput)
}

// IntMapMapOutput is an Output that returns map[string]map[string]int values.
type IntMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]int).
func (IntMapMapOutput) ElementType() reflect.Type {
	return intMapMapType
}

func (o IntMapMapOutput) ToIntMapMapOutput() IntMapMapOutput {
	return o
}

func (o IntMapMapOutput) ToIntMapMapOutputWithContext(ctx context.Context) IntMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o IntMapMapOutput) MapIndex(k StringInput) IntMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]int {
		return vs[0].(map[string]map[string]int)[vs[1].(string)]
	}).(IntMapOutput)
}

func ToIntMapMap(in map[string]map[string]int) IntMapMap {
	m := make(IntMapMap)
	for k, v := range in {
		m[k] = ToIntMap(v)
	}
	return m
}

func ToIntMapMapOutput(in map[string]IntMapOutput) IntMapMapOutput {
	m := make(IntMapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToIntMapMapOutput()
}

var intArrayArrayType = reflect.TypeOf((*[][]int)(nil)).Elem()

// IntArrayArrayInput is an input type that accepts IntArrayArray and IntArrayArrayOutput values.
type IntArrayArrayInput interface {
	Input

	ToIntArrayArrayOutput() IntArrayArrayOutput
	ToIntArrayArrayOutputWithContext(ctx context.Context) IntArrayArrayOutput
}

// IntArrayArray is an input type for []IntArrayInput values.
type IntArrayArray []IntArrayInput

// ElementType returns the element type of this Input ([][]int).
func (IntArrayArray) ElementType() reflect.Type {
	return intArrayArrayType
}

func (in IntArrayArray) ToIntArrayArrayOutput() IntArrayArrayOutput {
	return ToOutput(in).(IntArrayArrayOutput)
}

func (in IntArrayArray) ToIntArrayArrayOutputWithContext(ctx context.Context) IntArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(IntArrayArrayOutput)
}

// IntArrayArrayOutput is an Output that returns [][]int values.
type IntArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]int).
func (IntArrayArrayOutput) ElementType() reflect.Type {
	return intArrayArrayType
}

func (o IntArrayArrayOutput) ToIntArrayArrayOutput() IntArrayArrayOutput {
	return o
}

func (o IntArrayArrayOutput) ToIntArrayArrayOutputWithContext(ctx context.Context) IntArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o IntArrayArrayOutput) Index(i IntInput) IntArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []int {
		arr := vs[0].([][]int)
		idx := vs[1].(int)
		var ret []int
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(IntArrayOutput)
}

func ToIntArrayArray(in [][]int) IntArrayArray {
	a := make(IntArrayArray, len(in))
	for i, v := range in {
		a[i] = ToIntArray(v)
	}
	return a
}

func ToIntArrayArrayOutput(in []IntArrayOutput) IntArrayArrayOutput {
	a := make(IntArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToIntArrayArrayOutput()
}

var stringType = reflect.TypeOf((*string)(nil)).Elem()

// StringInput is an input type that accepts String and StringOutput values.
type StringInput interface {
	Input

	ToStringOutput() StringOutput
	ToStringOutputWithContext(ctx context.Context) StringOutput

	ToStringPtrOutput() StringPtrOutput
	ToStringPtrOutputWithContext(ctx context.Context) StringPtrOutput
}

// String is an input type for string values.
type String string

// ElementType returns the element type of this Input (string).
func (String) ElementType() reflect.Type {
	return stringType
}

func (in String) ToStringOutput() StringOutput {
	return ToOutput(in).(StringOutput)
}

func (in String) ToStringOutputWithContext(ctx context.Context) StringOutput {
	return ToOutputWithContext(ctx, in).(StringOutput)
}

func (in String) ToStringPtrOutput() StringPtrOutput {
	return in.ToStringPtrOutputWithContext(context.Background())
}

func (in String) ToStringPtrOutputWithContext(ctx context.Context) StringPtrOutput {
	return in.ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// StringOutput is an Output that returns string values.
type StringOutput struct{ *OutputState }

// ElementType returns the element type of this Output (string).
func (StringOutput) ElementType() reflect.Type {
	return stringType
}

func (o StringOutput) ToStringOutput() StringOutput {
	return o
}

func (o StringOutput) ToStringOutputWithContext(ctx context.Context) StringOutput {
	return o
}

func (o StringOutput) ToStringPtrOutput() StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StringOutput) ToStringPtrOutputWithContext(ctx context.Context) StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v string) *string {
		return &v
	}).(StringPtrOutput)
}

var stringPtrType = reflect.TypeOf((**string)(nil)).Elem()

// StringPtrInput is an input type that accepts StringPtr and StringPtrOutput values.
type StringPtrInput interface {
	Input

	ToStringPtrOutput() StringPtrOutput
	ToStringPtrOutputWithContext(ctx context.Context) StringPtrOutput
}

type stringPtr string

// StringPtr is an input type for *string values.
func StringPtr(v string) StringPtrInput {
	return (*stringPtr)(&v)
}

// ElementType returns the element type of this Input (*string).
func (*stringPtr) ElementType() reflect.Type {
	return stringPtrType
}

func (in *stringPtr) ToStringPtrOutput() StringPtrOutput {
	return ToOutput(in).(StringPtrOutput)
}

func (in *stringPtr) ToStringPtrOutputWithContext(ctx context.Context) StringPtrOutput {
	return ToOutputWithContext(ctx, in).(StringPtrOutput)
}

// StringPtrOutput is an Output that returns *string values.
type StringPtrOutput struct{ *OutputState }

// ElementType returns the element type of this Output (*string).
func (StringPtrOutput) ElementType() reflect.Type {
	return stringPtrType
}

func (o StringPtrOutput) ToStringPtrOutput() StringPtrOutput {
	return o
}

func (o StringPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) StringPtrOutput {
	return o
}

// Elem dereferences the pointer value or returns the zero value of the approporiate type if the pointer is nil.
func (o StringPtrOutput) Elem() StringOutput {
	return o.ApplyT(func(v *string) string {
		var ret string
		if v != nil {
			ret = *v
		}
		return ret
	}).(StringOutput)
}

var stringArrayType = reflect.TypeOf((*[]string)(nil)).Elem()

// StringArrayInput is an input type that accepts StringArray and StringArrayOutput values.
type StringArrayInput interface {
	Input

	ToStringArrayOutput() StringArrayOutput
	ToStringArrayOutputWithContext(ctx context.Context) StringArrayOutput
}

// StringArray is an input type for []StringInput values.
type StringArray []StringInput

// ElementType returns the element type of this Input ([]string).
func (StringArray) ElementType() reflect.Type {
	return stringArrayType
}

func (in StringArray) ToStringArrayOutput() StringArrayOutput {
	return ToOutput(in).(StringArrayOutput)
}

func (in StringArray) ToStringArrayOutputWithContext(ctx context.Context) StringArrayOutput {
	return ToOutputWithContext(ctx, in).(StringArrayOutput)
}

// StringArrayOutput is an Output that returns []string values.
type StringArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]string).
func (StringArrayOutput) ElementType() reflect.Type {
	return stringArrayType
}

func (o StringArrayOutput) ToStringArrayOutput() StringArrayOutput {
	return o
}

func (o StringArrayOutput) ToStringArrayOutputWithContext(ctx context.Context) StringArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o StringArrayOutput) Index(i IntInput) StringOutput {
	return All(o, i).ApplyT(func(vs []interface{}) string {
		arr := vs[0].([]string)
		idx := vs[1].(int)
		var ret string
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(StringOutput)
}

func ToStringArray(in []string) StringArray {
	a := make(StringArray, len(in))
	for i, v := range in {
		a[i] = String(v)
	}
	return a
}

func ToStringArrayOutput(in []StringOutput) StringArrayOutput {
	a := make(StringArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToStringArrayOutput()
}

var stringMapType = reflect.TypeOf((*map[string]string)(nil)).Elem()

// StringMapInput is an input type that accepts StringMap and StringMapOutput values.
type StringMapInput interface {
	Input

	ToStringMapOutput() StringMapOutput
	ToStringMapOutputWithContext(ctx context.Context) StringMapOutput
}

// StringMap is an input type for map[string]StringInput values.
type StringMap map[string]StringInput

// ElementType returns the element type of this Input (map[string]string).
func (StringMap) ElementType() reflect.Type {
	return stringMapType
}

func (in StringMap) ToStringMapOutput() StringMapOutput {
	return ToOutput(in).(StringMapOutput)
}

func (in StringMap) ToStringMapOutputWithContext(ctx context.Context) StringMapOutput {
	return ToOutputWithContext(ctx, in).(StringMapOutput)
}

// StringMapOutput is an Output that returns map[string]string values.
type StringMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]string).
func (StringMapOutput) ElementType() reflect.Type {
	return stringMapType
}

func (o StringMapOutput) ToStringMapOutput() StringMapOutput {
	return o
}

func (o StringMapOutput) ToStringMapOutputWithContext(ctx context.Context) StringMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o StringMapOutput) MapIndex(k StringInput) StringOutput {
	return All(o, k).ApplyT(func(vs []interface{}) string {
		return vs[0].(map[string]string)[vs[1].(string)]
	}).(StringOutput)
}

func ToStringMap(in map[string]string) StringMap {
	m := make(StringMap)
	for k, v := range in {
		m[k] = String(v)
	}
	return m
}

func ToStringMapOutput(in map[string]StringOutput) StringMapOutput {
	m := make(StringMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToStringMapOutput()
}

var stringArrayMapType = reflect.TypeOf((*map[string][]string)(nil)).Elem()

// StringArrayMapInput is an input type that accepts StringArrayMap and StringArrayMapOutput values.
type StringArrayMapInput interface {
	Input

	ToStringArrayMapOutput() StringArrayMapOutput
	ToStringArrayMapOutputWithContext(ctx context.Context) StringArrayMapOutput
}

// StringArrayMap is an input type for map[string]StringArrayInput values.
type StringArrayMap map[string]StringArrayInput

// ElementType returns the element type of this Input (map[string][]string).
func (StringArrayMap) ElementType() reflect.Type {
	return stringArrayMapType
}

func (in StringArrayMap) ToStringArrayMapOutput() StringArrayMapOutput {
	return ToOutput(in).(StringArrayMapOutput)
}

func (in StringArrayMap) ToStringArrayMapOutputWithContext(ctx context.Context) StringArrayMapOutput {
	return ToOutputWithContext(ctx, in).(StringArrayMapOutput)
}

// StringArrayMapOutput is an Output that returns map[string][]string values.
type StringArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]string).
func (StringArrayMapOutput) ElementType() reflect.Type {
	return stringArrayMapType
}

func (o StringArrayMapOutput) ToStringArrayMapOutput() StringArrayMapOutput {
	return o
}

func (o StringArrayMapOutput) ToStringArrayMapOutputWithContext(ctx context.Context) StringArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o StringArrayMapOutput) MapIndex(k StringInput) StringArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []string {
		return vs[0].(map[string][]string)[vs[1].(string)]
	}).(StringArrayOutput)
}

func ToStringArrayMap(in map[string][]string) StringArrayMap {
	m := make(StringArrayMap)
	for k, v := range in {
		m[k] = ToStringArray(v)
	}
	return m
}

func ToStringArrayMapOutput(in map[string]StringArrayOutput) StringArrayMapOutput {
	m := make(StringArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToStringArrayMapOutput()
}

var stringMapArrayType = reflect.TypeOf((*[]map[string]string)(nil)).Elem()

// StringMapArrayInput is an input type that accepts StringMapArray and StringMapArrayOutput values.
type StringMapArrayInput interface {
	Input

	ToStringMapArrayOutput() StringMapArrayOutput
	ToStringMapArrayOutputWithContext(ctx context.Context) StringMapArrayOutput
}

// StringMapArray is an input type for []StringMapInput values.
type StringMapArray []StringMapInput

// ElementType returns the element type of this Input ([]map[string]string).
func (StringMapArray) ElementType() reflect.Type {
	return stringMapArrayType
}

func (in StringMapArray) ToStringMapArrayOutput() StringMapArrayOutput {
	return ToOutput(in).(StringMapArrayOutput)
}

func (in StringMapArray) ToStringMapArrayOutputWithContext(ctx context.Context) StringMapArrayOutput {
	return ToOutputWithContext(ctx, in).(StringMapArrayOutput)
}

// StringMapArrayOutput is an Output that returns []map[string]string values.
type StringMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]string).
func (StringMapArrayOutput) ElementType() reflect.Type {
	return stringMapArrayType
}

func (o StringMapArrayOutput) ToStringMapArrayOutput() StringMapArrayOutput {
	return o
}

func (o StringMapArrayOutput) ToStringMapArrayOutputWithContext(ctx context.Context) StringMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o StringMapArrayOutput) Index(i IntInput) StringMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]string {
		arr := vs[0].([]map[string]string)
		idx := vs[1].(int)
		var ret map[string]string
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(StringMapOutput)
}

func ToStringMapArray(in []map[string]string) StringMapArray {
	a := make(StringMapArray, len(in))
	for i, v := range in {
		a[i] = ToStringMap(v)
	}
	return a
}

func ToStringMapArrayOutput(in []StringMapOutput) StringMapArrayOutput {
	a := make(StringMapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToStringMapArrayOutput()
}

var stringMapMapType = reflect.TypeOf((*map[string]map[string]string)(nil)).Elem()

// StringMapMapInput is an input type that accepts StringMapMap and StringMapMapOutput values.
type StringMapMapInput interface {
	Input

	ToStringMapMapOutput() StringMapMapOutput
	ToStringMapMapOutputWithContext(ctx context.Context) StringMapMapOutput
}

// StringMapMap is an input type for map[string]StringMapInput values.
type StringMapMap map[string]StringMapInput

// ElementType returns the element type of this Input (map[string]map[string]string).
func (StringMapMap) ElementType() reflect.Type {
	return stringMapMapType
}

func (in StringMapMap) ToStringMapMapOutput() StringMapMapOutput {
	return ToOutput(in).(StringMapMapOutput)
}

func (in StringMapMap) ToStringMapMapOutputWithContext(ctx context.Context) StringMapMapOutput {
	return ToOutputWithContext(ctx, in).(StringMapMapOutput)
}

// StringMapMapOutput is an Output that returns map[string]map[string]string values.
type StringMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]string).
func (StringMapMapOutput) ElementType() reflect.Type {
	return stringMapMapType
}

func (o StringMapMapOutput) ToStringMapMapOutput() StringMapMapOutput {
	return o
}

func (o StringMapMapOutput) ToStringMapMapOutputWithContext(ctx context.Context) StringMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o StringMapMapOutput) MapIndex(k StringInput) StringMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]string {
		return vs[0].(map[string]map[string]string)[vs[1].(string)]
	}).(StringMapOutput)
}

func ToStringMapMap(in map[string]map[string]string) StringMapMap {
	m := make(StringMapMap)
	for k, v := range in {
		m[k] = ToStringMap(v)
	}
	return m
}

func ToStringMapMapOutput(in map[string]StringMapOutput) StringMapMapOutput {
	m := make(StringMapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToStringMapMapOutput()
}

var stringArrayArrayType = reflect.TypeOf((*[][]string)(nil)).Elem()

// StringArrayArrayInput is an input type that accepts StringArrayArray and StringArrayArrayOutput values.
type StringArrayArrayInput interface {
	Input

	ToStringArrayArrayOutput() StringArrayArrayOutput
	ToStringArrayArrayOutputWithContext(ctx context.Context) StringArrayArrayOutput
}

// StringArrayArray is an input type for []StringArrayInput values.
type StringArrayArray []StringArrayInput

// ElementType returns the element type of this Input ([][]string).
func (StringArrayArray) ElementType() reflect.Type {
	return stringArrayArrayType
}

func (in StringArrayArray) ToStringArrayArrayOutput() StringArrayArrayOutput {
	return ToOutput(in).(StringArrayArrayOutput)
}

func (in StringArrayArray) ToStringArrayArrayOutputWithContext(ctx context.Context) StringArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(StringArrayArrayOutput)
}

// StringArrayArrayOutput is an Output that returns [][]string values.
type StringArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]string).
func (StringArrayArrayOutput) ElementType() reflect.Type {
	return stringArrayArrayType
}

func (o StringArrayArrayOutput) ToStringArrayArrayOutput() StringArrayArrayOutput {
	return o
}

func (o StringArrayArrayOutput) ToStringArrayArrayOutputWithContext(ctx context.Context) StringArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o StringArrayArrayOutput) Index(i IntInput) StringArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []string {
		arr := vs[0].([][]string)
		idx := vs[1].(int)
		var ret []string
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(StringArrayOutput)
}

func ToStringArrayArray(in [][]string) StringArrayArray {
	a := make(StringArrayArray, len(in))
	for i, v := range in {
		a[i] = ToStringArray(v)
	}
	return a
}

func ToStringArrayArrayOutput(in []StringArrayOutput) StringArrayArrayOutput {
	a := make(StringArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToStringArrayArrayOutput()
}

var urnType = reflect.TypeOf((*URN)(nil)).Elem()

// URNInput is an input type that accepts URN and URNOutput values.
type URNInput interface {
	Input

	ToURNOutput() URNOutput
	ToURNOutputWithContext(ctx context.Context) URNOutput

	ToURNPtrOutput() URNPtrOutput
	ToURNPtrOutputWithContext(ctx context.Context) URNPtrOutput
}

// ElementType returns the element type of this Input (URN).
func (URN) ElementType() reflect.Type {
	return urnType
}

func (in URN) ToURNOutput() URNOutput {
	return ToOutput(in).(URNOutput)
}

func (in URN) ToURNOutputWithContext(ctx context.Context) URNOutput {
	return ToOutputWithContext(ctx, in).(URNOutput)
}

func (in URN) ToStringOutput() StringOutput {
	return in.ToStringOutputWithContext(context.Background())
}

func (in URN) ToStringOutputWithContext(ctx context.Context) StringOutput {
	return in.ToURNOutputWithContext(ctx).ToStringOutputWithContext(ctx)
}

func (in URN) ToURNPtrOutput() URNPtrOutput {
	return in.ToURNPtrOutputWithContext(context.Background())
}

func (in URN) ToURNPtrOutputWithContext(ctx context.Context) URNPtrOutput {
	return in.ToURNOutputWithContext(ctx).ToURNPtrOutputWithContext(ctx)
}

// URNOutput is an Output that returns URN values.
type URNOutput struct{ *OutputState }

// ElementType returns the element type of this Output (URN).
func (URNOutput) ElementType() reflect.Type {
	return urnType
}

func (o URNOutput) ToURNOutput() URNOutput {
	return o
}

func (o URNOutput) ToURNOutputWithContext(ctx context.Context) URNOutput {
	return o
}

func (o URNOutput) ToStringOutput() StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o URNOutput) ToStringOutputWithContext(ctx context.Context) StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v URN) string {
		return (string)(v)
	}).(StringOutput)
}

func (o URNOutput) ToURNPtrOutput() URNPtrOutput {
	return o.ToURNPtrOutputWithContext(context.Background())
}

func (o URNOutput) ToURNPtrOutputWithContext(ctx context.Context) URNPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v URN) *URN {
		return &v
	}).(URNPtrOutput)
}

var uRNPtrType = reflect.TypeOf((**URN)(nil)).Elem()

// URNPtrInput is an input type that accepts URNPtr and URNPtrOutput values.
type URNPtrInput interface {
	Input

	ToURNPtrOutput() URNPtrOutput
	ToURNPtrOutputWithContext(ctx context.Context) URNPtrOutput
}

type urnPtr URN

// URNPtr is an input type for *URN values.
func URNPtr(v URN) URNPtrInput {
	return (*urnPtr)(&v)
}

// ElementType returns the element type of this Input (*URN).
func (*urnPtr) ElementType() reflect.Type {
	return uRNPtrType
}

func (in *urnPtr) ToURNPtrOutput() URNPtrOutput {
	return ToOutput(in).(URNPtrOutput)
}

func (in *urnPtr) ToURNPtrOutputWithContext(ctx context.Context) URNPtrOutput {
	return ToOutputWithContext(ctx, in).(URNPtrOutput)
}

// URNPtrOutput is an Output that returns *URN values.
type URNPtrOutput struct{ *OutputState }

// ElementType returns the element type of this Output (*URN).
func (URNPtrOutput) ElementType() reflect.Type {
	return uRNPtrType
}

func (o URNPtrOutput) ToURNPtrOutput() URNPtrOutput {
	return o
}

func (o URNPtrOutput) ToURNPtrOutputWithContext(ctx context.Context) URNPtrOutput {
	return o
}

// Elem dereferences the pointer value or returns the zero value of the approporiate type if the pointer is nil.
func (o URNPtrOutput) Elem() URNOutput {
	return o.ApplyT(func(v *URN) URN {
		var ret URN
		if v != nil {
			ret = *v
		}
		return ret
	}).(URNOutput)
}

var uRNArrayType = reflect.TypeOf((*[]URN)(nil)).Elem()

// URNArrayInput is an input type that accepts URNArray and URNArrayOutput values.
type URNArrayInput interface {
	Input

	ToURNArrayOutput() URNArrayOutput
	ToURNArrayOutputWithContext(ctx context.Context) URNArrayOutput
}

// URNArray is an input type for []URNInput values.
type URNArray []URNInput

// ElementType returns the element type of this Input ([]URN).
func (URNArray) ElementType() reflect.Type {
	return uRNArrayType
}

func (in URNArray) ToURNArrayOutput() URNArrayOutput {
	return ToOutput(in).(URNArrayOutput)
}

func (in URNArray) ToURNArrayOutputWithContext(ctx context.Context) URNArrayOutput {
	return ToOutputWithContext(ctx, in).(URNArrayOutput)
}

// URNArrayOutput is an Output that returns []URN values.
type URNArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]URN).
func (URNArrayOutput) ElementType() reflect.Type {
	return uRNArrayType
}

func (o URNArrayOutput) ToURNArrayOutput() URNArrayOutput {
	return o
}

func (o URNArrayOutput) ToURNArrayOutputWithContext(ctx context.Context) URNArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o URNArrayOutput) Index(i IntInput) URNOutput {
	return All(o, i).ApplyT(func(vs []interface{}) URN {
		arr := vs[0].([]URN)
		idx := vs[1].(int)
		var ret URN
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(URNOutput)
}

func ToURNArray(in []URN) URNArray {
	a := make(URNArray, len(in))
	for i, v := range in {
		a[i] = (v)
	}
	return a
}

func ToURNArrayOutput(in []URNOutput) URNArrayOutput {
	a := make(URNArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToURNArrayOutput()
}

var uRNMapType = reflect.TypeOf((*map[string]URN)(nil)).Elem()

// URNMapInput is an input type that accepts URNMap and URNMapOutput values.
type URNMapInput interface {
	Input

	ToURNMapOutput() URNMapOutput
	ToURNMapOutputWithContext(ctx context.Context) URNMapOutput
}

// URNMap is an input type for map[string]URNInput values.
type URNMap map[string]URNInput

// ElementType returns the element type of this Input (map[string]URN).
func (URNMap) ElementType() reflect.Type {
	return uRNMapType
}

func (in URNMap) ToURNMapOutput() URNMapOutput {
	return ToOutput(in).(URNMapOutput)
}

func (in URNMap) ToURNMapOutputWithContext(ctx context.Context) URNMapOutput {
	return ToOutputWithContext(ctx, in).(URNMapOutput)
}

// URNMapOutput is an Output that returns map[string]URN values.
type URNMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]URN).
func (URNMapOutput) ElementType() reflect.Type {
	return uRNMapType
}

func (o URNMapOutput) ToURNMapOutput() URNMapOutput {
	return o
}

func (o URNMapOutput) ToURNMapOutputWithContext(ctx context.Context) URNMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o URNMapOutput) MapIndex(k StringInput) URNOutput {
	return All(o, k).ApplyT(func(vs []interface{}) URN {
		return vs[0].(map[string]URN)[vs[1].(string)]
	}).(URNOutput)
}

func ToURNMap(in map[string]URN) URNMap {
	m := make(URNMap)
	for k, v := range in {
		m[k] = (v)
	}
	return m
}

func ToURNMapOutput(in map[string]URNOutput) URNMapOutput {
	m := make(URNMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToURNMapOutput()
}

var uRNArrayMapType = reflect.TypeOf((*map[string][]URN)(nil)).Elem()

// URNArrayMapInput is an input type that accepts URNArrayMap and URNArrayMapOutput values.
type URNArrayMapInput interface {
	Input

	ToURNArrayMapOutput() URNArrayMapOutput
	ToURNArrayMapOutputWithContext(ctx context.Context) URNArrayMapOutput
}

// URNArrayMap is an input type for map[string]URNArrayInput values.
type URNArrayMap map[string]URNArrayInput

// ElementType returns the element type of this Input (map[string][]URN).
func (URNArrayMap) ElementType() reflect.Type {
	return uRNArrayMapType
}

func (in URNArrayMap) ToURNArrayMapOutput() URNArrayMapOutput {
	return ToOutput(in).(URNArrayMapOutput)
}

func (in URNArrayMap) ToURNArrayMapOutputWithContext(ctx context.Context) URNArrayMapOutput {
	return ToOutputWithContext(ctx, in).(URNArrayMapOutput)
}

// URNArrayMapOutput is an Output that returns map[string][]URN values.
type URNArrayMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string][]URN).
func (URNArrayMapOutput) ElementType() reflect.Type {
	return uRNArrayMapType
}

func (o URNArrayMapOutput) ToURNArrayMapOutput() URNArrayMapOutput {
	return o
}

func (o URNArrayMapOutput) ToURNArrayMapOutputWithContext(ctx context.Context) URNArrayMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o URNArrayMapOutput) MapIndex(k StringInput) URNArrayOutput {
	return All(o, k).ApplyT(func(vs []interface{}) []URN {
		return vs[0].(map[string][]URN)[vs[1].(string)]
	}).(URNArrayOutput)
}

func ToURNArrayMap(in map[string][]URN) URNArrayMap {
	m := make(URNArrayMap)
	for k, v := range in {
		m[k] = ToURNArray(v)
	}
	return m
}

func ToURNArrayMapOutput(in map[string]URNArrayOutput) URNArrayMapOutput {
	m := make(URNArrayMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToURNArrayMapOutput()
}

var uRNMapArrayType = reflect.TypeOf((*[]map[string]URN)(nil)).Elem()

// URNMapArrayInput is an input type that accepts URNMapArray and URNMapArrayOutput values.
type URNMapArrayInput interface {
	Input

	ToURNMapArrayOutput() URNMapArrayOutput
	ToURNMapArrayOutputWithContext(ctx context.Context) URNMapArrayOutput
}

// URNMapArray is an input type for []URNMapInput values.
type URNMapArray []URNMapInput

// ElementType returns the element type of this Input ([]map[string]URN).
func (URNMapArray) ElementType() reflect.Type {
	return uRNMapArrayType
}

func (in URNMapArray) ToURNMapArrayOutput() URNMapArrayOutput {
	return ToOutput(in).(URNMapArrayOutput)
}

func (in URNMapArray) ToURNMapArrayOutputWithContext(ctx context.Context) URNMapArrayOutput {
	return ToOutputWithContext(ctx, in).(URNMapArrayOutput)
}

// URNMapArrayOutput is an Output that returns []map[string]URN values.
type URNMapArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([]map[string]URN).
func (URNMapArrayOutput) ElementType() reflect.Type {
	return uRNMapArrayType
}

func (o URNMapArrayOutput) ToURNMapArrayOutput() URNMapArrayOutput {
	return o
}

func (o URNMapArrayOutput) ToURNMapArrayOutputWithContext(ctx context.Context) URNMapArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o URNMapArrayOutput) Index(i IntInput) URNMapOutput {
	return All(o, i).ApplyT(func(vs []interface{}) map[string]URN {
		arr := vs[0].([]map[string]URN)
		idx := vs[1].(int)
		var ret map[string]URN
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(URNMapOutput)
}

func ToURNMapArray(in []map[string]URN) URNMapArray {
	a := make(URNMapArray, len(in))
	for i, v := range in {
		a[i] = ToURNMap(v)
	}
	return a
}

func ToURNMapArrayOutput(in []URNMapOutput) URNMapArrayOutput {
	a := make(URNMapArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToURNMapArrayOutput()
}

var uRNMapMapType = reflect.TypeOf((*map[string]map[string]URN)(nil)).Elem()

// URNMapMapInput is an input type that accepts URNMapMap and URNMapMapOutput values.
type URNMapMapInput interface {
	Input

	ToURNMapMapOutput() URNMapMapOutput
	ToURNMapMapOutputWithContext(ctx context.Context) URNMapMapOutput
}

// URNMapMap is an input type for map[string]URNMapInput values.
type URNMapMap map[string]URNMapInput

// ElementType returns the element type of this Input (map[string]map[string]URN).
func (URNMapMap) ElementType() reflect.Type {
	return uRNMapMapType
}

func (in URNMapMap) ToURNMapMapOutput() URNMapMapOutput {
	return ToOutput(in).(URNMapMapOutput)
}

func (in URNMapMap) ToURNMapMapOutputWithContext(ctx context.Context) URNMapMapOutput {
	return ToOutputWithContext(ctx, in).(URNMapMapOutput)
}

// URNMapMapOutput is an Output that returns map[string]map[string]URN values.
type URNMapMapOutput struct{ *OutputState }

// ElementType returns the element type of this Output (map[string]map[string]URN).
func (URNMapMapOutput) ElementType() reflect.Type {
	return uRNMapMapType
}

func (o URNMapMapOutput) ToURNMapMapOutput() URNMapMapOutput {
	return o
}

func (o URNMapMapOutput) ToURNMapMapOutputWithContext(ctx context.Context) URNMapMapOutput {
	return o
}

// MapIndex looks up the key k in the map.
func (o URNMapMapOutput) MapIndex(k StringInput) URNMapOutput {
	return All(o, k).ApplyT(func(vs []interface{}) map[string]URN {
		return vs[0].(map[string]map[string]URN)[vs[1].(string)]
	}).(URNMapOutput)
}

func ToURNMapMap(in map[string]map[string]URN) URNMapMap {
	m := make(URNMapMap)
	for k, v := range in {
		m[k] = ToURNMap(v)
	}
	return m
}

func ToURNMapMapOutput(in map[string]URNMapOutput) URNMapMapOutput {
	m := make(URNMapMap)
	for k, v := range in {
		m[k] = v
	}
	return m.ToURNMapMapOutput()
}

var uRNArrayArrayType = reflect.TypeOf((*[][]URN)(nil)).Elem()

// URNArrayArrayInput is an input type that accepts URNArrayArray and URNArrayArrayOutput values.
type URNArrayArrayInput interface {
	Input

	ToURNArrayArrayOutput() URNArrayArrayOutput
	ToURNArrayArrayOutputWithContext(ctx context.Context) URNArrayArrayOutput
}

// URNArrayArray is an input type for []URNArrayInput values.
type URNArrayArray []URNArrayInput

// ElementType returns the element type of this Input ([][]URN).
func (URNArrayArray) ElementType() reflect.Type {
	return uRNArrayArrayType
}

func (in URNArrayArray) ToURNArrayArrayOutput() URNArrayArrayOutput {
	return ToOutput(in).(URNArrayArrayOutput)
}

func (in URNArrayArray) ToURNArrayArrayOutputWithContext(ctx context.Context) URNArrayArrayOutput {
	return ToOutputWithContext(ctx, in).(URNArrayArrayOutput)
}

// URNArrayArrayOutput is an Output that returns [][]URN values.
type URNArrayArrayOutput struct{ *OutputState }

// ElementType returns the element type of this Output ([][]URN).
func (URNArrayArrayOutput) ElementType() reflect.Type {
	return uRNArrayArrayType
}

func (o URNArrayArrayOutput) ToURNArrayArrayOutput() URNArrayArrayOutput {
	return o
}

func (o URNArrayArrayOutput) ToURNArrayArrayOutputWithContext(ctx context.Context) URNArrayArrayOutput {
	return o
}

// Index looks up the i'th element of the array if it is in bounds or returns the zero value of the appropriate
// type if the index is out of bounds.
func (o URNArrayArrayOutput) Index(i IntInput) URNArrayOutput {
	return All(o, i).ApplyT(func(vs []interface{}) []URN {
		arr := vs[0].([][]URN)
		idx := vs[1].(int)
		var ret []URN
		if idx >= 0 && idx < len(arr) {
			ret = arr[idx]
		}
		return ret
	}).(URNArrayOutput)
}

func ToURNArrayArray(in [][]URN) URNArrayArray {
	a := make(URNArrayArray, len(in))
	for i, v := range in {
		a[i] = ToURNArray(v)
	}
	return a
}

func ToURNArrayArrayOutput(in []URNArrayOutput) URNArrayArrayOutput {
	a := make(URNArrayArray, len(in))
	for i, v := range in {
		a[i] = v
	}
	return a.ToURNArrayArrayOutput()
}

func getResolvedValue(input Input) (reflect.Value, bool) {
	switch input := input.(type) {
	case *asset, *archive:
		return reflect.ValueOf(input), true
	default:
		return reflect.Value{}, false
	}
}

func init() {
	RegisterOutputType(ArchiveOutput{})
	RegisterOutputType(ArchiveArrayOutput{})
	RegisterOutputType(ArchiveMapOutput{})
	RegisterOutputType(ArchiveArrayMapOutput{})
	RegisterOutputType(ArchiveMapArrayOutput{})
	RegisterOutputType(ArchiveMapMapOutput{})
	RegisterOutputType(ArchiveArrayArrayOutput{})
	RegisterOutputType(AssetOutput{})
	RegisterOutputType(AssetArrayOutput{})
	RegisterOutputType(AssetMapOutput{})
	RegisterOutputType(AssetArrayMapOutput{})
	RegisterOutputType(AssetMapArrayOutput{})
	RegisterOutputType(AssetMapMapOutput{})
	RegisterOutputType(AssetArrayArrayOutput{})
	RegisterOutputType(AssetOrArchiveOutput{})
	RegisterOutputType(AssetOrArchiveArrayOutput{})
	RegisterOutputType(AssetOrArchiveMapOutput{})
	RegisterOutputType(AssetOrArchiveArrayMapOutput{})
	RegisterOutputType(AssetOrArchiveMapArrayOutput{})
	RegisterOutputType(AssetOrArchiveMapMapOutput{})
	RegisterOutputType(AssetOrArchiveArrayArrayOutput{})
	RegisterOutputType(BoolOutput{})
	RegisterOutputType(BoolPtrOutput{})
	RegisterOutputType(BoolArrayOutput{})
	RegisterOutputType(BoolMapOutput{})
	RegisterOutputType(BoolArrayMapOutput{})
	RegisterOutputType(BoolMapArrayOutput{})
	RegisterOutputType(BoolMapMapOutput{})
	RegisterOutputType(BoolArrayArrayOutput{})
	RegisterOutputType(Float64Output{})
	RegisterOutputType(Float64PtrOutput{})
	RegisterOutputType(Float64ArrayOutput{})
	RegisterOutputType(Float64MapOutput{})
	RegisterOutputType(Float64ArrayMapOutput{})
	RegisterOutputType(Float64MapArrayOutput{})
	RegisterOutputType(Float64MapMapOutput{})
	RegisterOutputType(Float64ArrayArrayOutput{})
	RegisterOutputType(IDOutput{})
	RegisterOutputType(IDPtrOutput{})
	RegisterOutputType(IDArrayOutput{})
	RegisterOutputType(IDMapOutput{})
	RegisterOutputType(IDArrayMapOutput{})
	RegisterOutputType(IDMapArrayOutput{})
	RegisterOutputType(IDMapMapOutput{})
	RegisterOutputType(IDArrayArrayOutput{})
	RegisterOutputType(ArrayOutput{})
	RegisterOutputType(MapOutput{})
	RegisterOutputType(ArrayMapOutput{})
	RegisterOutputType(MapArrayOutput{})
	RegisterOutputType(MapMapOutput{})
	RegisterOutputType(ArrayArrayOutput{})
	RegisterOutputType(IntOutput{})
	RegisterOutputType(IntPtrOutput{})
	RegisterOutputType(IntArrayOutput{})
	RegisterOutputType(IntMapOutput{})
	RegisterOutputType(IntArrayMapOutput{})
	RegisterOutputType(IntMapArrayOutput{})
	RegisterOutputType(IntMapMapOutput{})
	RegisterOutputType(IntArrayArrayOutput{})
	RegisterOutputType(StringOutput{})
	RegisterOutputType(StringPtrOutput{})
	RegisterOutputType(StringArrayOutput{})
	RegisterOutputType(StringMapOutput{})
	RegisterOutputType(StringArrayMapOutput{})
	RegisterOutputType(StringMapArrayOutput{})
	RegisterOutputType(StringMapMapOutput{})
	RegisterOutputType(StringArrayArrayOutput{})
	RegisterOutputType(URNOutput{})
	RegisterOutputType(URNPtrOutput{})
	RegisterOutputType(URNArrayOutput{})
	RegisterOutputType(URNMapOutput{})
	RegisterOutputType(URNArrayMapOutput{})
	RegisterOutputType(URNMapArrayOutput{})
	RegisterOutputType(URNMapMapOutput{})
	RegisterOutputType(URNArrayArrayOutput{})
}

// ApplyArchiveToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArchiveToArchive(o ArchiveInput, applier func(v Archive) (Archive, error)) ArchiveOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArchiveToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArchiveToArchiveArray(o ArchiveInput, applier func(v Archive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArchiveToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArchiveToArchiveMap(o ArchiveInput, applier func(v Archive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArchiveToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArchiveToArchiveArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArchiveToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArchiveToArchiveMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArchiveToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArchiveToArchiveMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArchiveToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArchiveToArchiveArrayArray(o ArchiveInput, applier func(v Archive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArchiveToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArchiveToAsset(o ArchiveInput, applier func(v Archive) (Asset, error)) AssetOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArchiveToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArchiveToAssetArray(o ArchiveInput, applier func(v Archive) ([]Asset, error)) AssetArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArchiveToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArchiveToAssetMap(o ArchiveInput, applier func(v Archive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArchiveToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArchiveToAssetArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArchiveToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArchiveToAssetMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArchiveToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArchiveToAssetMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArchiveToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArchiveToAssetArrayArray(o ArchiveInput, applier func(v Archive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArchiveToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArchiveToAssetOrArchive(o ArchiveInput, applier func(v Archive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArchiveToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArchiveToAssetOrArchiveArray(o ArchiveInput, applier func(v Archive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArchiveToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArchiveToAssetOrArchiveMap(o ArchiveInput, applier func(v Archive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArchiveToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArchiveToAssetOrArchiveArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArchiveToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArchiveToAssetOrArchiveMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArchiveToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArchiveToAssetOrArchiveMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArchiveToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArchiveToAssetOrArchiveArrayArray(o ArchiveInput, applier func(v Archive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArchiveToBool is like ApplyT, but returns a BoolOutput.
func ApplyArchiveToBool(o ArchiveInput, applier func(v Archive) (bool, error)) BoolOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArchiveToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArchiveToBoolPtr(o ArchiveInput, applier func(v Archive) (*bool, error)) BoolPtrOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArchiveToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArchiveToBoolArray(o ArchiveInput, applier func(v Archive) ([]bool, error)) BoolArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArchiveToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArchiveToBoolMap(o ArchiveInput, applier func(v Archive) (map[string]bool, error)) BoolMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArchiveToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArchiveToBoolArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArchiveToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArchiveToBoolMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArchiveToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArchiveToBoolMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArchiveToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArchiveToBoolArrayArray(o ArchiveInput, applier func(v Archive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArchiveToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArchiveToFloat64(o ArchiveInput, applier func(v Archive) (float64, error)) Float64Output {
	return o.ToArchiveOutput().ApplyT(applier).(Float64Output)
}

// ApplyArchiveToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArchiveToFloat64Ptr(o ArchiveInput, applier func(v Archive) (*float64, error)) Float64PtrOutput {
	return o.ToArchiveOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArchiveToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArchiveToFloat64Array(o ArchiveInput, applier func(v Archive) ([]float64, error)) Float64ArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArchiveToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArchiveToFloat64Map(o ArchiveInput, applier func(v Archive) (map[string]float64, error)) Float64MapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArchiveToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArchiveToFloat64ArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArchiveToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArchiveToFloat64MapArray(o ArchiveInput, applier func(v Archive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArchiveToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArchiveToFloat64MapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArchiveToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArchiveToFloat64ArrayArray(o ArchiveInput, applier func(v Archive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArchiveToID is like ApplyT, but returns a IDOutput.
func ApplyArchiveToID(o ArchiveInput, applier func(v Archive) (ID, error)) IDOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDOutput)
}

// ApplyArchiveToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArchiveToIDPtr(o ArchiveInput, applier func(v Archive) (*ID, error)) IDPtrOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArchiveToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArchiveToIDArray(o ArchiveInput, applier func(v Archive) ([]ID, error)) IDArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArchiveToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArchiveToIDMap(o ArchiveInput, applier func(v Archive) (map[string]ID, error)) IDMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArchiveToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArchiveToIDArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArchiveToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArchiveToIDMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArchiveToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArchiveToIDMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArchiveToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArchiveToIDArrayArray(o ArchiveInput, applier func(v Archive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArchiveToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArchiveToArray(o ArchiveInput, applier func(v Archive) ([]interface{}, error)) ArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArchiveToMap is like ApplyT, but returns a MapOutput.
func ApplyArchiveToMap(o ArchiveInput, applier func(v Archive) (map[string]interface{}, error)) MapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(MapOutput)
}

// ApplyArchiveToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArchiveToArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArchiveToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArchiveToMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArchiveToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArchiveToMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArchiveToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArchiveToArrayArray(o ArchiveInput, applier func(v Archive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArchiveToInt is like ApplyT, but returns a IntOutput.
func ApplyArchiveToInt(o ArchiveInput, applier func(v Archive) (int, error)) IntOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntOutput)
}

// ApplyArchiveToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArchiveToIntPtr(o ArchiveInput, applier func(v Archive) (*int, error)) IntPtrOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArchiveToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArchiveToIntArray(o ArchiveInput, applier func(v Archive) ([]int, error)) IntArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArchiveToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArchiveToIntMap(o ArchiveInput, applier func(v Archive) (map[string]int, error)) IntMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArchiveToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArchiveToIntArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArchiveToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArchiveToIntMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArchiveToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArchiveToIntMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArchiveToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArchiveToIntArrayArray(o ArchiveInput, applier func(v Archive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArchiveToString is like ApplyT, but returns a StringOutput.
func ApplyArchiveToString(o ArchiveInput, applier func(v Archive) (string, error)) StringOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringOutput)
}

// ApplyArchiveToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArchiveToStringPtr(o ArchiveInput, applier func(v Archive) (*string, error)) StringPtrOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArchiveToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArchiveToStringArray(o ArchiveInput, applier func(v Archive) ([]string, error)) StringArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArchiveToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArchiveToStringMap(o ArchiveInput, applier func(v Archive) (map[string]string, error)) StringMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArchiveToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArchiveToStringArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArchiveToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArchiveToStringMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArchiveToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArchiveToStringMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArchiveToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArchiveToStringArrayArray(o ArchiveInput, applier func(v Archive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArchiveToURN is like ApplyT, but returns a URNOutput.
func ApplyArchiveToURN(o ArchiveInput, applier func(v Archive) (URN, error)) URNOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNOutput)
}

// ApplyArchiveToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArchiveToURNPtr(o ArchiveInput, applier func(v Archive) (*URN, error)) URNPtrOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArchiveToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArchiveToURNArray(o ArchiveInput, applier func(v Archive) ([]URN, error)) URNArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArchiveToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArchiveToURNMap(o ArchiveInput, applier func(v Archive) (map[string]URN, error)) URNMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArchiveToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArchiveToURNArrayMap(o ArchiveInput, applier func(v Archive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArchiveToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArchiveToURNMapArray(o ArchiveInput, applier func(v Archive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArchiveToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArchiveToURNMapMap(o ArchiveInput, applier func(v Archive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArchiveToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArchiveToURNArrayArray(o ArchiveInput, applier func(v Archive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArchiveOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArchiveArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArchiveArrayToArchive(o ArchiveArrayInput, applier func(v []Archive) (Archive, error)) ArchiveOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArchiveArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArchiveArrayToArchiveArray(o ArchiveArrayInput, applier func(v []Archive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArchiveArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArchiveArrayToArchiveMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArchiveArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArchiveArrayToArchiveArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArchiveArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArchiveArrayToArchiveMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArchiveArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArchiveArrayToArchiveMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArchiveArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArchiveArrayToArchiveArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArchiveArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArchiveArrayToAsset(o ArchiveArrayInput, applier func(v []Archive) (Asset, error)) AssetOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArchiveArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArchiveArrayToAssetArray(o ArchiveArrayInput, applier func(v []Archive) ([]Asset, error)) AssetArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArchiveArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArchiveArrayToAssetMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArchiveArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArchiveArrayToAssetArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArchiveArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArchiveArrayToAssetMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArchiveArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArchiveArrayToAssetMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArchiveArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArchiveArrayToAssetArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArchiveArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArchiveArrayToAssetOrArchive(o ArchiveArrayInput, applier func(v []Archive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArchiveArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArchiveArrayToAssetOrArchiveArray(o ArchiveArrayInput, applier func(v []Archive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArchiveArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArchiveArrayToAssetOrArchiveMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArchiveArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArchiveArrayToAssetOrArchiveArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArchiveArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArchiveArrayToAssetOrArchiveMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArchiveArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArchiveArrayToAssetOrArchiveMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArchiveArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArchiveArrayToAssetOrArchiveArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArchiveArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyArchiveArrayToBool(o ArchiveArrayInput, applier func(v []Archive) (bool, error)) BoolOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArchiveArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArchiveArrayToBoolPtr(o ArchiveArrayInput, applier func(v []Archive) (*bool, error)) BoolPtrOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArchiveArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArchiveArrayToBoolArray(o ArchiveArrayInput, applier func(v []Archive) ([]bool, error)) BoolArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArchiveArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArchiveArrayToBoolMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]bool, error)) BoolMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArchiveArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArchiveArrayToBoolArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArchiveArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArchiveArrayToBoolMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArchiveArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArchiveArrayToBoolMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArchiveArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArchiveArrayToBoolArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArchiveArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArchiveArrayToFloat64(o ArchiveArrayInput, applier func(v []Archive) (float64, error)) Float64Output {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyArchiveArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArchiveArrayToFloat64Ptr(o ArchiveArrayInput, applier func(v []Archive) (*float64, error)) Float64PtrOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArchiveArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArchiveArrayToFloat64Array(o ArchiveArrayInput, applier func(v []Archive) ([]float64, error)) Float64ArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArchiveArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArchiveArrayToFloat64Map(o ArchiveArrayInput, applier func(v []Archive) (map[string]float64, error)) Float64MapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArchiveArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArchiveArrayToFloat64ArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArchiveArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArchiveArrayToFloat64MapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArchiveArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArchiveArrayToFloat64MapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArchiveArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArchiveArrayToFloat64ArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArchiveArrayToID is like ApplyT, but returns a IDOutput.
func ApplyArchiveArrayToID(o ArchiveArrayInput, applier func(v []Archive) (ID, error)) IDOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyArchiveArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArchiveArrayToIDPtr(o ArchiveArrayInput, applier func(v []Archive) (*ID, error)) IDPtrOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArchiveArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArchiveArrayToIDArray(o ArchiveArrayInput, applier func(v []Archive) ([]ID, error)) IDArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArchiveArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArchiveArrayToIDMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]ID, error)) IDMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArchiveArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArchiveArrayToIDArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArchiveArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArchiveArrayToIDMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArchiveArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArchiveArrayToIDMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArchiveArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArchiveArrayToIDArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArchiveArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArchiveArrayToArray(o ArchiveArrayInput, applier func(v []Archive) ([]interface{}, error)) ArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArchiveArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyArchiveArrayToMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]interface{}, error)) MapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyArchiveArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArchiveArrayToArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArchiveArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArchiveArrayToMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArchiveArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArchiveArrayToMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArchiveArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArchiveArrayToArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArchiveArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyArchiveArrayToInt(o ArchiveArrayInput, applier func(v []Archive) (int, error)) IntOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyArchiveArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArchiveArrayToIntPtr(o ArchiveArrayInput, applier func(v []Archive) (*int, error)) IntPtrOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArchiveArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArchiveArrayToIntArray(o ArchiveArrayInput, applier func(v []Archive) ([]int, error)) IntArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArchiveArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArchiveArrayToIntMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]int, error)) IntMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArchiveArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArchiveArrayToIntArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArchiveArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArchiveArrayToIntMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArchiveArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArchiveArrayToIntMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArchiveArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArchiveArrayToIntArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArchiveArrayToString is like ApplyT, but returns a StringOutput.
func ApplyArchiveArrayToString(o ArchiveArrayInput, applier func(v []Archive) (string, error)) StringOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyArchiveArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArchiveArrayToStringPtr(o ArchiveArrayInput, applier func(v []Archive) (*string, error)) StringPtrOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArchiveArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArchiveArrayToStringArray(o ArchiveArrayInput, applier func(v []Archive) ([]string, error)) StringArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArchiveArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArchiveArrayToStringMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]string, error)) StringMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArchiveArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArchiveArrayToStringArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArchiveArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArchiveArrayToStringMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArchiveArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArchiveArrayToStringMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArchiveArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArchiveArrayToStringArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArchiveArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyArchiveArrayToURN(o ArchiveArrayInput, applier func(v []Archive) (URN, error)) URNOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyArchiveArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArchiveArrayToURNPtr(o ArchiveArrayInput, applier func(v []Archive) (*URN, error)) URNPtrOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArchiveArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArchiveArrayToURNArray(o ArchiveArrayInput, applier func(v []Archive) ([]URN, error)) URNArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArchiveArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArchiveArrayToURNMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]URN, error)) URNMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArchiveArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArchiveArrayToURNArrayMap(o ArchiveArrayInput, applier func(v []Archive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArchiveArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArchiveArrayToURNMapArray(o ArchiveArrayInput, applier func(v []Archive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArchiveArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArchiveArrayToURNMapMap(o ArchiveArrayInput, applier func(v []Archive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArchiveArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArchiveArrayToURNArrayArray(o ArchiveArrayInput, applier func(v []Archive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArchiveArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArchiveMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArchiveMapToArchive(o ArchiveMapInput, applier func(v map[string]Archive) (Archive, error)) ArchiveOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArchiveMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArchiveMapToArchiveArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArchiveMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArchiveMapToArchiveMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArchiveMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArchiveMapToArchiveArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArchiveMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArchiveMapToArchiveMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArchiveMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArchiveMapToArchiveMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArchiveMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArchiveMapToArchiveArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArchiveMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArchiveMapToAsset(o ArchiveMapInput, applier func(v map[string]Archive) (Asset, error)) AssetOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArchiveMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArchiveMapToAssetArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]Asset, error)) AssetArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArchiveMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArchiveMapToAssetMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArchiveMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArchiveMapToAssetArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArchiveMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArchiveMapToAssetMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArchiveMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArchiveMapToAssetMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArchiveMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArchiveMapToAssetArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArchiveMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArchiveMapToAssetOrArchive(o ArchiveMapInput, applier func(v map[string]Archive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArchiveMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArchiveMapToAssetOrArchiveArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArchiveMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArchiveMapToAssetOrArchiveMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArchiveMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArchiveMapToAssetOrArchiveArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArchiveMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArchiveMapToAssetOrArchiveMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArchiveMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArchiveMapToAssetOrArchiveMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArchiveMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArchiveMapToAssetOrArchiveArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArchiveMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyArchiveMapToBool(o ArchiveMapInput, applier func(v map[string]Archive) (bool, error)) BoolOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArchiveMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArchiveMapToBoolPtr(o ArchiveMapInput, applier func(v map[string]Archive) (*bool, error)) BoolPtrOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArchiveMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArchiveMapToBoolArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]bool, error)) BoolArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArchiveMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArchiveMapToBoolMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]bool, error)) BoolMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArchiveMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArchiveMapToBoolArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArchiveMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArchiveMapToBoolMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArchiveMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArchiveMapToBoolMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArchiveMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArchiveMapToBoolArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArchiveMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArchiveMapToFloat64(o ArchiveMapInput, applier func(v map[string]Archive) (float64, error)) Float64Output {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyArchiveMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArchiveMapToFloat64Ptr(o ArchiveMapInput, applier func(v map[string]Archive) (*float64, error)) Float64PtrOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArchiveMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArchiveMapToFloat64Array(o ArchiveMapInput, applier func(v map[string]Archive) ([]float64, error)) Float64ArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArchiveMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArchiveMapToFloat64Map(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]float64, error)) Float64MapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArchiveMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArchiveMapToFloat64ArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArchiveMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArchiveMapToFloat64MapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArchiveMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArchiveMapToFloat64MapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArchiveMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArchiveMapToFloat64ArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArchiveMapToID is like ApplyT, but returns a IDOutput.
func ApplyArchiveMapToID(o ArchiveMapInput, applier func(v map[string]Archive) (ID, error)) IDOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyArchiveMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArchiveMapToIDPtr(o ArchiveMapInput, applier func(v map[string]Archive) (*ID, error)) IDPtrOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArchiveMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArchiveMapToIDArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]ID, error)) IDArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArchiveMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArchiveMapToIDMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]ID, error)) IDMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArchiveMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArchiveMapToIDArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArchiveMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArchiveMapToIDMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArchiveMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArchiveMapToIDMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArchiveMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArchiveMapToIDArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArchiveMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArchiveMapToArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]interface{}, error)) ArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArchiveMapToMap is like ApplyT, but returns a MapOutput.
func ApplyArchiveMapToMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]interface{}, error)) MapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyArchiveMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArchiveMapToArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArchiveMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArchiveMapToMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArchiveMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArchiveMapToMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArchiveMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArchiveMapToArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArchiveMapToInt is like ApplyT, but returns a IntOutput.
func ApplyArchiveMapToInt(o ArchiveMapInput, applier func(v map[string]Archive) (int, error)) IntOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyArchiveMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArchiveMapToIntPtr(o ArchiveMapInput, applier func(v map[string]Archive) (*int, error)) IntPtrOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArchiveMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArchiveMapToIntArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]int, error)) IntArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArchiveMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArchiveMapToIntMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]int, error)) IntMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArchiveMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArchiveMapToIntArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArchiveMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArchiveMapToIntMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArchiveMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArchiveMapToIntMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArchiveMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArchiveMapToIntArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArchiveMapToString is like ApplyT, but returns a StringOutput.
func ApplyArchiveMapToString(o ArchiveMapInput, applier func(v map[string]Archive) (string, error)) StringOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyArchiveMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArchiveMapToStringPtr(o ArchiveMapInput, applier func(v map[string]Archive) (*string, error)) StringPtrOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArchiveMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArchiveMapToStringArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]string, error)) StringArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArchiveMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArchiveMapToStringMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]string, error)) StringMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArchiveMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArchiveMapToStringArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArchiveMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArchiveMapToStringMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArchiveMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArchiveMapToStringMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArchiveMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArchiveMapToStringArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArchiveMapToURN is like ApplyT, but returns a URNOutput.
func ApplyArchiveMapToURN(o ArchiveMapInput, applier func(v map[string]Archive) (URN, error)) URNOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyArchiveMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArchiveMapToURNPtr(o ArchiveMapInput, applier func(v map[string]Archive) (*URN, error)) URNPtrOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArchiveMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArchiveMapToURNArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]URN, error)) URNArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArchiveMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArchiveMapToURNMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]URN, error)) URNMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArchiveMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArchiveMapToURNArrayMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArchiveMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArchiveMapToURNMapArray(o ArchiveMapInput, applier func(v map[string]Archive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArchiveMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArchiveMapToURNMapMap(o ArchiveMapInput, applier func(v map[string]Archive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArchiveMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArchiveMapToURNArrayArray(o ArchiveMapInput, applier func(v map[string]Archive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArchiveMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArchiveArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArchiveArrayMapToArchive(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (Archive, error)) ArchiveOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArchiveArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArchiveArrayMapToArchiveArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArchiveArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArchiveArrayMapToArchiveMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArchiveArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArchiveArrayMapToArchiveArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArchiveArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArchiveArrayMapToArchiveMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArchiveArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArchiveArrayMapToArchiveMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArchiveArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArchiveArrayMapToArchiveArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArchiveArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArchiveArrayMapToAsset(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (Asset, error)) AssetOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArchiveArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArchiveArrayMapToAssetArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]Asset, error)) AssetArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArchiveArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArchiveArrayMapToAssetMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArchiveArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArchiveArrayMapToAssetArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArchiveArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArchiveArrayMapToAssetMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArchiveArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArchiveArrayMapToAssetMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArchiveArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArchiveArrayMapToAssetArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArchiveArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArchiveArrayMapToAssetOrArchive(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArchiveArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArchiveArrayMapToAssetOrArchiveArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArchiveArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArchiveArrayMapToAssetOrArchiveMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArchiveArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArchiveArrayMapToAssetOrArchiveArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArchiveArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArchiveArrayMapToAssetOrArchiveMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArchiveArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArchiveArrayMapToAssetOrArchiveMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArchiveArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArchiveArrayMapToAssetOrArchiveArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArchiveArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyArchiveArrayMapToBool(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (bool, error)) BoolOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArchiveArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArchiveArrayMapToBoolPtr(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (*bool, error)) BoolPtrOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArchiveArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArchiveArrayMapToBoolArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]bool, error)) BoolArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArchiveArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArchiveArrayMapToBoolMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]bool, error)) BoolMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArchiveArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArchiveArrayMapToBoolArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArchiveArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArchiveArrayMapToBoolMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArchiveArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArchiveArrayMapToBoolMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArchiveArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArchiveArrayMapToBoolArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArchiveArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArchiveArrayMapToFloat64(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (float64, error)) Float64Output {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyArchiveArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArchiveArrayMapToFloat64Ptr(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (*float64, error)) Float64PtrOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArchiveArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArchiveArrayMapToFloat64Array(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]float64, error)) Float64ArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArchiveArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArchiveArrayMapToFloat64Map(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]float64, error)) Float64MapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArchiveArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArchiveArrayMapToFloat64ArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArchiveArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArchiveArrayMapToFloat64MapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArchiveArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArchiveArrayMapToFloat64MapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArchiveArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArchiveArrayMapToFloat64ArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArchiveArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyArchiveArrayMapToID(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (ID, error)) IDOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyArchiveArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArchiveArrayMapToIDPtr(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (*ID, error)) IDPtrOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArchiveArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArchiveArrayMapToIDArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]ID, error)) IDArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArchiveArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArchiveArrayMapToIDMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]ID, error)) IDMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArchiveArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArchiveArrayMapToIDArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArchiveArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArchiveArrayMapToIDMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArchiveArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArchiveArrayMapToIDMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArchiveArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArchiveArrayMapToIDArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArchiveArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArchiveArrayMapToArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]interface{}, error)) ArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArchiveArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyArchiveArrayMapToMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]interface{}, error)) MapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyArchiveArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArchiveArrayMapToArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArchiveArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArchiveArrayMapToMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArchiveArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArchiveArrayMapToMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArchiveArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArchiveArrayMapToArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArchiveArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyArchiveArrayMapToInt(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (int, error)) IntOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyArchiveArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArchiveArrayMapToIntPtr(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (*int, error)) IntPtrOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArchiveArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArchiveArrayMapToIntArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]int, error)) IntArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArchiveArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArchiveArrayMapToIntMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]int, error)) IntMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArchiveArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArchiveArrayMapToIntArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArchiveArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArchiveArrayMapToIntMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArchiveArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArchiveArrayMapToIntMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArchiveArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArchiveArrayMapToIntArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArchiveArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyArchiveArrayMapToString(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (string, error)) StringOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyArchiveArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArchiveArrayMapToStringPtr(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (*string, error)) StringPtrOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArchiveArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArchiveArrayMapToStringArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]string, error)) StringArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArchiveArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArchiveArrayMapToStringMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]string, error)) StringMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArchiveArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArchiveArrayMapToStringArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArchiveArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArchiveArrayMapToStringMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArchiveArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArchiveArrayMapToStringMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArchiveArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArchiveArrayMapToStringArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArchiveArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyArchiveArrayMapToURN(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (URN, error)) URNOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyArchiveArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArchiveArrayMapToURNPtr(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (*URN, error)) URNPtrOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArchiveArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArchiveArrayMapToURNArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]URN, error)) URNArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArchiveArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArchiveArrayMapToURNMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]URN, error)) URNMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArchiveArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArchiveArrayMapToURNArrayMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArchiveArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArchiveArrayMapToURNMapArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArchiveArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArchiveArrayMapToURNMapMap(o ArchiveArrayMapInput, applier func(v map[string][]Archive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArchiveArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArchiveArrayMapToURNArrayArray(o ArchiveArrayMapInput, applier func(v map[string][]Archive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArchiveArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArchiveMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArchiveMapArrayToArchive(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (Archive, error)) ArchiveOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArchiveMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArchiveMapArrayToArchiveArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArchiveMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArchiveMapArrayToArchiveMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArchiveMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArchiveMapArrayToArchiveArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArchiveMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArchiveMapArrayToArchiveMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArchiveMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArchiveMapArrayToArchiveMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArchiveMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArchiveMapArrayToArchiveArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArchiveMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArchiveMapArrayToAsset(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (Asset, error)) AssetOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArchiveMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArchiveMapArrayToAssetArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]Asset, error)) AssetArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArchiveMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArchiveMapArrayToAssetMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArchiveMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArchiveMapArrayToAssetArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArchiveMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArchiveMapArrayToAssetMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArchiveMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArchiveMapArrayToAssetMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArchiveMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArchiveMapArrayToAssetArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArchiveMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArchiveMapArrayToAssetOrArchive(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArchiveMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArchiveMapArrayToAssetOrArchiveArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArchiveMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArchiveMapArrayToAssetOrArchiveMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArchiveMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArchiveMapArrayToAssetOrArchiveArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArchiveMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArchiveMapArrayToAssetOrArchiveMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArchiveMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArchiveMapArrayToAssetOrArchiveMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArchiveMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArchiveMapArrayToAssetOrArchiveArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArchiveMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyArchiveMapArrayToBool(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (bool, error)) BoolOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArchiveMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArchiveMapArrayToBoolPtr(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (*bool, error)) BoolPtrOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArchiveMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArchiveMapArrayToBoolArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]bool, error)) BoolArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArchiveMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArchiveMapArrayToBoolMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]bool, error)) BoolMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArchiveMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArchiveMapArrayToBoolArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArchiveMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArchiveMapArrayToBoolMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArchiveMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArchiveMapArrayToBoolMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArchiveMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArchiveMapArrayToBoolArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArchiveMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArchiveMapArrayToFloat64(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (float64, error)) Float64Output {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyArchiveMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArchiveMapArrayToFloat64Ptr(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (*float64, error)) Float64PtrOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArchiveMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArchiveMapArrayToFloat64Array(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]float64, error)) Float64ArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArchiveMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArchiveMapArrayToFloat64Map(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]float64, error)) Float64MapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArchiveMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArchiveMapArrayToFloat64ArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArchiveMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArchiveMapArrayToFloat64MapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArchiveMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArchiveMapArrayToFloat64MapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArchiveMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArchiveMapArrayToFloat64ArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArchiveMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyArchiveMapArrayToID(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (ID, error)) IDOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyArchiveMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArchiveMapArrayToIDPtr(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (*ID, error)) IDPtrOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArchiveMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArchiveMapArrayToIDArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]ID, error)) IDArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArchiveMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArchiveMapArrayToIDMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]ID, error)) IDMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArchiveMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArchiveMapArrayToIDArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArchiveMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArchiveMapArrayToIDMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArchiveMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArchiveMapArrayToIDMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArchiveMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArchiveMapArrayToIDArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArchiveMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArchiveMapArrayToArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]interface{}, error)) ArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArchiveMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyArchiveMapArrayToMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]interface{}, error)) MapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyArchiveMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArchiveMapArrayToArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArchiveMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArchiveMapArrayToMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArchiveMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArchiveMapArrayToMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArchiveMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArchiveMapArrayToArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArchiveMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyArchiveMapArrayToInt(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (int, error)) IntOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyArchiveMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArchiveMapArrayToIntPtr(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (*int, error)) IntPtrOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArchiveMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArchiveMapArrayToIntArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]int, error)) IntArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArchiveMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArchiveMapArrayToIntMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]int, error)) IntMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArchiveMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArchiveMapArrayToIntArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArchiveMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArchiveMapArrayToIntMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArchiveMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArchiveMapArrayToIntMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArchiveMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArchiveMapArrayToIntArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArchiveMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyArchiveMapArrayToString(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (string, error)) StringOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyArchiveMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArchiveMapArrayToStringPtr(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (*string, error)) StringPtrOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArchiveMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArchiveMapArrayToStringArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]string, error)) StringArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArchiveMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArchiveMapArrayToStringMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]string, error)) StringMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArchiveMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArchiveMapArrayToStringArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArchiveMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArchiveMapArrayToStringMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArchiveMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArchiveMapArrayToStringMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArchiveMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArchiveMapArrayToStringArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArchiveMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyArchiveMapArrayToURN(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (URN, error)) URNOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyArchiveMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArchiveMapArrayToURNPtr(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (*URN, error)) URNPtrOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArchiveMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArchiveMapArrayToURNArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]URN, error)) URNArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArchiveMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArchiveMapArrayToURNMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]URN, error)) URNMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArchiveMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArchiveMapArrayToURNArrayMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArchiveMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArchiveMapArrayToURNMapArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArchiveMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArchiveMapArrayToURNMapMap(o ArchiveMapArrayInput, applier func(v []map[string]Archive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArchiveMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArchiveMapArrayToURNArrayArray(o ArchiveMapArrayInput, applier func(v []map[string]Archive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArchiveMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArchiveMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArchiveMapMapToArchive(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (Archive, error)) ArchiveOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArchiveMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArchiveMapMapToArchiveArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArchiveMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArchiveMapMapToArchiveMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArchiveMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArchiveMapMapToArchiveArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArchiveMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArchiveMapMapToArchiveMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArchiveMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArchiveMapMapToArchiveMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArchiveMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArchiveMapMapToArchiveArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArchiveMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArchiveMapMapToAsset(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (Asset, error)) AssetOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArchiveMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArchiveMapMapToAssetArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]Asset, error)) AssetArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArchiveMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArchiveMapMapToAssetMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArchiveMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArchiveMapMapToAssetArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArchiveMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArchiveMapMapToAssetMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArchiveMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArchiveMapMapToAssetMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArchiveMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArchiveMapMapToAssetArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArchiveMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArchiveMapMapToAssetOrArchive(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArchiveMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArchiveMapMapToAssetOrArchiveArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArchiveMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArchiveMapMapToAssetOrArchiveMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArchiveMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArchiveMapMapToAssetOrArchiveArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArchiveMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArchiveMapMapToAssetOrArchiveMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArchiveMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArchiveMapMapToAssetOrArchiveMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArchiveMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArchiveMapMapToAssetOrArchiveArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArchiveMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyArchiveMapMapToBool(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (bool, error)) BoolOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArchiveMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArchiveMapMapToBoolPtr(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (*bool, error)) BoolPtrOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArchiveMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArchiveMapMapToBoolArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]bool, error)) BoolArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArchiveMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArchiveMapMapToBoolMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]bool, error)) BoolMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArchiveMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArchiveMapMapToBoolArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArchiveMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArchiveMapMapToBoolMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArchiveMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArchiveMapMapToBoolMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArchiveMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArchiveMapMapToBoolArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArchiveMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArchiveMapMapToFloat64(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (float64, error)) Float64Output {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyArchiveMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArchiveMapMapToFloat64Ptr(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (*float64, error)) Float64PtrOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArchiveMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArchiveMapMapToFloat64Array(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]float64, error)) Float64ArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArchiveMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArchiveMapMapToFloat64Map(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]float64, error)) Float64MapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArchiveMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArchiveMapMapToFloat64ArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArchiveMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArchiveMapMapToFloat64MapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArchiveMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArchiveMapMapToFloat64MapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArchiveMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArchiveMapMapToFloat64ArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArchiveMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyArchiveMapMapToID(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (ID, error)) IDOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyArchiveMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArchiveMapMapToIDPtr(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (*ID, error)) IDPtrOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArchiveMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArchiveMapMapToIDArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]ID, error)) IDArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArchiveMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArchiveMapMapToIDMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]ID, error)) IDMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArchiveMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArchiveMapMapToIDArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArchiveMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArchiveMapMapToIDMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArchiveMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArchiveMapMapToIDMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArchiveMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArchiveMapMapToIDArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArchiveMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArchiveMapMapToArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]interface{}, error)) ArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArchiveMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyArchiveMapMapToMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]interface{}, error)) MapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyArchiveMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArchiveMapMapToArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArchiveMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArchiveMapMapToMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArchiveMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArchiveMapMapToMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArchiveMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArchiveMapMapToArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArchiveMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyArchiveMapMapToInt(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (int, error)) IntOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyArchiveMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArchiveMapMapToIntPtr(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (*int, error)) IntPtrOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArchiveMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArchiveMapMapToIntArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]int, error)) IntArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArchiveMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArchiveMapMapToIntMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]int, error)) IntMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArchiveMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArchiveMapMapToIntArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArchiveMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArchiveMapMapToIntMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArchiveMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArchiveMapMapToIntMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArchiveMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArchiveMapMapToIntArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArchiveMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyArchiveMapMapToString(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (string, error)) StringOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyArchiveMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArchiveMapMapToStringPtr(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (*string, error)) StringPtrOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArchiveMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArchiveMapMapToStringArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]string, error)) StringArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArchiveMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArchiveMapMapToStringMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]string, error)) StringMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArchiveMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArchiveMapMapToStringArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArchiveMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArchiveMapMapToStringMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArchiveMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArchiveMapMapToStringMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArchiveMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArchiveMapMapToStringArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArchiveMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyArchiveMapMapToURN(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (URN, error)) URNOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyArchiveMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArchiveMapMapToURNPtr(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (*URN, error)) URNPtrOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArchiveMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArchiveMapMapToURNArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]URN, error)) URNArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArchiveMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArchiveMapMapToURNMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]URN, error)) URNMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArchiveMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArchiveMapMapToURNArrayMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArchiveMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArchiveMapMapToURNMapArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArchiveMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArchiveMapMapToURNMapMap(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArchiveMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArchiveMapMapToURNArrayArray(o ArchiveMapMapInput, applier func(v map[string]map[string]Archive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArchiveMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArchiveArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArchiveArrayArrayToArchive(o ArchiveArrayArrayInput, applier func(v [][]Archive) (Archive, error)) ArchiveOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArchiveArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArchiveArrayArrayToArchiveArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArchiveArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArchiveArrayArrayToArchiveMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArchiveArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArchiveArrayArrayToArchiveArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArchiveArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArchiveArrayArrayToArchiveMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArchiveArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArchiveArrayArrayToArchiveMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArchiveArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArchiveArrayArrayToArchiveArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArchiveArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArchiveArrayArrayToAsset(o ArchiveArrayArrayInput, applier func(v [][]Archive) (Asset, error)) AssetOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArchiveArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArchiveArrayArrayToAssetArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]Asset, error)) AssetArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArchiveArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArchiveArrayArrayToAssetMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArchiveArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArchiveArrayArrayToAssetArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArchiveArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArchiveArrayArrayToAssetMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArchiveArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArchiveArrayArrayToAssetMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArchiveArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArchiveArrayArrayToAssetArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArchiveArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArchiveArrayArrayToAssetOrArchive(o ArchiveArrayArrayInput, applier func(v [][]Archive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArchiveArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArchiveArrayArrayToAssetOrArchiveArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArchiveArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArchiveArrayArrayToAssetOrArchiveMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArchiveArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArchiveArrayArrayToAssetOrArchiveArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArchiveArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArchiveArrayArrayToAssetOrArchiveMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArchiveArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArchiveArrayArrayToAssetOrArchiveMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArchiveArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArchiveArrayArrayToAssetOrArchiveArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArchiveArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyArchiveArrayArrayToBool(o ArchiveArrayArrayInput, applier func(v [][]Archive) (bool, error)) BoolOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArchiveArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArchiveArrayArrayToBoolPtr(o ArchiveArrayArrayInput, applier func(v [][]Archive) (*bool, error)) BoolPtrOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArchiveArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArchiveArrayArrayToBoolArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]bool, error)) BoolArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArchiveArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArchiveArrayArrayToBoolMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]bool, error)) BoolMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArchiveArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArchiveArrayArrayToBoolArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArchiveArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArchiveArrayArrayToBoolMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArchiveArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArchiveArrayArrayToBoolMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArchiveArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArchiveArrayArrayToBoolArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArchiveArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArchiveArrayArrayToFloat64(o ArchiveArrayArrayInput, applier func(v [][]Archive) (float64, error)) Float64Output {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyArchiveArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArchiveArrayArrayToFloat64Ptr(o ArchiveArrayArrayInput, applier func(v [][]Archive) (*float64, error)) Float64PtrOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArchiveArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArchiveArrayArrayToFloat64Array(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]float64, error)) Float64ArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArchiveArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArchiveArrayArrayToFloat64Map(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]float64, error)) Float64MapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArchiveArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArchiveArrayArrayToFloat64ArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArchiveArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArchiveArrayArrayToFloat64MapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArchiveArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArchiveArrayArrayToFloat64MapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArchiveArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArchiveArrayArrayToFloat64ArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArchiveArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyArchiveArrayArrayToID(o ArchiveArrayArrayInput, applier func(v [][]Archive) (ID, error)) IDOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyArchiveArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArchiveArrayArrayToIDPtr(o ArchiveArrayArrayInput, applier func(v [][]Archive) (*ID, error)) IDPtrOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArchiveArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArchiveArrayArrayToIDArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]ID, error)) IDArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArchiveArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArchiveArrayArrayToIDMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]ID, error)) IDMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArchiveArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArchiveArrayArrayToIDArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArchiveArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArchiveArrayArrayToIDMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArchiveArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArchiveArrayArrayToIDMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArchiveArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArchiveArrayArrayToIDArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArchiveArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArchiveArrayArrayToArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]interface{}, error)) ArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArchiveArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyArchiveArrayArrayToMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]interface{}, error)) MapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyArchiveArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArchiveArrayArrayToArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArchiveArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArchiveArrayArrayToMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArchiveArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArchiveArrayArrayToMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArchiveArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArchiveArrayArrayToArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArchiveArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyArchiveArrayArrayToInt(o ArchiveArrayArrayInput, applier func(v [][]Archive) (int, error)) IntOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyArchiveArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArchiveArrayArrayToIntPtr(o ArchiveArrayArrayInput, applier func(v [][]Archive) (*int, error)) IntPtrOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArchiveArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArchiveArrayArrayToIntArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]int, error)) IntArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArchiveArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArchiveArrayArrayToIntMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]int, error)) IntMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArchiveArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArchiveArrayArrayToIntArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArchiveArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArchiveArrayArrayToIntMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArchiveArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArchiveArrayArrayToIntMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArchiveArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArchiveArrayArrayToIntArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArchiveArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyArchiveArrayArrayToString(o ArchiveArrayArrayInput, applier func(v [][]Archive) (string, error)) StringOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyArchiveArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArchiveArrayArrayToStringPtr(o ArchiveArrayArrayInput, applier func(v [][]Archive) (*string, error)) StringPtrOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArchiveArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArchiveArrayArrayToStringArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]string, error)) StringArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArchiveArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArchiveArrayArrayToStringMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]string, error)) StringMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArchiveArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArchiveArrayArrayToStringArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArchiveArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArchiveArrayArrayToStringMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArchiveArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArchiveArrayArrayToStringMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArchiveArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArchiveArrayArrayToStringArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArchiveArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyArchiveArrayArrayToURN(o ArchiveArrayArrayInput, applier func(v [][]Archive) (URN, error)) URNOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyArchiveArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArchiveArrayArrayToURNPtr(o ArchiveArrayArrayInput, applier func(v [][]Archive) (*URN, error)) URNPtrOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArchiveArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArchiveArrayArrayToURNArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]URN, error)) URNArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArchiveArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArchiveArrayArrayToURNMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]URN, error)) URNMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArchiveArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArchiveArrayArrayToURNArrayMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArchiveArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArchiveArrayArrayToURNMapArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArchiveArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArchiveArrayArrayToURNMapMap(o ArchiveArrayArrayInput, applier func(v [][]Archive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArchiveArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArchiveArrayArrayToURNArrayArray(o ArchiveArrayArrayInput, applier func(v [][]Archive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArchiveArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetToArchive(o AssetInput, applier func(v Asset) (Archive, error)) ArchiveOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetToArchiveArray(o AssetInput, applier func(v Asset) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetToArchiveMap(o AssetInput, applier func(v Asset) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetToArchiveArrayMap(o AssetInput, applier func(v Asset) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetToArchiveMapArray(o AssetInput, applier func(v Asset) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetToArchiveMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetToArchiveArrayArray(o AssetInput, applier func(v Asset) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetToAsset(o AssetInput, applier func(v Asset) (Asset, error)) AssetOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetToAssetArray(o AssetInput, applier func(v Asset) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetToAssetMap(o AssetInput, applier func(v Asset) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetToAssetArrayMap(o AssetInput, applier func(v Asset) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetToAssetMapArray(o AssetInput, applier func(v Asset) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetToAssetMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetToAssetArrayArray(o AssetInput, applier func(v Asset) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetToAssetOrArchive(o AssetInput, applier func(v Asset) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetToAssetOrArchiveArray(o AssetInput, applier func(v Asset) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetToAssetOrArchiveMap(o AssetInput, applier func(v Asset) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetToAssetOrArchiveArrayMap(o AssetInput, applier func(v Asset) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetToAssetOrArchiveMapArray(o AssetInput, applier func(v Asset) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetToAssetOrArchiveMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetToAssetOrArchiveArrayArray(o AssetInput, applier func(v Asset) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetToBool(o AssetInput, applier func(v Asset) (bool, error)) BoolOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetToBoolPtr(o AssetInput, applier func(v Asset) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetToBoolArray(o AssetInput, applier func(v Asset) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetToBoolMap(o AssetInput, applier func(v Asset) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetToBoolArrayMap(o AssetInput, applier func(v Asset) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetToBoolMapArray(o AssetInput, applier func(v Asset) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetToBoolMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetToBoolArrayArray(o AssetInput, applier func(v Asset) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetToFloat64(o AssetInput, applier func(v Asset) (float64, error)) Float64Output {
	return o.ToAssetOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetToFloat64Ptr(o AssetInput, applier func(v Asset) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetToFloat64Array(o AssetInput, applier func(v Asset) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetToFloat64Map(o AssetInput, applier func(v Asset) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetToFloat64ArrayMap(o AssetInput, applier func(v Asset) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetToFloat64MapArray(o AssetInput, applier func(v Asset) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetToFloat64MapMap(o AssetInput, applier func(v Asset) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetToFloat64ArrayArray(o AssetInput, applier func(v Asset) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetToID is like ApplyT, but returns a IDOutput.
func ApplyAssetToID(o AssetInput, applier func(v Asset) (ID, error)) IDOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetToIDPtr(o AssetInput, applier func(v Asset) (*ID, error)) IDPtrOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetToIDArray(o AssetInput, applier func(v Asset) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetToIDMap(o AssetInput, applier func(v Asset) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetToIDArrayMap(o AssetInput, applier func(v Asset) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetToIDMapArray(o AssetInput, applier func(v Asset) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetToIDMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetToIDArrayArray(o AssetInput, applier func(v Asset) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetToArray(o AssetInput, applier func(v Asset) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetToMap(o AssetInput, applier func(v Asset) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetToArrayMap(o AssetInput, applier func(v Asset) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetToMapArray(o AssetInput, applier func(v Asset) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetToMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetToArrayArray(o AssetInput, applier func(v Asset) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetToInt(o AssetInput, applier func(v Asset) (int, error)) IntOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetToIntPtr(o AssetInput, applier func(v Asset) (*int, error)) IntPtrOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetToIntArray(o AssetInput, applier func(v Asset) ([]int, error)) IntArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetToIntMap(o AssetInput, applier func(v Asset) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetToIntArrayMap(o AssetInput, applier func(v Asset) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetToIntMapArray(o AssetInput, applier func(v Asset) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetToIntMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetToIntArrayArray(o AssetInput, applier func(v Asset) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetToString is like ApplyT, but returns a StringOutput.
func ApplyAssetToString(o AssetInput, applier func(v Asset) (string, error)) StringOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetToStringPtr(o AssetInput, applier func(v Asset) (*string, error)) StringPtrOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetToStringArray(o AssetInput, applier func(v Asset) ([]string, error)) StringArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetToStringMap(o AssetInput, applier func(v Asset) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetToStringArrayMap(o AssetInput, applier func(v Asset) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetToStringMapArray(o AssetInput, applier func(v Asset) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetToStringMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetToStringArrayArray(o AssetInput, applier func(v Asset) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetToURN(o AssetInput, applier func(v Asset) (URN, error)) URNOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetToURNPtr(o AssetInput, applier func(v Asset) (*URN, error)) URNPtrOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetToURNArray(o AssetInput, applier func(v Asset) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetToURNMap(o AssetInput, applier func(v Asset) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetToURNArrayMap(o AssetInput, applier func(v Asset) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetToURNMapArray(o AssetInput, applier func(v Asset) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetToURNMapMap(o AssetInput, applier func(v Asset) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetToURNArrayArray(o AssetInput, applier func(v Asset) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetArrayToArchive(o AssetArrayInput, applier func(v []Asset) (Archive, error)) ArchiveOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetArrayToArchiveArray(o AssetArrayInput, applier func(v []Asset) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetArrayToArchiveMap(o AssetArrayInput, applier func(v []Asset) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetArrayToArchiveArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetArrayToArchiveMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetArrayToArchiveMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetArrayToArchiveArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetArrayToAsset(o AssetArrayInput, applier func(v []Asset) (Asset, error)) AssetOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetArrayToAssetArray(o AssetArrayInput, applier func(v []Asset) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetArrayToAssetMap(o AssetArrayInput, applier func(v []Asset) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetArrayToAssetArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetArrayToAssetMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetArrayToAssetMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetArrayToAssetArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetArrayToAssetOrArchive(o AssetArrayInput, applier func(v []Asset) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetArrayToAssetOrArchiveArray(o AssetArrayInput, applier func(v []Asset) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetArrayToAssetOrArchiveMap(o AssetArrayInput, applier func(v []Asset) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetArrayToAssetOrArchiveArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetArrayToAssetOrArchiveMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetArrayToAssetOrArchiveMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetArrayToAssetOrArchiveArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetArrayToBool(o AssetArrayInput, applier func(v []Asset) (bool, error)) BoolOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetArrayToBoolPtr(o AssetArrayInput, applier func(v []Asset) (*bool, error)) BoolPtrOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetArrayToBoolArray(o AssetArrayInput, applier func(v []Asset) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetArrayToBoolMap(o AssetArrayInput, applier func(v []Asset) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetArrayToBoolArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetArrayToBoolMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetArrayToBoolMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetArrayToBoolArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetArrayToFloat64(o AssetArrayInput, applier func(v []Asset) (float64, error)) Float64Output {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetArrayToFloat64Ptr(o AssetArrayInput, applier func(v []Asset) (*float64, error)) Float64PtrOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetArrayToFloat64Array(o AssetArrayInput, applier func(v []Asset) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetArrayToFloat64Map(o AssetArrayInput, applier func(v []Asset) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetArrayToFloat64ArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetArrayToFloat64MapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetArrayToFloat64MapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetArrayToFloat64ArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetArrayToID is like ApplyT, but returns a IDOutput.
func ApplyAssetArrayToID(o AssetArrayInput, applier func(v []Asset) (ID, error)) IDOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetArrayToIDPtr(o AssetArrayInput, applier func(v []Asset) (*ID, error)) IDPtrOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetArrayToIDArray(o AssetArrayInput, applier func(v []Asset) ([]ID, error)) IDArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetArrayToIDMap(o AssetArrayInput, applier func(v []Asset) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetArrayToIDArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetArrayToIDMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetArrayToIDMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetArrayToIDArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetArrayToArray(o AssetArrayInput, applier func(v []Asset) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetArrayToMap(o AssetArrayInput, applier func(v []Asset) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetArrayToArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetArrayToMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetArrayToMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetArrayToArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetArrayToInt(o AssetArrayInput, applier func(v []Asset) (int, error)) IntOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetArrayToIntPtr(o AssetArrayInput, applier func(v []Asset) (*int, error)) IntPtrOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetArrayToIntArray(o AssetArrayInput, applier func(v []Asset) ([]int, error)) IntArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetArrayToIntMap(o AssetArrayInput, applier func(v []Asset) (map[string]int, error)) IntMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetArrayToIntArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetArrayToIntMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetArrayToIntMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetArrayToIntArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetArrayToString is like ApplyT, but returns a StringOutput.
func ApplyAssetArrayToString(o AssetArrayInput, applier func(v []Asset) (string, error)) StringOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetArrayToStringPtr(o AssetArrayInput, applier func(v []Asset) (*string, error)) StringPtrOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetArrayToStringArray(o AssetArrayInput, applier func(v []Asset) ([]string, error)) StringArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetArrayToStringMap(o AssetArrayInput, applier func(v []Asset) (map[string]string, error)) StringMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetArrayToStringArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetArrayToStringMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetArrayToStringMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetArrayToStringArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetArrayToURN(o AssetArrayInput, applier func(v []Asset) (URN, error)) URNOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetArrayToURNPtr(o AssetArrayInput, applier func(v []Asset) (*URN, error)) URNPtrOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetArrayToURNArray(o AssetArrayInput, applier func(v []Asset) ([]URN, error)) URNArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetArrayToURNMap(o AssetArrayInput, applier func(v []Asset) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetArrayToURNArrayMap(o AssetArrayInput, applier func(v []Asset) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetArrayToURNMapArray(o AssetArrayInput, applier func(v []Asset) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetArrayToURNMapMap(o AssetArrayInput, applier func(v []Asset) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetArrayToURNArrayArray(o AssetArrayInput, applier func(v []Asset) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetMapToArchive(o AssetMapInput, applier func(v map[string]Asset) (Archive, error)) ArchiveOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetMapToArchiveArray(o AssetMapInput, applier func(v map[string]Asset) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetMapToArchiveMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetMapToArchiveArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetMapToArchiveMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetMapToArchiveMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetMapToArchiveArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetMapToAsset(o AssetMapInput, applier func(v map[string]Asset) (Asset, error)) AssetOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetMapToAssetArray(o AssetMapInput, applier func(v map[string]Asset) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetMapToAssetMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetMapToAssetArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetMapToAssetMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetMapToAssetMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetMapToAssetArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetMapToAssetOrArchive(o AssetMapInput, applier func(v map[string]Asset) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetMapToAssetOrArchiveArray(o AssetMapInput, applier func(v map[string]Asset) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetMapToAssetOrArchiveMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetMapToAssetOrArchiveArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetMapToAssetOrArchiveMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetMapToAssetOrArchiveMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetMapToAssetOrArchiveArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetMapToBool(o AssetMapInput, applier func(v map[string]Asset) (bool, error)) BoolOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetMapToBoolPtr(o AssetMapInput, applier func(v map[string]Asset) (*bool, error)) BoolPtrOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetMapToBoolArray(o AssetMapInput, applier func(v map[string]Asset) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetMapToBoolMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetMapToBoolArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetMapToBoolMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetMapToBoolMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetMapToBoolArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetMapToFloat64(o AssetMapInput, applier func(v map[string]Asset) (float64, error)) Float64Output {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetMapToFloat64Ptr(o AssetMapInput, applier func(v map[string]Asset) (*float64, error)) Float64PtrOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetMapToFloat64Array(o AssetMapInput, applier func(v map[string]Asset) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetMapToFloat64Map(o AssetMapInput, applier func(v map[string]Asset) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetMapToFloat64ArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetMapToFloat64MapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetMapToFloat64MapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetMapToFloat64ArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetMapToID is like ApplyT, but returns a IDOutput.
func ApplyAssetMapToID(o AssetMapInput, applier func(v map[string]Asset) (ID, error)) IDOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetMapToIDPtr(o AssetMapInput, applier func(v map[string]Asset) (*ID, error)) IDPtrOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetMapToIDArray(o AssetMapInput, applier func(v map[string]Asset) ([]ID, error)) IDArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetMapToIDMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetMapToIDArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetMapToIDMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetMapToIDMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetMapToIDArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetMapToArray(o AssetMapInput, applier func(v map[string]Asset) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetMapToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetMapToMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetMapToArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetMapToMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetMapToMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetMapToArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetMapToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetMapToInt(o AssetMapInput, applier func(v map[string]Asset) (int, error)) IntOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetMapToIntPtr(o AssetMapInput, applier func(v map[string]Asset) (*int, error)) IntPtrOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetMapToIntArray(o AssetMapInput, applier func(v map[string]Asset) ([]int, error)) IntArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetMapToIntMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]int, error)) IntMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetMapToIntArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetMapToIntMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetMapToIntMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetMapToIntArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetMapToString is like ApplyT, but returns a StringOutput.
func ApplyAssetMapToString(o AssetMapInput, applier func(v map[string]Asset) (string, error)) StringOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetMapToStringPtr(o AssetMapInput, applier func(v map[string]Asset) (*string, error)) StringPtrOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetMapToStringArray(o AssetMapInput, applier func(v map[string]Asset) ([]string, error)) StringArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetMapToStringMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]string, error)) StringMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetMapToStringArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetMapToStringMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetMapToStringMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetMapToStringArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetMapToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetMapToURN(o AssetMapInput, applier func(v map[string]Asset) (URN, error)) URNOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetMapToURNPtr(o AssetMapInput, applier func(v map[string]Asset) (*URN, error)) URNPtrOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetMapToURNArray(o AssetMapInput, applier func(v map[string]Asset) ([]URN, error)) URNArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetMapToURNMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetMapToURNArrayMap(o AssetMapInput, applier func(v map[string]Asset) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetMapToURNMapArray(o AssetMapInput, applier func(v map[string]Asset) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetMapToURNMapMap(o AssetMapInput, applier func(v map[string]Asset) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetMapToURNArrayArray(o AssetMapInput, applier func(v map[string]Asset) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetArrayMapToArchive(o AssetArrayMapInput, applier func(v map[string][]Asset) (Archive, error)) ArchiveOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetArrayMapToArchiveArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetArrayMapToArchiveMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetArrayMapToArchiveArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetArrayMapToArchiveMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetArrayMapToArchiveMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetArrayMapToArchiveArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetArrayMapToAsset(o AssetArrayMapInput, applier func(v map[string][]Asset) (Asset, error)) AssetOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetArrayMapToAssetArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetArrayMapToAssetMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetArrayMapToAssetArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetArrayMapToAssetMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetArrayMapToAssetMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetArrayMapToAssetArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetArrayMapToAssetOrArchive(o AssetArrayMapInput, applier func(v map[string][]Asset) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetArrayMapToAssetOrArchiveArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetArrayMapToAssetOrArchiveMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetArrayMapToAssetOrArchiveArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetArrayMapToAssetOrArchiveMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetArrayMapToAssetOrArchiveMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetArrayMapToAssetOrArchiveArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetArrayMapToBool(o AssetArrayMapInput, applier func(v map[string][]Asset) (bool, error)) BoolOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetArrayMapToBoolPtr(o AssetArrayMapInput, applier func(v map[string][]Asset) (*bool, error)) BoolPtrOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetArrayMapToBoolArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetArrayMapToBoolMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetArrayMapToBoolArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetArrayMapToBoolMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetArrayMapToBoolMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetArrayMapToBoolArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetArrayMapToFloat64(o AssetArrayMapInput, applier func(v map[string][]Asset) (float64, error)) Float64Output {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetArrayMapToFloat64Ptr(o AssetArrayMapInput, applier func(v map[string][]Asset) (*float64, error)) Float64PtrOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetArrayMapToFloat64Array(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetArrayMapToFloat64Map(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetArrayMapToFloat64ArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetArrayMapToFloat64MapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetArrayMapToFloat64MapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetArrayMapToFloat64ArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyAssetArrayMapToID(o AssetArrayMapInput, applier func(v map[string][]Asset) (ID, error)) IDOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetArrayMapToIDPtr(o AssetArrayMapInput, applier func(v map[string][]Asset) (*ID, error)) IDPtrOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetArrayMapToIDArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]ID, error)) IDArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetArrayMapToIDMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetArrayMapToIDArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetArrayMapToIDMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetArrayMapToIDMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetArrayMapToIDArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetArrayMapToArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetArrayMapToMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetArrayMapToArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetArrayMapToMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetArrayMapToMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetArrayMapToArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetArrayMapToInt(o AssetArrayMapInput, applier func(v map[string][]Asset) (int, error)) IntOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetArrayMapToIntPtr(o AssetArrayMapInput, applier func(v map[string][]Asset) (*int, error)) IntPtrOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetArrayMapToIntArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]int, error)) IntArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetArrayMapToIntMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]int, error)) IntMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetArrayMapToIntArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetArrayMapToIntMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetArrayMapToIntMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetArrayMapToIntArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyAssetArrayMapToString(o AssetArrayMapInput, applier func(v map[string][]Asset) (string, error)) StringOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetArrayMapToStringPtr(o AssetArrayMapInput, applier func(v map[string][]Asset) (*string, error)) StringPtrOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetArrayMapToStringArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]string, error)) StringArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetArrayMapToStringMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]string, error)) StringMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetArrayMapToStringArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetArrayMapToStringMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetArrayMapToStringMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetArrayMapToStringArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetArrayMapToURN(o AssetArrayMapInput, applier func(v map[string][]Asset) (URN, error)) URNOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetArrayMapToURNPtr(o AssetArrayMapInput, applier func(v map[string][]Asset) (*URN, error)) URNPtrOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetArrayMapToURNArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]URN, error)) URNArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetArrayMapToURNMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetArrayMapToURNArrayMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetArrayMapToURNMapArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetArrayMapToURNMapMap(o AssetArrayMapInput, applier func(v map[string][]Asset) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetArrayMapToURNArrayArray(o AssetArrayMapInput, applier func(v map[string][]Asset) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetMapArrayToArchive(o AssetMapArrayInput, applier func(v []map[string]Asset) (Archive, error)) ArchiveOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetMapArrayToArchiveArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetMapArrayToArchiveMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetMapArrayToArchiveArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetMapArrayToArchiveMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetMapArrayToArchiveMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetMapArrayToArchiveArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetMapArrayToAsset(o AssetMapArrayInput, applier func(v []map[string]Asset) (Asset, error)) AssetOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetMapArrayToAssetArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetMapArrayToAssetMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetMapArrayToAssetArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetMapArrayToAssetMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetMapArrayToAssetMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetMapArrayToAssetArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetMapArrayToAssetOrArchive(o AssetMapArrayInput, applier func(v []map[string]Asset) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetMapArrayToAssetOrArchiveArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetMapArrayToAssetOrArchiveMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetMapArrayToAssetOrArchiveArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetMapArrayToAssetOrArchiveMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetMapArrayToAssetOrArchiveMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetMapArrayToAssetOrArchiveArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetMapArrayToBool(o AssetMapArrayInput, applier func(v []map[string]Asset) (bool, error)) BoolOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetMapArrayToBoolPtr(o AssetMapArrayInput, applier func(v []map[string]Asset) (*bool, error)) BoolPtrOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetMapArrayToBoolArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetMapArrayToBoolMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetMapArrayToBoolArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetMapArrayToBoolMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetMapArrayToBoolMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetMapArrayToBoolArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetMapArrayToFloat64(o AssetMapArrayInput, applier func(v []map[string]Asset) (float64, error)) Float64Output {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetMapArrayToFloat64Ptr(o AssetMapArrayInput, applier func(v []map[string]Asset) (*float64, error)) Float64PtrOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetMapArrayToFloat64Array(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetMapArrayToFloat64Map(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetMapArrayToFloat64ArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetMapArrayToFloat64MapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetMapArrayToFloat64MapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetMapArrayToFloat64ArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyAssetMapArrayToID(o AssetMapArrayInput, applier func(v []map[string]Asset) (ID, error)) IDOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetMapArrayToIDPtr(o AssetMapArrayInput, applier func(v []map[string]Asset) (*ID, error)) IDPtrOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetMapArrayToIDArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]ID, error)) IDArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetMapArrayToIDMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetMapArrayToIDArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetMapArrayToIDMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetMapArrayToIDMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetMapArrayToIDArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetMapArrayToArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetMapArrayToMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetMapArrayToArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetMapArrayToMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetMapArrayToMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetMapArrayToArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetMapArrayToInt(o AssetMapArrayInput, applier func(v []map[string]Asset) (int, error)) IntOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetMapArrayToIntPtr(o AssetMapArrayInput, applier func(v []map[string]Asset) (*int, error)) IntPtrOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetMapArrayToIntArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]int, error)) IntArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetMapArrayToIntMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]int, error)) IntMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetMapArrayToIntArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetMapArrayToIntMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetMapArrayToIntMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetMapArrayToIntArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyAssetMapArrayToString(o AssetMapArrayInput, applier func(v []map[string]Asset) (string, error)) StringOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetMapArrayToStringPtr(o AssetMapArrayInput, applier func(v []map[string]Asset) (*string, error)) StringPtrOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetMapArrayToStringArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]string, error)) StringArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetMapArrayToStringMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]string, error)) StringMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetMapArrayToStringArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetMapArrayToStringMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetMapArrayToStringMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetMapArrayToStringArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetMapArrayToURN(o AssetMapArrayInput, applier func(v []map[string]Asset) (URN, error)) URNOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetMapArrayToURNPtr(o AssetMapArrayInput, applier func(v []map[string]Asset) (*URN, error)) URNPtrOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetMapArrayToURNArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]URN, error)) URNArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetMapArrayToURNMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetMapArrayToURNArrayMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetMapArrayToURNMapArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetMapArrayToURNMapMap(o AssetMapArrayInput, applier func(v []map[string]Asset) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetMapArrayToURNArrayArray(o AssetMapArrayInput, applier func(v []map[string]Asset) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetMapMapToArchive(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (Archive, error)) ArchiveOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetMapMapToArchiveArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetMapMapToArchiveMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetMapMapToArchiveArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetMapMapToArchiveMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetMapMapToArchiveMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetMapMapToArchiveArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetMapMapToAsset(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (Asset, error)) AssetOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetMapMapToAssetArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetMapMapToAssetMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetMapMapToAssetArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetMapMapToAssetMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetMapMapToAssetMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetMapMapToAssetArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetMapMapToAssetOrArchive(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetMapMapToAssetOrArchiveArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetMapMapToAssetOrArchiveMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetMapMapToAssetOrArchiveArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetMapMapToAssetOrArchiveMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetMapMapToAssetOrArchiveMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetMapMapToAssetOrArchiveArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetMapMapToBool(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (bool, error)) BoolOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetMapMapToBoolPtr(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (*bool, error)) BoolPtrOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetMapMapToBoolArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetMapMapToBoolMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetMapMapToBoolArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetMapMapToBoolMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetMapMapToBoolMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetMapMapToBoolArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetMapMapToFloat64(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (float64, error)) Float64Output {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetMapMapToFloat64Ptr(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (*float64, error)) Float64PtrOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetMapMapToFloat64Array(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetMapMapToFloat64Map(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetMapMapToFloat64ArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetMapMapToFloat64MapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetMapMapToFloat64MapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetMapMapToFloat64ArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyAssetMapMapToID(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (ID, error)) IDOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetMapMapToIDPtr(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (*ID, error)) IDPtrOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetMapMapToIDArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]ID, error)) IDArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetMapMapToIDMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetMapMapToIDArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetMapMapToIDMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetMapMapToIDMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetMapMapToIDArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetMapMapToArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetMapMapToMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetMapMapToArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetMapMapToMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetMapMapToMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetMapMapToArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetMapMapToInt(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (int, error)) IntOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetMapMapToIntPtr(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (*int, error)) IntPtrOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetMapMapToIntArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]int, error)) IntArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetMapMapToIntMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]int, error)) IntMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetMapMapToIntArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetMapMapToIntMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetMapMapToIntMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetMapMapToIntArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyAssetMapMapToString(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (string, error)) StringOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetMapMapToStringPtr(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (*string, error)) StringPtrOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetMapMapToStringArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]string, error)) StringArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetMapMapToStringMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]string, error)) StringMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetMapMapToStringArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetMapMapToStringMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetMapMapToStringMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetMapMapToStringArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetMapMapToURN(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (URN, error)) URNOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetMapMapToURNPtr(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (*URN, error)) URNPtrOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetMapMapToURNArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]URN, error)) URNArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetMapMapToURNMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetMapMapToURNArrayMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetMapMapToURNMapArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetMapMapToURNMapMap(o AssetMapMapInput, applier func(v map[string]map[string]Asset) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetMapMapToURNArrayArray(o AssetMapMapInput, applier func(v map[string]map[string]Asset) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetArrayArrayToArchive(o AssetArrayArrayInput, applier func(v [][]Asset) (Archive, error)) ArchiveOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetArrayArrayToArchiveArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetArrayArrayToArchiveMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetArrayArrayToArchiveArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetArrayArrayToArchiveMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetArrayArrayToArchiveMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetArrayArrayToArchiveArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetArrayArrayToAsset(o AssetArrayArrayInput, applier func(v [][]Asset) (Asset, error)) AssetOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetArrayArrayToAssetArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetArrayArrayToAssetMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetArrayArrayToAssetArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetArrayArrayToAssetMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetArrayArrayToAssetMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetArrayArrayToAssetArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetArrayArrayToAssetOrArchive(o AssetArrayArrayInput, applier func(v [][]Asset) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetArrayArrayToAssetOrArchiveArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetArrayArrayToAssetOrArchiveMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetArrayArrayToAssetOrArchiveArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetArrayArrayToAssetOrArchiveMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetArrayArrayToAssetOrArchiveMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetArrayArrayToAssetOrArchiveArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetArrayArrayToBool(o AssetArrayArrayInput, applier func(v [][]Asset) (bool, error)) BoolOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetArrayArrayToBoolPtr(o AssetArrayArrayInput, applier func(v [][]Asset) (*bool, error)) BoolPtrOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetArrayArrayToBoolArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetArrayArrayToBoolMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetArrayArrayToBoolArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetArrayArrayToBoolMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetArrayArrayToBoolMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetArrayArrayToBoolArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetArrayArrayToFloat64(o AssetArrayArrayInput, applier func(v [][]Asset) (float64, error)) Float64Output {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetArrayArrayToFloat64Ptr(o AssetArrayArrayInput, applier func(v [][]Asset) (*float64, error)) Float64PtrOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetArrayArrayToFloat64Array(o AssetArrayArrayInput, applier func(v [][]Asset) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetArrayArrayToFloat64Map(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetArrayArrayToFloat64ArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetArrayArrayToFloat64MapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetArrayArrayToFloat64MapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetArrayArrayToFloat64ArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyAssetArrayArrayToID(o AssetArrayArrayInput, applier func(v [][]Asset) (ID, error)) IDOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetArrayArrayToIDPtr(o AssetArrayArrayInput, applier func(v [][]Asset) (*ID, error)) IDPtrOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetArrayArrayToIDArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]ID, error)) IDArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetArrayArrayToIDMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetArrayArrayToIDArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetArrayArrayToIDMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetArrayArrayToIDMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetArrayArrayToIDArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetArrayArrayToArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetArrayArrayToMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetArrayArrayToArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetArrayArrayToMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetArrayArrayToMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetArrayArrayToArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetArrayArrayToInt(o AssetArrayArrayInput, applier func(v [][]Asset) (int, error)) IntOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetArrayArrayToIntPtr(o AssetArrayArrayInput, applier func(v [][]Asset) (*int, error)) IntPtrOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetArrayArrayToIntArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]int, error)) IntArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetArrayArrayToIntMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]int, error)) IntMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetArrayArrayToIntArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetArrayArrayToIntMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetArrayArrayToIntMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetArrayArrayToIntArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyAssetArrayArrayToString(o AssetArrayArrayInput, applier func(v [][]Asset) (string, error)) StringOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetArrayArrayToStringPtr(o AssetArrayArrayInput, applier func(v [][]Asset) (*string, error)) StringPtrOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetArrayArrayToStringArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]string, error)) StringArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetArrayArrayToStringMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]string, error)) StringMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetArrayArrayToStringArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetArrayArrayToStringMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetArrayArrayToStringMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetArrayArrayToStringArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetArrayArrayToURN(o AssetArrayArrayInput, applier func(v [][]Asset) (URN, error)) URNOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetArrayArrayToURNPtr(o AssetArrayArrayInput, applier func(v [][]Asset) (*URN, error)) URNPtrOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetArrayArrayToURNArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]URN, error)) URNArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetArrayArrayToURNMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetArrayArrayToURNArrayMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetArrayArrayToURNMapArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetArrayArrayToURNMapMap(o AssetArrayArrayInput, applier func(v [][]Asset) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetArrayArrayToURNArrayArray(o AssetArrayArrayInput, applier func(v [][]Asset) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetOrArchiveToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetOrArchiveToArchive(o AssetOrArchiveInput, applier func(v AssetOrArchive) (Archive, error)) ArchiveOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetOrArchiveToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetOrArchiveToArchiveArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetOrArchiveToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetOrArchiveToArchiveMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetOrArchiveToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetOrArchiveToArchiveArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetOrArchiveToArchiveMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetOrArchiveToArchiveMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetOrArchiveToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetOrArchiveToArchiveArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetOrArchiveToAsset(o AssetOrArchiveInput, applier func(v AssetOrArchive) (Asset, error)) AssetOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetOrArchiveToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetOrArchiveToAssetArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetOrArchiveToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetOrArchiveToAssetMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetOrArchiveToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetOrArchiveToAssetArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetOrArchiveToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetOrArchiveToAssetMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetOrArchiveToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetOrArchiveToAssetMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetOrArchiveToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetOrArchiveToAssetArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetOrArchiveToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetOrArchiveToAssetOrArchive(o AssetOrArchiveInput, applier func(v AssetOrArchive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetOrArchiveToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetOrArchiveToAssetOrArchiveArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetOrArchiveToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetOrArchiveToAssetOrArchiveMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetOrArchiveToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetOrArchiveToAssetOrArchiveArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetOrArchiveToAssetOrArchiveMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetOrArchiveToAssetOrArchiveMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetOrArchiveToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetOrArchiveToAssetOrArchiveArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetOrArchiveToBool(o AssetOrArchiveInput, applier func(v AssetOrArchive) (bool, error)) BoolOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetOrArchiveToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetOrArchiveToBoolPtr(o AssetOrArchiveInput, applier func(v AssetOrArchive) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetOrArchiveToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetOrArchiveToBoolArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetOrArchiveToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetOrArchiveToBoolMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetOrArchiveToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetOrArchiveToBoolArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetOrArchiveToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetOrArchiveToBoolMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetOrArchiveToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetOrArchiveToBoolMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetOrArchiveToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetOrArchiveToBoolArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetOrArchiveToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetOrArchiveToFloat64(o AssetOrArchiveInput, applier func(v AssetOrArchive) (float64, error)) Float64Output {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetOrArchiveToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetOrArchiveToFloat64Ptr(o AssetOrArchiveInput, applier func(v AssetOrArchive) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetOrArchiveToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetOrArchiveToFloat64Array(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetOrArchiveToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetOrArchiveToFloat64Map(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetOrArchiveToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetOrArchiveToFloat64ArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetOrArchiveToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetOrArchiveToFloat64MapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetOrArchiveToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetOrArchiveToFloat64MapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetOrArchiveToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetOrArchiveToFloat64ArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetOrArchiveToID is like ApplyT, but returns a IDOutput.
func ApplyAssetOrArchiveToID(o AssetOrArchiveInput, applier func(v AssetOrArchive) (ID, error)) IDOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetOrArchiveToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetOrArchiveToIDPtr(o AssetOrArchiveInput, applier func(v AssetOrArchive) (*ID, error)) IDPtrOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetOrArchiveToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetOrArchiveToIDArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetOrArchiveToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetOrArchiveToIDMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetOrArchiveToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetOrArchiveToIDArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetOrArchiveToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetOrArchiveToIDMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetOrArchiveToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetOrArchiveToIDMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetOrArchiveToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetOrArchiveToIDArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetOrArchiveToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetOrArchiveToArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetOrArchiveToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetOrArchiveToMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetOrArchiveToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetOrArchiveToArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetOrArchiveToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetOrArchiveToMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetOrArchiveToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetOrArchiveToMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetOrArchiveToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetOrArchiveToArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetOrArchiveToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetOrArchiveToInt(o AssetOrArchiveInput, applier func(v AssetOrArchive) (int, error)) IntOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetOrArchiveToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetOrArchiveToIntPtr(o AssetOrArchiveInput, applier func(v AssetOrArchive) (*int, error)) IntPtrOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetOrArchiveToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetOrArchiveToIntArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]int, error)) IntArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetOrArchiveToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetOrArchiveToIntMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetOrArchiveToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetOrArchiveToIntArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetOrArchiveToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetOrArchiveToIntMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetOrArchiveToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetOrArchiveToIntMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetOrArchiveToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetOrArchiveToIntArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetOrArchiveToString is like ApplyT, but returns a StringOutput.
func ApplyAssetOrArchiveToString(o AssetOrArchiveInput, applier func(v AssetOrArchive) (string, error)) StringOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetOrArchiveToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetOrArchiveToStringPtr(o AssetOrArchiveInput, applier func(v AssetOrArchive) (*string, error)) StringPtrOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetOrArchiveToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetOrArchiveToStringArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]string, error)) StringArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetOrArchiveToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetOrArchiveToStringMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetOrArchiveToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetOrArchiveToStringArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetOrArchiveToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetOrArchiveToStringMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetOrArchiveToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetOrArchiveToStringMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetOrArchiveToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetOrArchiveToStringArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetOrArchiveToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetOrArchiveToURN(o AssetOrArchiveInput, applier func(v AssetOrArchive) (URN, error)) URNOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetOrArchiveToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetOrArchiveToURNPtr(o AssetOrArchiveInput, applier func(v AssetOrArchive) (*URN, error)) URNPtrOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetOrArchiveToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetOrArchiveToURNArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetOrArchiveToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetOrArchiveToURNMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetOrArchiveToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetOrArchiveToURNArrayMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetOrArchiveToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetOrArchiveToURNMapArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetOrArchiveToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetOrArchiveToURNMapMap(o AssetOrArchiveInput, applier func(v AssetOrArchive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetOrArchiveToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetOrArchiveToURNArrayArray(o AssetOrArchiveInput, applier func(v AssetOrArchive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOrArchiveOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetOrArchiveArrayToArchive(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (Archive, error)) ArchiveOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetOrArchiveArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetOrArchiveArrayToArchiveArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetOrArchiveArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetOrArchiveArrayToArchiveMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetOrArchiveArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetOrArchiveArrayToArchiveArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetOrArchiveArrayToArchiveMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetOrArchiveArrayToArchiveMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetOrArchiveArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetOrArchiveArrayToArchiveArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetOrArchiveArrayToAsset(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (Asset, error)) AssetOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetOrArchiveArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetOrArchiveArrayToAssetArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetOrArchiveArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetOrArchiveArrayToAssetMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetOrArchiveArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetOrArchiveArrayToAssetArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetOrArchiveArrayToAssetMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetOrArchiveArrayToAssetMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetOrArchiveArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetOrArchiveArrayToAssetArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetOrArchiveArrayToAssetOrArchive(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetOrArchiveArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetOrArchiveArrayToAssetOrArchiveArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetOrArchiveArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetOrArchiveArrayToAssetOrArchiveMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetOrArchiveArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetOrArchiveArrayToAssetOrArchiveArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetOrArchiveArrayToAssetOrArchiveMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetOrArchiveArrayToAssetOrArchiveMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetOrArchiveArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetOrArchiveArrayToAssetOrArchiveArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetOrArchiveArrayToBool(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (bool, error)) BoolOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetOrArchiveArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetOrArchiveArrayToBoolPtr(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetOrArchiveArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetOrArchiveArrayToBoolArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetOrArchiveArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetOrArchiveArrayToBoolMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetOrArchiveArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetOrArchiveArrayToBoolArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetOrArchiveArrayToBoolMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetOrArchiveArrayToBoolMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetOrArchiveArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetOrArchiveArrayToBoolArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetOrArchiveArrayToFloat64(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (float64, error)) Float64Output {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetOrArchiveArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetOrArchiveArrayToFloat64Ptr(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetOrArchiveArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetOrArchiveArrayToFloat64Array(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetOrArchiveArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetOrArchiveArrayToFloat64Map(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetOrArchiveArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetOrArchiveArrayToFloat64ArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetOrArchiveArrayToFloat64MapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetOrArchiveArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetOrArchiveArrayToFloat64MapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetOrArchiveArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetOrArchiveArrayToFloat64ArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToID is like ApplyT, but returns a IDOutput.
func ApplyAssetOrArchiveArrayToID(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (ID, error)) IDOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetOrArchiveArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetOrArchiveArrayToIDPtr(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (*ID, error)) IDPtrOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetOrArchiveArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetOrArchiveArrayToIDArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetOrArchiveArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetOrArchiveArrayToIDMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetOrArchiveArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetOrArchiveArrayToIDArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetOrArchiveArrayToIDMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetOrArchiveArrayToIDMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetOrArchiveArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetOrArchiveArrayToIDArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetOrArchiveArrayToArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetOrArchiveArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetOrArchiveArrayToMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetOrArchiveArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetOrArchiveArrayToArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetOrArchiveArrayToMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetOrArchiveArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetOrArchiveArrayToMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetOrArchiveArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetOrArchiveArrayToArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetOrArchiveArrayToInt(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (int, error)) IntOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetOrArchiveArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetOrArchiveArrayToIntPtr(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (*int, error)) IntPtrOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetOrArchiveArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetOrArchiveArrayToIntArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]int, error)) IntArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetOrArchiveArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetOrArchiveArrayToIntMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetOrArchiveArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetOrArchiveArrayToIntArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetOrArchiveArrayToIntMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetOrArchiveArrayToIntMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetOrArchiveArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetOrArchiveArrayToIntArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToString is like ApplyT, but returns a StringOutput.
func ApplyAssetOrArchiveArrayToString(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (string, error)) StringOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetOrArchiveArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetOrArchiveArrayToStringPtr(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (*string, error)) StringPtrOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetOrArchiveArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetOrArchiveArrayToStringArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]string, error)) StringArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetOrArchiveArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetOrArchiveArrayToStringMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetOrArchiveArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetOrArchiveArrayToStringArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetOrArchiveArrayToStringMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetOrArchiveArrayToStringMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetOrArchiveArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetOrArchiveArrayToStringArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetOrArchiveArrayToURN(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (URN, error)) URNOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetOrArchiveArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetOrArchiveArrayToURNPtr(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (*URN, error)) URNPtrOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetOrArchiveArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetOrArchiveArrayToURNArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetOrArchiveArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetOrArchiveArrayToURNMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetOrArchiveArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetOrArchiveArrayToURNArrayMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetOrArchiveArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetOrArchiveArrayToURNMapArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetOrArchiveArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetOrArchiveArrayToURNMapMap(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetOrArchiveArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetOrArchiveArrayToURNArrayArray(o AssetOrArchiveArrayInput, applier func(v []AssetOrArchive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOrArchiveArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetOrArchiveMapToArchive(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (Archive, error)) ArchiveOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetOrArchiveMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetOrArchiveMapToArchiveArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetOrArchiveMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetOrArchiveMapToArchiveMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetOrArchiveMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetOrArchiveMapToArchiveArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetOrArchiveMapToArchiveMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetOrArchiveMapToArchiveMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetOrArchiveMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetOrArchiveMapToArchiveArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetOrArchiveMapToAsset(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (Asset, error)) AssetOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetOrArchiveMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetOrArchiveMapToAssetArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetOrArchiveMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetOrArchiveMapToAssetMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetOrArchiveMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetOrArchiveMapToAssetArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetOrArchiveMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetOrArchiveMapToAssetMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetOrArchiveMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetOrArchiveMapToAssetMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetOrArchiveMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetOrArchiveMapToAssetArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetOrArchiveMapToAssetOrArchive(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetOrArchiveMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetOrArchiveMapToAssetOrArchiveArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetOrArchiveMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetOrArchiveMapToAssetOrArchiveMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetOrArchiveMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetOrArchiveMapToAssetOrArchiveArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetOrArchiveMapToAssetOrArchiveMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetOrArchiveMapToAssetOrArchiveMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetOrArchiveMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetOrArchiveMapToAssetOrArchiveArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetOrArchiveMapToBool(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (bool, error)) BoolOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetOrArchiveMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetOrArchiveMapToBoolPtr(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetOrArchiveMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetOrArchiveMapToBoolArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetOrArchiveMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetOrArchiveMapToBoolMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetOrArchiveMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetOrArchiveMapToBoolArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetOrArchiveMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetOrArchiveMapToBoolMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetOrArchiveMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetOrArchiveMapToBoolMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetOrArchiveMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetOrArchiveMapToBoolArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetOrArchiveMapToFloat64(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (float64, error)) Float64Output {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetOrArchiveMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetOrArchiveMapToFloat64Ptr(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetOrArchiveMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetOrArchiveMapToFloat64Array(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetOrArchiveMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetOrArchiveMapToFloat64Map(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetOrArchiveMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetOrArchiveMapToFloat64ArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetOrArchiveMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetOrArchiveMapToFloat64MapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetOrArchiveMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetOrArchiveMapToFloat64MapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetOrArchiveMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetOrArchiveMapToFloat64ArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToID is like ApplyT, but returns a IDOutput.
func ApplyAssetOrArchiveMapToID(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (ID, error)) IDOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetOrArchiveMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetOrArchiveMapToIDPtr(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (*ID, error)) IDPtrOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetOrArchiveMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetOrArchiveMapToIDArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetOrArchiveMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetOrArchiveMapToIDMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetOrArchiveMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetOrArchiveMapToIDArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetOrArchiveMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetOrArchiveMapToIDMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetOrArchiveMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetOrArchiveMapToIDMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetOrArchiveMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetOrArchiveMapToIDArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetOrArchiveMapToArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetOrArchiveMapToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetOrArchiveMapToMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetOrArchiveMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetOrArchiveMapToArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetOrArchiveMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetOrArchiveMapToMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetOrArchiveMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetOrArchiveMapToMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetOrArchiveMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetOrArchiveMapToArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetOrArchiveMapToInt(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (int, error)) IntOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetOrArchiveMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetOrArchiveMapToIntPtr(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (*int, error)) IntPtrOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetOrArchiveMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetOrArchiveMapToIntArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]int, error)) IntArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetOrArchiveMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetOrArchiveMapToIntMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetOrArchiveMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetOrArchiveMapToIntArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetOrArchiveMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetOrArchiveMapToIntMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetOrArchiveMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetOrArchiveMapToIntMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetOrArchiveMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetOrArchiveMapToIntArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToString is like ApplyT, but returns a StringOutput.
func ApplyAssetOrArchiveMapToString(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (string, error)) StringOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetOrArchiveMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetOrArchiveMapToStringPtr(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (*string, error)) StringPtrOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetOrArchiveMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetOrArchiveMapToStringArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]string, error)) StringArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetOrArchiveMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetOrArchiveMapToStringMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetOrArchiveMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetOrArchiveMapToStringArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetOrArchiveMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetOrArchiveMapToStringMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetOrArchiveMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetOrArchiveMapToStringMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetOrArchiveMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetOrArchiveMapToStringArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetOrArchiveMapToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetOrArchiveMapToURN(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (URN, error)) URNOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetOrArchiveMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetOrArchiveMapToURNPtr(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (*URN, error)) URNPtrOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetOrArchiveMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetOrArchiveMapToURNArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetOrArchiveMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetOrArchiveMapToURNMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetOrArchiveMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetOrArchiveMapToURNArrayMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetOrArchiveMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetOrArchiveMapToURNMapArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetOrArchiveMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetOrArchiveMapToURNMapMap(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetOrArchiveMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetOrArchiveMapToURNArrayArray(o AssetOrArchiveMapInput, applier func(v map[string]AssetOrArchive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOrArchiveMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetOrArchiveArrayMapToArchive(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (Archive, error)) ArchiveOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetOrArchiveArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetOrArchiveArrayMapToArchiveArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetOrArchiveArrayMapToArchiveMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetOrArchiveArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToArchiveArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToArchiveMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetOrArchiveArrayMapToArchiveMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToArchiveArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetOrArchiveArrayMapToAsset(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (Asset, error)) AssetOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetOrArchiveArrayMapToAssetArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetOrArchiveArrayMapToAssetMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToAssetArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToAssetMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetOrArchiveArrayMapToAssetMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToAssetArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetOrArchiveArrayMapToAssetOrArchive(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetOrArchiveArrayMapToAssetOrArchiveArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetOrArchiveArrayMapToAssetOrArchiveMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToAssetOrArchiveArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToAssetOrArchiveMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetOrArchiveArrayMapToAssetOrArchiveMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToAssetOrArchiveArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetOrArchiveArrayMapToBool(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (bool, error)) BoolOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetOrArchiveArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetOrArchiveArrayMapToBoolPtr(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetOrArchiveArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetOrArchiveArrayMapToBoolArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetOrArchiveArrayMapToBoolMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetOrArchiveArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToBoolArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToBoolMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetOrArchiveArrayMapToBoolMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToBoolArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetOrArchiveArrayMapToFloat64(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (float64, error)) Float64Output {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetOrArchiveArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetOrArchiveArrayMapToFloat64Ptr(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetOrArchiveArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetOrArchiveArrayMapToFloat64Array(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetOrArchiveArrayMapToFloat64Map(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetOrArchiveArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToFloat64ArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetOrArchiveArrayMapToFloat64MapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetOrArchiveArrayMapToFloat64MapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToFloat64ArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyAssetOrArchiveArrayMapToID(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (ID, error)) IDOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetOrArchiveArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetOrArchiveArrayMapToIDPtr(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (*ID, error)) IDPtrOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetOrArchiveArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetOrArchiveArrayMapToIDArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetOrArchiveArrayMapToIDMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetOrArchiveArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToIDArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToIDMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetOrArchiveArrayMapToIDMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToIDArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetOrArchiveArrayMapToArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetOrArchiveArrayMapToMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetOrArchiveArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetOrArchiveArrayMapToMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetOrArchiveArrayMapToMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetOrArchiveArrayMapToInt(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (int, error)) IntOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetOrArchiveArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetOrArchiveArrayMapToIntPtr(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (*int, error)) IntPtrOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetOrArchiveArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetOrArchiveArrayMapToIntArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]int, error)) IntArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetOrArchiveArrayMapToIntMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetOrArchiveArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToIntArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToIntMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetOrArchiveArrayMapToIntMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToIntArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyAssetOrArchiveArrayMapToString(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (string, error)) StringOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetOrArchiveArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetOrArchiveArrayMapToStringPtr(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (*string, error)) StringPtrOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetOrArchiveArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetOrArchiveArrayMapToStringArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]string, error)) StringArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetOrArchiveArrayMapToStringMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetOrArchiveArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToStringArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToStringMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetOrArchiveArrayMapToStringMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToStringArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetOrArchiveArrayMapToURN(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (URN, error)) URNOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetOrArchiveArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetOrArchiveArrayMapToURNPtr(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (*URN, error)) URNPtrOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetOrArchiveArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetOrArchiveArrayMapToURNArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetOrArchiveArrayMapToURNMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetOrArchiveArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetOrArchiveArrayMapToURNArrayMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetOrArchiveArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetOrArchiveArrayMapToURNMapArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetOrArchiveArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetOrArchiveArrayMapToURNMapMap(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetOrArchiveArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetOrArchiveArrayMapToURNArrayArray(o AssetOrArchiveArrayMapInput, applier func(v map[string][]AssetOrArchive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOrArchiveArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetOrArchiveMapArrayToArchive(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (Archive, error)) ArchiveOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetOrArchiveMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetOrArchiveMapArrayToArchiveArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetOrArchiveMapArrayToArchiveMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetOrArchiveMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToArchiveArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToArchiveMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetOrArchiveMapArrayToArchiveMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToArchiveArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetOrArchiveMapArrayToAsset(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (Asset, error)) AssetOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetOrArchiveMapArrayToAssetArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetOrArchiveMapArrayToAssetMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToAssetArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToAssetMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetOrArchiveMapArrayToAssetMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToAssetArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetOrArchiveMapArrayToAssetOrArchive(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetOrArchiveMapArrayToAssetOrArchiveArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetOrArchiveMapArrayToAssetOrArchiveMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToAssetOrArchiveArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToAssetOrArchiveMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetOrArchiveMapArrayToAssetOrArchiveMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToAssetOrArchiveArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetOrArchiveMapArrayToBool(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (bool, error)) BoolOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetOrArchiveMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetOrArchiveMapArrayToBoolPtr(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetOrArchiveMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetOrArchiveMapArrayToBoolArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetOrArchiveMapArrayToBoolMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetOrArchiveMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToBoolArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToBoolMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetOrArchiveMapArrayToBoolMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToBoolArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetOrArchiveMapArrayToFloat64(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (float64, error)) Float64Output {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetOrArchiveMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetOrArchiveMapArrayToFloat64Ptr(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetOrArchiveMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetOrArchiveMapArrayToFloat64Array(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetOrArchiveMapArrayToFloat64Map(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetOrArchiveMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToFloat64ArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetOrArchiveMapArrayToFloat64MapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetOrArchiveMapArrayToFloat64MapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToFloat64ArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyAssetOrArchiveMapArrayToID(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (ID, error)) IDOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetOrArchiveMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetOrArchiveMapArrayToIDPtr(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (*ID, error)) IDPtrOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetOrArchiveMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetOrArchiveMapArrayToIDArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetOrArchiveMapArrayToIDMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetOrArchiveMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToIDArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToIDMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetOrArchiveMapArrayToIDMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToIDArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetOrArchiveMapArrayToArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetOrArchiveMapArrayToMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetOrArchiveMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetOrArchiveMapArrayToMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetOrArchiveMapArrayToMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetOrArchiveMapArrayToInt(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (int, error)) IntOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetOrArchiveMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetOrArchiveMapArrayToIntPtr(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (*int, error)) IntPtrOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetOrArchiveMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetOrArchiveMapArrayToIntArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]int, error)) IntArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetOrArchiveMapArrayToIntMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetOrArchiveMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToIntArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToIntMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetOrArchiveMapArrayToIntMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToIntArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyAssetOrArchiveMapArrayToString(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (string, error)) StringOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetOrArchiveMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetOrArchiveMapArrayToStringPtr(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (*string, error)) StringPtrOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetOrArchiveMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetOrArchiveMapArrayToStringArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]string, error)) StringArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetOrArchiveMapArrayToStringMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetOrArchiveMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToStringArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToStringMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetOrArchiveMapArrayToStringMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToStringArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetOrArchiveMapArrayToURN(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (URN, error)) URNOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetOrArchiveMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetOrArchiveMapArrayToURNPtr(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (*URN, error)) URNPtrOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetOrArchiveMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetOrArchiveMapArrayToURNArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetOrArchiveMapArrayToURNMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetOrArchiveMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetOrArchiveMapArrayToURNArrayMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetOrArchiveMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetOrArchiveMapArrayToURNMapArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetOrArchiveMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetOrArchiveMapArrayToURNMapMap(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetOrArchiveMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetOrArchiveMapArrayToURNArrayArray(o AssetOrArchiveMapArrayInput, applier func(v []map[string]AssetOrArchive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOrArchiveMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetOrArchiveMapMapToArchive(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (Archive, error)) ArchiveOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetOrArchiveMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetOrArchiveMapMapToArchiveArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetOrArchiveMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetOrArchiveMapMapToArchiveMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetOrArchiveMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetOrArchiveMapMapToArchiveArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetOrArchiveMapMapToArchiveMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetOrArchiveMapMapToArchiveMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToArchiveArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetOrArchiveMapMapToAsset(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (Asset, error)) AssetOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetOrArchiveMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetOrArchiveMapMapToAssetArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetOrArchiveMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetOrArchiveMapMapToAssetMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetOrArchiveMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetOrArchiveMapMapToAssetArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetOrArchiveMapMapToAssetMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetOrArchiveMapMapToAssetMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToAssetArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetOrArchiveMapMapToAssetOrArchive(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetOrArchiveMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetOrArchiveMapMapToAssetOrArchiveArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetOrArchiveMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetOrArchiveMapMapToAssetOrArchiveMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetOrArchiveMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetOrArchiveMapMapToAssetOrArchiveArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetOrArchiveMapMapToAssetOrArchiveMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetOrArchiveMapMapToAssetOrArchiveMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToAssetOrArchiveArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetOrArchiveMapMapToBool(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (bool, error)) BoolOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetOrArchiveMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetOrArchiveMapMapToBoolPtr(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetOrArchiveMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetOrArchiveMapMapToBoolArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetOrArchiveMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetOrArchiveMapMapToBoolMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetOrArchiveMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetOrArchiveMapMapToBoolArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetOrArchiveMapMapToBoolMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetOrArchiveMapMapToBoolMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToBoolArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetOrArchiveMapMapToFloat64(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (float64, error)) Float64Output {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetOrArchiveMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetOrArchiveMapMapToFloat64Ptr(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetOrArchiveMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetOrArchiveMapMapToFloat64Array(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetOrArchiveMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetOrArchiveMapMapToFloat64Map(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetOrArchiveMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetOrArchiveMapMapToFloat64ArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetOrArchiveMapMapToFloat64MapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetOrArchiveMapMapToFloat64MapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetOrArchiveMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToFloat64ArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyAssetOrArchiveMapMapToID(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (ID, error)) IDOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetOrArchiveMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetOrArchiveMapMapToIDPtr(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (*ID, error)) IDPtrOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetOrArchiveMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetOrArchiveMapMapToIDArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetOrArchiveMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetOrArchiveMapMapToIDMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetOrArchiveMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetOrArchiveMapMapToIDArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetOrArchiveMapMapToIDMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetOrArchiveMapMapToIDMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToIDArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetOrArchiveMapMapToArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetOrArchiveMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetOrArchiveMapMapToMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetOrArchiveMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetOrArchiveMapMapToArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetOrArchiveMapMapToMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetOrArchiveMapMapToMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetOrArchiveMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetOrArchiveMapMapToInt(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (int, error)) IntOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetOrArchiveMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetOrArchiveMapMapToIntPtr(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (*int, error)) IntPtrOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetOrArchiveMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetOrArchiveMapMapToIntArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]int, error)) IntArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetOrArchiveMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetOrArchiveMapMapToIntMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetOrArchiveMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetOrArchiveMapMapToIntArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetOrArchiveMapMapToIntMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetOrArchiveMapMapToIntMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToIntArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyAssetOrArchiveMapMapToString(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (string, error)) StringOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetOrArchiveMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetOrArchiveMapMapToStringPtr(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (*string, error)) StringPtrOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetOrArchiveMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetOrArchiveMapMapToStringArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]string, error)) StringArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetOrArchiveMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetOrArchiveMapMapToStringMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetOrArchiveMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetOrArchiveMapMapToStringArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetOrArchiveMapMapToStringMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetOrArchiveMapMapToStringMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToStringArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetOrArchiveMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetOrArchiveMapMapToURN(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (URN, error)) URNOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetOrArchiveMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetOrArchiveMapMapToURNPtr(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (*URN, error)) URNPtrOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetOrArchiveMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetOrArchiveMapMapToURNArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetOrArchiveMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetOrArchiveMapMapToURNMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetOrArchiveMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetOrArchiveMapMapToURNArrayMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetOrArchiveMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetOrArchiveMapMapToURNMapArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetOrArchiveMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetOrArchiveMapMapToURNMapMap(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetOrArchiveMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetOrArchiveMapMapToURNArrayArray(o AssetOrArchiveMapMapInput, applier func(v map[string]map[string]AssetOrArchive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOrArchiveMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyAssetOrArchiveArrayArrayToArchive(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (Archive, error)) ArchiveOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyAssetOrArchiveArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyAssetOrArchiveArrayArrayToArchiveArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyAssetOrArchiveArrayArrayToArchiveMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToArchiveArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToArchiveMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToArchiveMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToArchiveArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyAssetOrArchiveArrayArrayToAsset(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (Asset, error)) AssetOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyAssetOrArchiveArrayArrayToAssetArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]Asset, error)) AssetArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyAssetOrArchiveArrayArrayToAssetMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]Asset, error)) AssetMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToAssetArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToAssetMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToAssetMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToAssetArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyAssetOrArchiveArrayArrayToAssetOrArchive(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyAssetOrArchiveArrayArrayToAssetOrArchiveArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyAssetOrArchiveArrayArrayToAssetOrArchiveMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToAssetOrArchiveArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToAssetOrArchiveMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToAssetOrArchiveMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToAssetOrArchiveArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyAssetOrArchiveArrayArrayToBool(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (bool, error)) BoolOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyAssetOrArchiveArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyAssetOrArchiveArrayArrayToBoolPtr(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (*bool, error)) BoolPtrOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyAssetOrArchiveArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyAssetOrArchiveArrayArrayToBoolArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]bool, error)) BoolArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyAssetOrArchiveArrayArrayToBoolMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]bool, error)) BoolMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToBoolArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToBoolMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToBoolMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToBoolArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyAssetOrArchiveArrayArrayToFloat64(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (float64, error)) Float64Output {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyAssetOrArchiveArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyAssetOrArchiveArrayArrayToFloat64Ptr(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (*float64, error)) Float64PtrOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyAssetOrArchiveArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyAssetOrArchiveArrayArrayToFloat64Array(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]float64, error)) Float64ArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyAssetOrArchiveArrayArrayToFloat64Map(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]float64, error)) Float64MapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyAssetOrArchiveArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToFloat64ArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToFloat64MapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyAssetOrArchiveArrayArrayToFloat64MapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToFloat64ArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyAssetOrArchiveArrayArrayToID(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (ID, error)) IDOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyAssetOrArchiveArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyAssetOrArchiveArrayArrayToIDPtr(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (*ID, error)) IDPtrOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyAssetOrArchiveArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyAssetOrArchiveArrayArrayToIDArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]ID, error)) IDArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyAssetOrArchiveArrayArrayToIDMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]ID, error)) IDMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToIDArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToIDMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToIDMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToIDArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyAssetOrArchiveArrayArrayToArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]interface{}, error)) ArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyAssetOrArchiveArrayArrayToMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]interface{}, error)) MapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyAssetOrArchiveArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyAssetOrArchiveArrayArrayToMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyAssetOrArchiveArrayArrayToInt(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (int, error)) IntOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyAssetOrArchiveArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyAssetOrArchiveArrayArrayToIntPtr(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (*int, error)) IntPtrOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyAssetOrArchiveArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyAssetOrArchiveArrayArrayToIntArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]int, error)) IntArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyAssetOrArchiveArrayArrayToIntMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]int, error)) IntMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToIntArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToIntMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToIntMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToIntArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]int, error)) IntArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyAssetOrArchiveArrayArrayToString(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (string, error)) StringOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyAssetOrArchiveArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyAssetOrArchiveArrayArrayToStringPtr(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (*string, error)) StringPtrOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyAssetOrArchiveArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyAssetOrArchiveArrayArrayToStringArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]string, error)) StringArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyAssetOrArchiveArrayArrayToStringMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]string, error)) StringMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToStringArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToStringMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToStringMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToStringArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]string, error)) StringArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyAssetOrArchiveArrayArrayToURN(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (URN, error)) URNOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyAssetOrArchiveArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyAssetOrArchiveArrayArrayToURNPtr(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (*URN, error)) URNPtrOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyAssetOrArchiveArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyAssetOrArchiveArrayArrayToURNArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]URN, error)) URNArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyAssetOrArchiveArrayArrayToURNMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]URN, error)) URNMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyAssetOrArchiveArrayArrayToURNArrayMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyAssetOrArchiveArrayArrayToURNMapArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyAssetOrArchiveArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyAssetOrArchiveArrayArrayToURNMapMap(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyAssetOrArchiveArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyAssetOrArchiveArrayArrayToURNArrayArray(o AssetOrArchiveArrayArrayInput, applier func(v [][]AssetOrArchive) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToAssetOrArchiveArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolToArchive(o BoolInput, applier func(v bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolToArchiveArray(o BoolInput, applier func(v bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolToArchiveMap(o BoolInput, applier func(v bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolToArchiveArrayMap(o BoolInput, applier func(v bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolToArchiveMapArray(o BoolInput, applier func(v bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolToArchiveMapMap(o BoolInput, applier func(v bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolToArchiveArrayArray(o BoolInput, applier func(v bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolToAsset(o BoolInput, applier func(v bool) (Asset, error)) AssetOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolToAssetArray(o BoolInput, applier func(v bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolToAssetMap(o BoolInput, applier func(v bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolToAssetArrayMap(o BoolInput, applier func(v bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolToAssetMapArray(o BoolInput, applier func(v bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolToAssetMapMap(o BoolInput, applier func(v bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolToAssetArrayArray(o BoolInput, applier func(v bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolToAssetOrArchive(o BoolInput, applier func(v bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolToAssetOrArchiveArray(o BoolInput, applier func(v bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolToAssetOrArchiveMap(o BoolInput, applier func(v bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolToAssetOrArchiveArrayMap(o BoolInput, applier func(v bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolToAssetOrArchiveMapArray(o BoolInput, applier func(v bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolToAssetOrArchiveMapMap(o BoolInput, applier func(v bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolToAssetOrArchiveArrayArray(o BoolInput, applier func(v bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolToBool(o BoolInput, applier func(v bool) (bool, error)) BoolOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolToBoolPtr(o BoolInput, applier func(v bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolToBoolArray(o BoolInput, applier func(v bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolToBoolMap(o BoolInput, applier func(v bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolToBoolArrayMap(o BoolInput, applier func(v bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolToBoolMapArray(o BoolInput, applier func(v bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolToBoolMapMap(o BoolInput, applier func(v bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolToBoolArrayArray(o BoolInput, applier func(v bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolToFloat64(o BoolInput, applier func(v bool) (float64, error)) Float64Output {
	return o.ToBoolOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolToFloat64Ptr(o BoolInput, applier func(v bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolToFloat64Array(o BoolInput, applier func(v bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolToFloat64Map(o BoolInput, applier func(v bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolToFloat64ArrayMap(o BoolInput, applier func(v bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolToFloat64MapArray(o BoolInput, applier func(v bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolToFloat64MapMap(o BoolInput, applier func(v bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolToFloat64ArrayArray(o BoolInput, applier func(v bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolToID is like ApplyT, but returns a IDOutput.
func ApplyBoolToID(o BoolInput, applier func(v bool) (ID, error)) IDOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolToIDPtr(o BoolInput, applier func(v bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolToIDArray(o BoolInput, applier func(v bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolToIDMap(o BoolInput, applier func(v bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolToIDArrayMap(o BoolInput, applier func(v bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolToIDMapArray(o BoolInput, applier func(v bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolToIDMapMap(o BoolInput, applier func(v bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolToIDArrayArray(o BoolInput, applier func(v bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolToArray(o BoolInput, applier func(v bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolToMap(o BoolInput, applier func(v bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolToArrayMap(o BoolInput, applier func(v bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolToMapArray(o BoolInput, applier func(v bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolToMapMap(o BoolInput, applier func(v bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolToArrayArray(o BoolInput, applier func(v bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolToInt(o BoolInput, applier func(v bool) (int, error)) IntOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolToIntPtr(o BoolInput, applier func(v bool) (*int, error)) IntPtrOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolToIntArray(o BoolInput, applier func(v bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolToIntMap(o BoolInput, applier func(v bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolToIntArrayMap(o BoolInput, applier func(v bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolToIntMapArray(o BoolInput, applier func(v bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolToIntMapMap(o BoolInput, applier func(v bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolToIntArrayArray(o BoolInput, applier func(v bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolToString is like ApplyT, but returns a StringOutput.
func ApplyBoolToString(o BoolInput, applier func(v bool) (string, error)) StringOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolToStringPtr(o BoolInput, applier func(v bool) (*string, error)) StringPtrOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolToStringArray(o BoolInput, applier func(v bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolToStringMap(o BoolInput, applier func(v bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolToStringArrayMap(o BoolInput, applier func(v bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolToStringMapArray(o BoolInput, applier func(v bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolToStringMapMap(o BoolInput, applier func(v bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolToStringArrayArray(o BoolInput, applier func(v bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolToURN(o BoolInput, applier func(v bool) (URN, error)) URNOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolToURNPtr(o BoolInput, applier func(v bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolToURNArray(o BoolInput, applier func(v bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolToURNMap(o BoolInput, applier func(v bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolToURNArrayMap(o BoolInput, applier func(v bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolToURNMapArray(o BoolInput, applier func(v bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolToURNMapMap(o BoolInput, applier func(v bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolToURNArrayArray(o BoolInput, applier func(v bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolPtrToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolPtrToArchive(o BoolPtrInput, applier func(v *bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolPtrToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolPtrToArchiveArray(o BoolPtrInput, applier func(v *bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolPtrToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolPtrToArchiveMap(o BoolPtrInput, applier func(v *bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolPtrToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolPtrToArchiveArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolPtrToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolPtrToArchiveMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolPtrToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolPtrToArchiveMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolPtrToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolPtrToArchiveArrayArray(o BoolPtrInput, applier func(v *bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolPtrToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolPtrToAsset(o BoolPtrInput, applier func(v *bool) (Asset, error)) AssetOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolPtrToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolPtrToAssetArray(o BoolPtrInput, applier func(v *bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolPtrToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolPtrToAssetMap(o BoolPtrInput, applier func(v *bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolPtrToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolPtrToAssetArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolPtrToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolPtrToAssetMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolPtrToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolPtrToAssetMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolPtrToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolPtrToAssetArrayArray(o BoolPtrInput, applier func(v *bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolPtrToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolPtrToAssetOrArchive(o BoolPtrInput, applier func(v *bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolPtrToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolPtrToAssetOrArchiveArray(o BoolPtrInput, applier func(v *bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolPtrToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolPtrToAssetOrArchiveMap(o BoolPtrInput, applier func(v *bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolPtrToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolPtrToAssetOrArchiveArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolPtrToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolPtrToAssetOrArchiveMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolPtrToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolPtrToAssetOrArchiveMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolPtrToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolPtrToAssetOrArchiveArrayArray(o BoolPtrInput, applier func(v *bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolPtrToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolPtrToBool(o BoolPtrInput, applier func(v *bool) (bool, error)) BoolOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolPtrToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolPtrToBoolPtr(o BoolPtrInput, applier func(v *bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolPtrToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolPtrToBoolArray(o BoolPtrInput, applier func(v *bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolPtrToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolPtrToBoolMap(o BoolPtrInput, applier func(v *bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolPtrToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolPtrToBoolArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolPtrToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolPtrToBoolMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolPtrToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolPtrToBoolMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolPtrToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolPtrToBoolArrayArray(o BoolPtrInput, applier func(v *bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolPtrToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolPtrToFloat64(o BoolPtrInput, applier func(v *bool) (float64, error)) Float64Output {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolPtrToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolPtrToFloat64Ptr(o BoolPtrInput, applier func(v *bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolPtrToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolPtrToFloat64Array(o BoolPtrInput, applier func(v *bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolPtrToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolPtrToFloat64Map(o BoolPtrInput, applier func(v *bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolPtrToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolPtrToFloat64ArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolPtrToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolPtrToFloat64MapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolPtrToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolPtrToFloat64MapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolPtrToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolPtrToFloat64ArrayArray(o BoolPtrInput, applier func(v *bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolPtrToID is like ApplyT, but returns a IDOutput.
func ApplyBoolPtrToID(o BoolPtrInput, applier func(v *bool) (ID, error)) IDOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolPtrToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolPtrToIDPtr(o BoolPtrInput, applier func(v *bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolPtrToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolPtrToIDArray(o BoolPtrInput, applier func(v *bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolPtrToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolPtrToIDMap(o BoolPtrInput, applier func(v *bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolPtrToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolPtrToIDArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolPtrToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolPtrToIDMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolPtrToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolPtrToIDMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolPtrToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolPtrToIDArrayArray(o BoolPtrInput, applier func(v *bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolPtrToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolPtrToArray(o BoolPtrInput, applier func(v *bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolPtrToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolPtrToMap(o BoolPtrInput, applier func(v *bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolPtrToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolPtrToArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolPtrToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolPtrToMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolPtrToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolPtrToMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolPtrToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolPtrToArrayArray(o BoolPtrInput, applier func(v *bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolPtrToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolPtrToInt(o BoolPtrInput, applier func(v *bool) (int, error)) IntOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolPtrToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolPtrToIntPtr(o BoolPtrInput, applier func(v *bool) (*int, error)) IntPtrOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolPtrToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolPtrToIntArray(o BoolPtrInput, applier func(v *bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolPtrToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolPtrToIntMap(o BoolPtrInput, applier func(v *bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolPtrToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolPtrToIntArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolPtrToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolPtrToIntMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolPtrToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolPtrToIntMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolPtrToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolPtrToIntArrayArray(o BoolPtrInput, applier func(v *bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolPtrToString is like ApplyT, but returns a StringOutput.
func ApplyBoolPtrToString(o BoolPtrInput, applier func(v *bool) (string, error)) StringOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolPtrToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolPtrToStringPtr(o BoolPtrInput, applier func(v *bool) (*string, error)) StringPtrOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolPtrToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolPtrToStringArray(o BoolPtrInput, applier func(v *bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolPtrToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolPtrToStringMap(o BoolPtrInput, applier func(v *bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolPtrToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolPtrToStringArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolPtrToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolPtrToStringMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolPtrToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolPtrToStringMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolPtrToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolPtrToStringArrayArray(o BoolPtrInput, applier func(v *bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolPtrToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolPtrToURN(o BoolPtrInput, applier func(v *bool) (URN, error)) URNOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolPtrToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolPtrToURNPtr(o BoolPtrInput, applier func(v *bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolPtrToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolPtrToURNArray(o BoolPtrInput, applier func(v *bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolPtrToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolPtrToURNMap(o BoolPtrInput, applier func(v *bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolPtrToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolPtrToURNArrayMap(o BoolPtrInput, applier func(v *bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolPtrToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolPtrToURNMapArray(o BoolPtrInput, applier func(v *bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolPtrToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolPtrToURNMapMap(o BoolPtrInput, applier func(v *bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolPtrToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolPtrToURNArrayArray(o BoolPtrInput, applier func(v *bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolPtrOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolArrayToArchive(o BoolArrayInput, applier func(v []bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolArrayToArchiveArray(o BoolArrayInput, applier func(v []bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolArrayToArchiveMap(o BoolArrayInput, applier func(v []bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolArrayToArchiveArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolArrayToArchiveMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolArrayToArchiveMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolArrayToArchiveArrayArray(o BoolArrayInput, applier func(v []bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolArrayToAsset(o BoolArrayInput, applier func(v []bool) (Asset, error)) AssetOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolArrayToAssetArray(o BoolArrayInput, applier func(v []bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolArrayToAssetMap(o BoolArrayInput, applier func(v []bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolArrayToAssetArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolArrayToAssetMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolArrayToAssetMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolArrayToAssetArrayArray(o BoolArrayInput, applier func(v []bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolArrayToAssetOrArchive(o BoolArrayInput, applier func(v []bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolArrayToAssetOrArchiveArray(o BoolArrayInput, applier func(v []bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolArrayToAssetOrArchiveMap(o BoolArrayInput, applier func(v []bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolArrayToAssetOrArchiveArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolArrayToAssetOrArchiveMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolArrayToAssetOrArchiveMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolArrayToAssetOrArchiveArrayArray(o BoolArrayInput, applier func(v []bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolArrayToBool(o BoolArrayInput, applier func(v []bool) (bool, error)) BoolOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolArrayToBoolPtr(o BoolArrayInput, applier func(v []bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolArrayToBoolArray(o BoolArrayInput, applier func(v []bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolArrayToBoolMap(o BoolArrayInput, applier func(v []bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolArrayToBoolArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolArrayToBoolMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolArrayToBoolMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolArrayToBoolArrayArray(o BoolArrayInput, applier func(v []bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolArrayToFloat64(o BoolArrayInput, applier func(v []bool) (float64, error)) Float64Output {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolArrayToFloat64Ptr(o BoolArrayInput, applier func(v []bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolArrayToFloat64Array(o BoolArrayInput, applier func(v []bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolArrayToFloat64Map(o BoolArrayInput, applier func(v []bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolArrayToFloat64ArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolArrayToFloat64MapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolArrayToFloat64MapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolArrayToFloat64ArrayArray(o BoolArrayInput, applier func(v []bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolArrayToID is like ApplyT, but returns a IDOutput.
func ApplyBoolArrayToID(o BoolArrayInput, applier func(v []bool) (ID, error)) IDOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolArrayToIDPtr(o BoolArrayInput, applier func(v []bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolArrayToIDArray(o BoolArrayInput, applier func(v []bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolArrayToIDMap(o BoolArrayInput, applier func(v []bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolArrayToIDArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolArrayToIDMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolArrayToIDMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolArrayToIDArrayArray(o BoolArrayInput, applier func(v []bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolArrayToArray(o BoolArrayInput, applier func(v []bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolArrayToMap(o BoolArrayInput, applier func(v []bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolArrayToArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolArrayToMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolArrayToMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolArrayToArrayArray(o BoolArrayInput, applier func(v []bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolArrayToInt(o BoolArrayInput, applier func(v []bool) (int, error)) IntOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolArrayToIntPtr(o BoolArrayInput, applier func(v []bool) (*int, error)) IntPtrOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolArrayToIntArray(o BoolArrayInput, applier func(v []bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolArrayToIntMap(o BoolArrayInput, applier func(v []bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolArrayToIntArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolArrayToIntMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolArrayToIntMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolArrayToIntArrayArray(o BoolArrayInput, applier func(v []bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolArrayToString is like ApplyT, but returns a StringOutput.
func ApplyBoolArrayToString(o BoolArrayInput, applier func(v []bool) (string, error)) StringOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolArrayToStringPtr(o BoolArrayInput, applier func(v []bool) (*string, error)) StringPtrOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolArrayToStringArray(o BoolArrayInput, applier func(v []bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolArrayToStringMap(o BoolArrayInput, applier func(v []bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolArrayToStringArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolArrayToStringMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolArrayToStringMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolArrayToStringArrayArray(o BoolArrayInput, applier func(v []bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolArrayToURN(o BoolArrayInput, applier func(v []bool) (URN, error)) URNOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolArrayToURNPtr(o BoolArrayInput, applier func(v []bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolArrayToURNArray(o BoolArrayInput, applier func(v []bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolArrayToURNMap(o BoolArrayInput, applier func(v []bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolArrayToURNArrayMap(o BoolArrayInput, applier func(v []bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolArrayToURNMapArray(o BoolArrayInput, applier func(v []bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolArrayToURNMapMap(o BoolArrayInput, applier func(v []bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolArrayToURNArrayArray(o BoolArrayInput, applier func(v []bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolMapToArchive(o BoolMapInput, applier func(v map[string]bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolMapToArchiveArray(o BoolMapInput, applier func(v map[string]bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolMapToArchiveMap(o BoolMapInput, applier func(v map[string]bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolMapToArchiveArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolMapToArchiveMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolMapToArchiveMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolMapToArchiveArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolMapToAsset(o BoolMapInput, applier func(v map[string]bool) (Asset, error)) AssetOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolMapToAssetArray(o BoolMapInput, applier func(v map[string]bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolMapToAssetMap(o BoolMapInput, applier func(v map[string]bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolMapToAssetArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolMapToAssetMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolMapToAssetMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolMapToAssetArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolMapToAssetOrArchive(o BoolMapInput, applier func(v map[string]bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolMapToAssetOrArchiveArray(o BoolMapInput, applier func(v map[string]bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolMapToAssetOrArchiveMap(o BoolMapInput, applier func(v map[string]bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolMapToAssetOrArchiveArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolMapToAssetOrArchiveMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolMapToAssetOrArchiveMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolMapToAssetOrArchiveArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolMapToBool(o BoolMapInput, applier func(v map[string]bool) (bool, error)) BoolOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolMapToBoolPtr(o BoolMapInput, applier func(v map[string]bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolMapToBoolArray(o BoolMapInput, applier func(v map[string]bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolMapToBoolMap(o BoolMapInput, applier func(v map[string]bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolMapToBoolArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolMapToBoolMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolMapToBoolMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolMapToBoolArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolMapToFloat64(o BoolMapInput, applier func(v map[string]bool) (float64, error)) Float64Output {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolMapToFloat64Ptr(o BoolMapInput, applier func(v map[string]bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolMapToFloat64Array(o BoolMapInput, applier func(v map[string]bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolMapToFloat64Map(o BoolMapInput, applier func(v map[string]bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolMapToFloat64ArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolMapToFloat64MapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolMapToFloat64MapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolMapToFloat64ArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolMapToID is like ApplyT, but returns a IDOutput.
func ApplyBoolMapToID(o BoolMapInput, applier func(v map[string]bool) (ID, error)) IDOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolMapToIDPtr(o BoolMapInput, applier func(v map[string]bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolMapToIDArray(o BoolMapInput, applier func(v map[string]bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolMapToIDMap(o BoolMapInput, applier func(v map[string]bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolMapToIDArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolMapToIDMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolMapToIDMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolMapToIDArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolMapToArray(o BoolMapInput, applier func(v map[string]bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolMapToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolMapToMap(o BoolMapInput, applier func(v map[string]bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolMapToArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolMapToMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolMapToMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolMapToArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolMapToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolMapToInt(o BoolMapInput, applier func(v map[string]bool) (int, error)) IntOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolMapToIntPtr(o BoolMapInput, applier func(v map[string]bool) (*int, error)) IntPtrOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolMapToIntArray(o BoolMapInput, applier func(v map[string]bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolMapToIntMap(o BoolMapInput, applier func(v map[string]bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolMapToIntArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolMapToIntMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolMapToIntMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolMapToIntArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolMapToString is like ApplyT, but returns a StringOutput.
func ApplyBoolMapToString(o BoolMapInput, applier func(v map[string]bool) (string, error)) StringOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolMapToStringPtr(o BoolMapInput, applier func(v map[string]bool) (*string, error)) StringPtrOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolMapToStringArray(o BoolMapInput, applier func(v map[string]bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolMapToStringMap(o BoolMapInput, applier func(v map[string]bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolMapToStringArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolMapToStringMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolMapToStringMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolMapToStringArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolMapToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolMapToURN(o BoolMapInput, applier func(v map[string]bool) (URN, error)) URNOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolMapToURNPtr(o BoolMapInput, applier func(v map[string]bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolMapToURNArray(o BoolMapInput, applier func(v map[string]bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolMapToURNMap(o BoolMapInput, applier func(v map[string]bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolMapToURNArrayMap(o BoolMapInput, applier func(v map[string]bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolMapToURNMapArray(o BoolMapInput, applier func(v map[string]bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolMapToURNMapMap(o BoolMapInput, applier func(v map[string]bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolMapToURNArrayArray(o BoolMapInput, applier func(v map[string]bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolArrayMapToArchive(o BoolArrayMapInput, applier func(v map[string][]bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolArrayMapToArchiveArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolArrayMapToArchiveMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolArrayMapToArchiveArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolArrayMapToArchiveMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolArrayMapToArchiveMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolArrayMapToArchiveArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolArrayMapToAsset(o BoolArrayMapInput, applier func(v map[string][]bool) (Asset, error)) AssetOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolArrayMapToAssetArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolArrayMapToAssetMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolArrayMapToAssetArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolArrayMapToAssetMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolArrayMapToAssetMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolArrayMapToAssetArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolArrayMapToAssetOrArchive(o BoolArrayMapInput, applier func(v map[string][]bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolArrayMapToAssetOrArchiveArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolArrayMapToAssetOrArchiveMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolArrayMapToAssetOrArchiveArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolArrayMapToAssetOrArchiveMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolArrayMapToAssetOrArchiveMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolArrayMapToAssetOrArchiveArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolArrayMapToBool(o BoolArrayMapInput, applier func(v map[string][]bool) (bool, error)) BoolOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolArrayMapToBoolPtr(o BoolArrayMapInput, applier func(v map[string][]bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolArrayMapToBoolArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolArrayMapToBoolMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolArrayMapToBoolArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolArrayMapToBoolMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolArrayMapToBoolMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolArrayMapToBoolArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolArrayMapToFloat64(o BoolArrayMapInput, applier func(v map[string][]bool) (float64, error)) Float64Output {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolArrayMapToFloat64Ptr(o BoolArrayMapInput, applier func(v map[string][]bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolArrayMapToFloat64Array(o BoolArrayMapInput, applier func(v map[string][]bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolArrayMapToFloat64Map(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolArrayMapToFloat64ArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolArrayMapToFloat64MapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolArrayMapToFloat64MapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolArrayMapToFloat64ArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyBoolArrayMapToID(o BoolArrayMapInput, applier func(v map[string][]bool) (ID, error)) IDOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolArrayMapToIDPtr(o BoolArrayMapInput, applier func(v map[string][]bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolArrayMapToIDArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolArrayMapToIDMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolArrayMapToIDArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolArrayMapToIDMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolArrayMapToIDMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolArrayMapToIDArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolArrayMapToArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolArrayMapToMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolArrayMapToArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolArrayMapToMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolArrayMapToMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolArrayMapToArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolArrayMapToInt(o BoolArrayMapInput, applier func(v map[string][]bool) (int, error)) IntOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolArrayMapToIntPtr(o BoolArrayMapInput, applier func(v map[string][]bool) (*int, error)) IntPtrOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolArrayMapToIntArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolArrayMapToIntMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolArrayMapToIntArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolArrayMapToIntMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolArrayMapToIntMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolArrayMapToIntArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyBoolArrayMapToString(o BoolArrayMapInput, applier func(v map[string][]bool) (string, error)) StringOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolArrayMapToStringPtr(o BoolArrayMapInput, applier func(v map[string][]bool) (*string, error)) StringPtrOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolArrayMapToStringArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolArrayMapToStringMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolArrayMapToStringArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolArrayMapToStringMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolArrayMapToStringMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolArrayMapToStringArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolArrayMapToURN(o BoolArrayMapInput, applier func(v map[string][]bool) (URN, error)) URNOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolArrayMapToURNPtr(o BoolArrayMapInput, applier func(v map[string][]bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolArrayMapToURNArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolArrayMapToURNMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolArrayMapToURNArrayMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolArrayMapToURNMapArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolArrayMapToURNMapMap(o BoolArrayMapInput, applier func(v map[string][]bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolArrayMapToURNArrayArray(o BoolArrayMapInput, applier func(v map[string][]bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolMapArrayToArchive(o BoolMapArrayInput, applier func(v []map[string]bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolMapArrayToArchiveArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolMapArrayToArchiveMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolMapArrayToArchiveArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolMapArrayToArchiveMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolMapArrayToArchiveMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolMapArrayToArchiveArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolMapArrayToAsset(o BoolMapArrayInput, applier func(v []map[string]bool) (Asset, error)) AssetOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolMapArrayToAssetArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolMapArrayToAssetMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolMapArrayToAssetArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolMapArrayToAssetMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolMapArrayToAssetMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolMapArrayToAssetArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolMapArrayToAssetOrArchive(o BoolMapArrayInput, applier func(v []map[string]bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolMapArrayToAssetOrArchiveArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolMapArrayToAssetOrArchiveMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolMapArrayToAssetOrArchiveArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolMapArrayToAssetOrArchiveMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolMapArrayToAssetOrArchiveMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolMapArrayToAssetOrArchiveArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolMapArrayToBool(o BoolMapArrayInput, applier func(v []map[string]bool) (bool, error)) BoolOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolMapArrayToBoolPtr(o BoolMapArrayInput, applier func(v []map[string]bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolMapArrayToBoolArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolMapArrayToBoolMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolMapArrayToBoolArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolMapArrayToBoolMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolMapArrayToBoolMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolMapArrayToBoolArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolMapArrayToFloat64(o BoolMapArrayInput, applier func(v []map[string]bool) (float64, error)) Float64Output {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolMapArrayToFloat64Ptr(o BoolMapArrayInput, applier func(v []map[string]bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolMapArrayToFloat64Array(o BoolMapArrayInput, applier func(v []map[string]bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolMapArrayToFloat64Map(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolMapArrayToFloat64ArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolMapArrayToFloat64MapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolMapArrayToFloat64MapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolMapArrayToFloat64ArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyBoolMapArrayToID(o BoolMapArrayInput, applier func(v []map[string]bool) (ID, error)) IDOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolMapArrayToIDPtr(o BoolMapArrayInput, applier func(v []map[string]bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolMapArrayToIDArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolMapArrayToIDMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolMapArrayToIDArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolMapArrayToIDMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolMapArrayToIDMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolMapArrayToIDArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolMapArrayToArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolMapArrayToMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolMapArrayToArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolMapArrayToMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolMapArrayToMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolMapArrayToArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolMapArrayToInt(o BoolMapArrayInput, applier func(v []map[string]bool) (int, error)) IntOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolMapArrayToIntPtr(o BoolMapArrayInput, applier func(v []map[string]bool) (*int, error)) IntPtrOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolMapArrayToIntArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolMapArrayToIntMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolMapArrayToIntArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolMapArrayToIntMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolMapArrayToIntMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolMapArrayToIntArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyBoolMapArrayToString(o BoolMapArrayInput, applier func(v []map[string]bool) (string, error)) StringOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolMapArrayToStringPtr(o BoolMapArrayInput, applier func(v []map[string]bool) (*string, error)) StringPtrOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolMapArrayToStringArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolMapArrayToStringMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolMapArrayToStringArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolMapArrayToStringMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolMapArrayToStringMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolMapArrayToStringArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolMapArrayToURN(o BoolMapArrayInput, applier func(v []map[string]bool) (URN, error)) URNOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolMapArrayToURNPtr(o BoolMapArrayInput, applier func(v []map[string]bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolMapArrayToURNArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolMapArrayToURNMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolMapArrayToURNArrayMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolMapArrayToURNMapArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolMapArrayToURNMapMap(o BoolMapArrayInput, applier func(v []map[string]bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolMapArrayToURNArrayArray(o BoolMapArrayInput, applier func(v []map[string]bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolMapMapToArchive(o BoolMapMapInput, applier func(v map[string]map[string]bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolMapMapToArchiveArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolMapMapToArchiveMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolMapMapToArchiveArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolMapMapToArchiveMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolMapMapToArchiveMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolMapMapToArchiveArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolMapMapToAsset(o BoolMapMapInput, applier func(v map[string]map[string]bool) (Asset, error)) AssetOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolMapMapToAssetArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolMapMapToAssetMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolMapMapToAssetArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolMapMapToAssetMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolMapMapToAssetMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolMapMapToAssetArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolMapMapToAssetOrArchive(o BoolMapMapInput, applier func(v map[string]map[string]bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolMapMapToAssetOrArchiveArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolMapMapToAssetOrArchiveMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolMapMapToAssetOrArchiveArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolMapMapToAssetOrArchiveMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolMapMapToAssetOrArchiveMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolMapMapToAssetOrArchiveArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolMapMapToBool(o BoolMapMapInput, applier func(v map[string]map[string]bool) (bool, error)) BoolOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolMapMapToBoolPtr(o BoolMapMapInput, applier func(v map[string]map[string]bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolMapMapToBoolArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolMapMapToBoolMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolMapMapToBoolArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolMapMapToBoolMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolMapMapToBoolMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolMapMapToBoolArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolMapMapToFloat64(o BoolMapMapInput, applier func(v map[string]map[string]bool) (float64, error)) Float64Output {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolMapMapToFloat64Ptr(o BoolMapMapInput, applier func(v map[string]map[string]bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolMapMapToFloat64Array(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolMapMapToFloat64Map(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolMapMapToFloat64ArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolMapMapToFloat64MapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolMapMapToFloat64MapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolMapMapToFloat64ArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyBoolMapMapToID(o BoolMapMapInput, applier func(v map[string]map[string]bool) (ID, error)) IDOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolMapMapToIDPtr(o BoolMapMapInput, applier func(v map[string]map[string]bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolMapMapToIDArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolMapMapToIDMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolMapMapToIDArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolMapMapToIDMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolMapMapToIDMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolMapMapToIDArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolMapMapToArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolMapMapToMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolMapMapToArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolMapMapToMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolMapMapToMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolMapMapToArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolMapMapToInt(o BoolMapMapInput, applier func(v map[string]map[string]bool) (int, error)) IntOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolMapMapToIntPtr(o BoolMapMapInput, applier func(v map[string]map[string]bool) (*int, error)) IntPtrOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolMapMapToIntArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolMapMapToIntMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolMapMapToIntArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolMapMapToIntMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolMapMapToIntMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolMapMapToIntArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyBoolMapMapToString(o BoolMapMapInput, applier func(v map[string]map[string]bool) (string, error)) StringOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolMapMapToStringPtr(o BoolMapMapInput, applier func(v map[string]map[string]bool) (*string, error)) StringPtrOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolMapMapToStringArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolMapMapToStringMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolMapMapToStringArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolMapMapToStringMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolMapMapToStringMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolMapMapToStringArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolMapMapToURN(o BoolMapMapInput, applier func(v map[string]map[string]bool) (URN, error)) URNOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolMapMapToURNPtr(o BoolMapMapInput, applier func(v map[string]map[string]bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolMapMapToURNArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolMapMapToURNMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolMapMapToURNArrayMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolMapMapToURNMapArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolMapMapToURNMapMap(o BoolMapMapInput, applier func(v map[string]map[string]bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolMapMapToURNArrayArray(o BoolMapMapInput, applier func(v map[string]map[string]bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyBoolArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyBoolArrayArrayToArchive(o BoolArrayArrayInput, applier func(v [][]bool) (Archive, error)) ArchiveOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyBoolArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyBoolArrayArrayToArchiveArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyBoolArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyBoolArrayArrayToArchiveMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyBoolArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyBoolArrayArrayToArchiveArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyBoolArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyBoolArrayArrayToArchiveMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyBoolArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyBoolArrayArrayToArchiveMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyBoolArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyBoolArrayArrayToArchiveArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyBoolArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyBoolArrayArrayToAsset(o BoolArrayArrayInput, applier func(v [][]bool) (Asset, error)) AssetOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyBoolArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyBoolArrayArrayToAssetArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]Asset, error)) AssetArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyBoolArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyBoolArrayArrayToAssetMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]Asset, error)) AssetMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyBoolArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyBoolArrayArrayToAssetArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyBoolArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyBoolArrayArrayToAssetMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyBoolArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyBoolArrayArrayToAssetMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyBoolArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyBoolArrayArrayToAssetArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyBoolArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyBoolArrayArrayToAssetOrArchive(o BoolArrayArrayInput, applier func(v [][]bool) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyBoolArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyBoolArrayArrayToAssetOrArchiveArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyBoolArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyBoolArrayArrayToAssetOrArchiveMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyBoolArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyBoolArrayArrayToAssetOrArchiveArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyBoolArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyBoolArrayArrayToAssetOrArchiveMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyBoolArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyBoolArrayArrayToAssetOrArchiveMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyBoolArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyBoolArrayArrayToAssetOrArchiveArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyBoolArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyBoolArrayArrayToBool(o BoolArrayArrayInput, applier func(v [][]bool) (bool, error)) BoolOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyBoolArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyBoolArrayArrayToBoolPtr(o BoolArrayArrayInput, applier func(v [][]bool) (*bool, error)) BoolPtrOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyBoolArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyBoolArrayArrayToBoolArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]bool, error)) BoolArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyBoolArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyBoolArrayArrayToBoolMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]bool, error)) BoolMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyBoolArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyBoolArrayArrayToBoolArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyBoolArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyBoolArrayArrayToBoolMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyBoolArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyBoolArrayArrayToBoolMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyBoolArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyBoolArrayArrayToBoolArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyBoolArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyBoolArrayArrayToFloat64(o BoolArrayArrayInput, applier func(v [][]bool) (float64, error)) Float64Output {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyBoolArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyBoolArrayArrayToFloat64Ptr(o BoolArrayArrayInput, applier func(v [][]bool) (*float64, error)) Float64PtrOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyBoolArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyBoolArrayArrayToFloat64Array(o BoolArrayArrayInput, applier func(v [][]bool) ([]float64, error)) Float64ArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyBoolArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyBoolArrayArrayToFloat64Map(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]float64, error)) Float64MapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyBoolArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyBoolArrayArrayToFloat64ArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyBoolArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyBoolArrayArrayToFloat64MapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyBoolArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyBoolArrayArrayToFloat64MapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyBoolArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyBoolArrayArrayToFloat64ArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyBoolArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyBoolArrayArrayToID(o BoolArrayArrayInput, applier func(v [][]bool) (ID, error)) IDOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyBoolArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyBoolArrayArrayToIDPtr(o BoolArrayArrayInput, applier func(v [][]bool) (*ID, error)) IDPtrOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyBoolArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyBoolArrayArrayToIDArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]ID, error)) IDArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyBoolArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyBoolArrayArrayToIDMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]ID, error)) IDMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyBoolArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyBoolArrayArrayToIDArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyBoolArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyBoolArrayArrayToIDMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyBoolArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyBoolArrayArrayToIDMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyBoolArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyBoolArrayArrayToIDArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyBoolArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyBoolArrayArrayToArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]interface{}, error)) ArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyBoolArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyBoolArrayArrayToMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]interface{}, error)) MapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyBoolArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyBoolArrayArrayToArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyBoolArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyBoolArrayArrayToMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyBoolArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyBoolArrayArrayToMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyBoolArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyBoolArrayArrayToArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyBoolArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyBoolArrayArrayToInt(o BoolArrayArrayInput, applier func(v [][]bool) (int, error)) IntOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyBoolArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyBoolArrayArrayToIntPtr(o BoolArrayArrayInput, applier func(v [][]bool) (*int, error)) IntPtrOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyBoolArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyBoolArrayArrayToIntArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]int, error)) IntArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyBoolArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyBoolArrayArrayToIntMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]int, error)) IntMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyBoolArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyBoolArrayArrayToIntArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyBoolArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyBoolArrayArrayToIntMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyBoolArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyBoolArrayArrayToIntMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyBoolArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyBoolArrayArrayToIntArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]int, error)) IntArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyBoolArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyBoolArrayArrayToString(o BoolArrayArrayInput, applier func(v [][]bool) (string, error)) StringOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyBoolArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyBoolArrayArrayToStringPtr(o BoolArrayArrayInput, applier func(v [][]bool) (*string, error)) StringPtrOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyBoolArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyBoolArrayArrayToStringArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]string, error)) StringArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyBoolArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyBoolArrayArrayToStringMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]string, error)) StringMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyBoolArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyBoolArrayArrayToStringArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyBoolArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyBoolArrayArrayToStringMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyBoolArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyBoolArrayArrayToStringMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyBoolArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyBoolArrayArrayToStringArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]string, error)) StringArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyBoolArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyBoolArrayArrayToURN(o BoolArrayArrayInput, applier func(v [][]bool) (URN, error)) URNOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyBoolArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyBoolArrayArrayToURNPtr(o BoolArrayArrayInput, applier func(v [][]bool) (*URN, error)) URNPtrOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyBoolArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyBoolArrayArrayToURNArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]URN, error)) URNArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyBoolArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyBoolArrayArrayToURNMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]URN, error)) URNMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyBoolArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyBoolArrayArrayToURNArrayMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyBoolArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyBoolArrayArrayToURNMapArray(o BoolArrayArrayInput, applier func(v [][]bool) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyBoolArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyBoolArrayArrayToURNMapMap(o BoolArrayArrayInput, applier func(v [][]bool) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyBoolArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyBoolArrayArrayToURNArrayArray(o BoolArrayArrayInput, applier func(v [][]bool) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToBoolArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64ToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64ToArchive(o Float64Input, applier func(v float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64ToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64ToArchiveArray(o Float64Input, applier func(v float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64ToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64ToArchiveMap(o Float64Input, applier func(v float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64ToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64ToArchiveArrayMap(o Float64Input, applier func(v float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64ToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64ToArchiveMapArray(o Float64Input, applier func(v float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64ToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64ToArchiveMapMap(o Float64Input, applier func(v float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64ToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64ToArchiveArrayArray(o Float64Input, applier func(v float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64ToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64ToAsset(o Float64Input, applier func(v float64) (Asset, error)) AssetOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64ToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64ToAssetArray(o Float64Input, applier func(v float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64ToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64ToAssetMap(o Float64Input, applier func(v float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64ToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64ToAssetArrayMap(o Float64Input, applier func(v float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64ToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64ToAssetMapArray(o Float64Input, applier func(v float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64ToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64ToAssetMapMap(o Float64Input, applier func(v float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64ToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64ToAssetArrayArray(o Float64Input, applier func(v float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64ToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64ToAssetOrArchive(o Float64Input, applier func(v float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64ToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64ToAssetOrArchiveArray(o Float64Input, applier func(v float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64ToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64ToAssetOrArchiveMap(o Float64Input, applier func(v float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64ToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64ToAssetOrArchiveArrayMap(o Float64Input, applier func(v float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64ToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64ToAssetOrArchiveMapArray(o Float64Input, applier func(v float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64ToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64ToAssetOrArchiveMapMap(o Float64Input, applier func(v float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64ToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64ToAssetOrArchiveArrayArray(o Float64Input, applier func(v float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64ToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64ToBool(o Float64Input, applier func(v float64) (bool, error)) BoolOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64ToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64ToBoolPtr(o Float64Input, applier func(v float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64ToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64ToBoolArray(o Float64Input, applier func(v float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64ToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64ToBoolMap(o Float64Input, applier func(v float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64ToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64ToBoolArrayMap(o Float64Input, applier func(v float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64ToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64ToBoolMapArray(o Float64Input, applier func(v float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64ToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64ToBoolMapMap(o Float64Input, applier func(v float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64ToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64ToBoolArrayArray(o Float64Input, applier func(v float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64ToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64ToFloat64(o Float64Input, applier func(v float64) (float64, error)) Float64Output {
	return o.ToFloat64Output().ApplyT(applier).(Float64Output)
}

// ApplyFloat64ToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64ToFloat64Ptr(o Float64Input, applier func(v float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64Output().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64ToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64ToFloat64Array(o Float64Input, applier func(v float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64ToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64ToFloat64Map(o Float64Input, applier func(v float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64Output().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64ToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64ToFloat64ArrayMap(o Float64Input, applier func(v float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64ToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64ToFloat64MapArray(o Float64Input, applier func(v float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64ToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64ToFloat64MapMap(o Float64Input, applier func(v float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64ToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64ToFloat64ArrayArray(o Float64Input, applier func(v float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64ToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64ToID(o Float64Input, applier func(v float64) (ID, error)) IDOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDOutput)
}

// ApplyFloat64ToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64ToIDPtr(o Float64Input, applier func(v float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64ToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64ToIDArray(o Float64Input, applier func(v float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64ToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64ToIDMap(o Float64Input, applier func(v float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64ToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64ToIDArrayMap(o Float64Input, applier func(v float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64ToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64ToIDMapArray(o Float64Input, applier func(v float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64ToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64ToIDMapMap(o Float64Input, applier func(v float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64ToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64ToIDArrayArray(o Float64Input, applier func(v float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64ToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64ToArray(o Float64Input, applier func(v float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64ToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64ToMap(o Float64Input, applier func(v float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64Output().ApplyT(applier).(MapOutput)
}

// ApplyFloat64ToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64ToArrayMap(o Float64Input, applier func(v float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64ToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64ToMapArray(o Float64Input, applier func(v float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64ToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64ToMapMap(o Float64Input, applier func(v float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64ToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64ToArrayArray(o Float64Input, applier func(v float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64ToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64ToInt(o Float64Input, applier func(v float64) (int, error)) IntOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntOutput)
}

// ApplyFloat64ToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64ToIntPtr(o Float64Input, applier func(v float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64ToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64ToIntArray(o Float64Input, applier func(v float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64ToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64ToIntMap(o Float64Input, applier func(v float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64ToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64ToIntArrayMap(o Float64Input, applier func(v float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64ToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64ToIntMapArray(o Float64Input, applier func(v float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64ToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64ToIntMapMap(o Float64Input, applier func(v float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64ToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64ToIntArrayArray(o Float64Input, applier func(v float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64ToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64ToString(o Float64Input, applier func(v float64) (string, error)) StringOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringOutput)
}

// ApplyFloat64ToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64ToStringPtr(o Float64Input, applier func(v float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64ToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64ToStringArray(o Float64Input, applier func(v float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64ToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64ToStringMap(o Float64Input, applier func(v float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64ToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64ToStringArrayMap(o Float64Input, applier func(v float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64ToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64ToStringMapArray(o Float64Input, applier func(v float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64ToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64ToStringMapMap(o Float64Input, applier func(v float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64ToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64ToStringArrayArray(o Float64Input, applier func(v float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64ToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64ToURN(o Float64Input, applier func(v float64) (URN, error)) URNOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNOutput)
}

// ApplyFloat64ToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64ToURNPtr(o Float64Input, applier func(v float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64ToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64ToURNArray(o Float64Input, applier func(v float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64ToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64ToURNMap(o Float64Input, applier func(v float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64ToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64ToURNArrayMap(o Float64Input, applier func(v float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64ToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64ToURNMapArray(o Float64Input, applier func(v float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64ToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64ToURNMapMap(o Float64Input, applier func(v float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64ToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64ToURNArrayArray(o Float64Input, applier func(v float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64Output().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64PtrToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64PtrToArchive(o Float64PtrInput, applier func(v *float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64PtrToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64PtrToArchiveArray(o Float64PtrInput, applier func(v *float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64PtrToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64PtrToArchiveMap(o Float64PtrInput, applier func(v *float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64PtrToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64PtrToArchiveArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64PtrToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64PtrToArchiveMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64PtrToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64PtrToArchiveMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64PtrToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64PtrToArchiveArrayArray(o Float64PtrInput, applier func(v *float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64PtrToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64PtrToAsset(o Float64PtrInput, applier func(v *float64) (Asset, error)) AssetOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64PtrToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64PtrToAssetArray(o Float64PtrInput, applier func(v *float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64PtrToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64PtrToAssetMap(o Float64PtrInput, applier func(v *float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64PtrToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64PtrToAssetArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64PtrToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64PtrToAssetMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64PtrToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64PtrToAssetMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64PtrToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64PtrToAssetArrayArray(o Float64PtrInput, applier func(v *float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64PtrToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64PtrToAssetOrArchive(o Float64PtrInput, applier func(v *float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64PtrToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64PtrToAssetOrArchiveArray(o Float64PtrInput, applier func(v *float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64PtrToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64PtrToAssetOrArchiveMap(o Float64PtrInput, applier func(v *float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64PtrToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64PtrToAssetOrArchiveArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64PtrToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64PtrToAssetOrArchiveMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64PtrToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64PtrToAssetOrArchiveMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64PtrToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64PtrToAssetOrArchiveArrayArray(o Float64PtrInput, applier func(v *float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64PtrToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64PtrToBool(o Float64PtrInput, applier func(v *float64) (bool, error)) BoolOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64PtrToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64PtrToBoolPtr(o Float64PtrInput, applier func(v *float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64PtrToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64PtrToBoolArray(o Float64PtrInput, applier func(v *float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64PtrToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64PtrToBoolMap(o Float64PtrInput, applier func(v *float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64PtrToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64PtrToBoolArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64PtrToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64PtrToBoolMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64PtrToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64PtrToBoolMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64PtrToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64PtrToBoolArrayArray(o Float64PtrInput, applier func(v *float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64PtrToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64PtrToFloat64(o Float64PtrInput, applier func(v *float64) (float64, error)) Float64Output {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64Output)
}

// ApplyFloat64PtrToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64PtrToFloat64Ptr(o Float64PtrInput, applier func(v *float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64PtrToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64PtrToFloat64Array(o Float64PtrInput, applier func(v *float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64PtrToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64PtrToFloat64Map(o Float64PtrInput, applier func(v *float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64PtrToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64PtrToFloat64ArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64PtrToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64PtrToFloat64MapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64PtrToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64PtrToFloat64MapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64PtrToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64PtrToFloat64ArrayArray(o Float64PtrInput, applier func(v *float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64PtrToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64PtrToID(o Float64PtrInput, applier func(v *float64) (ID, error)) IDOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDOutput)
}

// ApplyFloat64PtrToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64PtrToIDPtr(o Float64PtrInput, applier func(v *float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64PtrToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64PtrToIDArray(o Float64PtrInput, applier func(v *float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64PtrToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64PtrToIDMap(o Float64PtrInput, applier func(v *float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64PtrToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64PtrToIDArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64PtrToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64PtrToIDMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64PtrToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64PtrToIDMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64PtrToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64PtrToIDArrayArray(o Float64PtrInput, applier func(v *float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64PtrToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64PtrToArray(o Float64PtrInput, applier func(v *float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64PtrToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64PtrToMap(o Float64PtrInput, applier func(v *float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(MapOutput)
}

// ApplyFloat64PtrToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64PtrToArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64PtrToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64PtrToMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64PtrToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64PtrToMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64PtrToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64PtrToArrayArray(o Float64PtrInput, applier func(v *float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64PtrToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64PtrToInt(o Float64PtrInput, applier func(v *float64) (int, error)) IntOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntOutput)
}

// ApplyFloat64PtrToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64PtrToIntPtr(o Float64PtrInput, applier func(v *float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64PtrToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64PtrToIntArray(o Float64PtrInput, applier func(v *float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64PtrToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64PtrToIntMap(o Float64PtrInput, applier func(v *float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64PtrToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64PtrToIntArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64PtrToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64PtrToIntMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64PtrToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64PtrToIntMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64PtrToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64PtrToIntArrayArray(o Float64PtrInput, applier func(v *float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64PtrToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64PtrToString(o Float64PtrInput, applier func(v *float64) (string, error)) StringOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringOutput)
}

// ApplyFloat64PtrToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64PtrToStringPtr(o Float64PtrInput, applier func(v *float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64PtrToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64PtrToStringArray(o Float64PtrInput, applier func(v *float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64PtrToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64PtrToStringMap(o Float64PtrInput, applier func(v *float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64PtrToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64PtrToStringArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64PtrToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64PtrToStringMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64PtrToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64PtrToStringMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64PtrToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64PtrToStringArrayArray(o Float64PtrInput, applier func(v *float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64PtrToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64PtrToURN(o Float64PtrInput, applier func(v *float64) (URN, error)) URNOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNOutput)
}

// ApplyFloat64PtrToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64PtrToURNPtr(o Float64PtrInput, applier func(v *float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64PtrToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64PtrToURNArray(o Float64PtrInput, applier func(v *float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64PtrToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64PtrToURNMap(o Float64PtrInput, applier func(v *float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64PtrToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64PtrToURNArrayMap(o Float64PtrInput, applier func(v *float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64PtrToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64PtrToURNMapArray(o Float64PtrInput, applier func(v *float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64PtrToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64PtrToURNMapMap(o Float64PtrInput, applier func(v *float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64PtrToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64PtrToURNArrayArray(o Float64PtrInput, applier func(v *float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64PtrOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64ArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64ArrayToArchive(o Float64ArrayInput, applier func(v []float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64ArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64ArrayToArchiveArray(o Float64ArrayInput, applier func(v []float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64ArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64ArrayToArchiveMap(o Float64ArrayInput, applier func(v []float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64ArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64ArrayToArchiveArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64ArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64ArrayToArchiveMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64ArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64ArrayToArchiveMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64ArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64ArrayToArchiveArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64ArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64ArrayToAsset(o Float64ArrayInput, applier func(v []float64) (Asset, error)) AssetOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64ArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64ArrayToAssetArray(o Float64ArrayInput, applier func(v []float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64ArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64ArrayToAssetMap(o Float64ArrayInput, applier func(v []float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64ArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64ArrayToAssetArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64ArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64ArrayToAssetMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64ArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64ArrayToAssetMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64ArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64ArrayToAssetArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64ArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64ArrayToAssetOrArchive(o Float64ArrayInput, applier func(v []float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64ArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64ArrayToAssetOrArchiveArray(o Float64ArrayInput, applier func(v []float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64ArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64ArrayToAssetOrArchiveMap(o Float64ArrayInput, applier func(v []float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64ArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64ArrayToAssetOrArchiveArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64ArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64ArrayToAssetOrArchiveMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64ArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64ArrayToAssetOrArchiveMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64ArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64ArrayToAssetOrArchiveArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64ArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64ArrayToBool(o Float64ArrayInput, applier func(v []float64) (bool, error)) BoolOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64ArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64ArrayToBoolPtr(o Float64ArrayInput, applier func(v []float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64ArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64ArrayToBoolArray(o Float64ArrayInput, applier func(v []float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64ArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64ArrayToBoolMap(o Float64ArrayInput, applier func(v []float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64ArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64ArrayToBoolArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64ArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64ArrayToBoolMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64ArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64ArrayToBoolMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64ArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64ArrayToBoolArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64ArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64ArrayToFloat64(o Float64ArrayInput, applier func(v []float64) (float64, error)) Float64Output {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyFloat64ArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64ArrayToFloat64Ptr(o Float64ArrayInput, applier func(v []float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64ArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64ArrayToFloat64Array(o Float64ArrayInput, applier func(v []float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64ArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64ArrayToFloat64Map(o Float64ArrayInput, applier func(v []float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64ArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64ArrayToFloat64ArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64ArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64ArrayToFloat64MapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64ArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64ArrayToFloat64MapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64ArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64ArrayToFloat64ArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64ArrayToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64ArrayToID(o Float64ArrayInput, applier func(v []float64) (ID, error)) IDOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyFloat64ArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64ArrayToIDPtr(o Float64ArrayInput, applier func(v []float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64ArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64ArrayToIDArray(o Float64ArrayInput, applier func(v []float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64ArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64ArrayToIDMap(o Float64ArrayInput, applier func(v []float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64ArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64ArrayToIDArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64ArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64ArrayToIDMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64ArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64ArrayToIDMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64ArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64ArrayToIDArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64ArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64ArrayToArray(o Float64ArrayInput, applier func(v []float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64ArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64ArrayToMap(o Float64ArrayInput, applier func(v []float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyFloat64ArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64ArrayToArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64ArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64ArrayToMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64ArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64ArrayToMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64ArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64ArrayToArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64ArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64ArrayToInt(o Float64ArrayInput, applier func(v []float64) (int, error)) IntOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyFloat64ArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64ArrayToIntPtr(o Float64ArrayInput, applier func(v []float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64ArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64ArrayToIntArray(o Float64ArrayInput, applier func(v []float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64ArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64ArrayToIntMap(o Float64ArrayInput, applier func(v []float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64ArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64ArrayToIntArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64ArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64ArrayToIntMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64ArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64ArrayToIntMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64ArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64ArrayToIntArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64ArrayToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64ArrayToString(o Float64ArrayInput, applier func(v []float64) (string, error)) StringOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyFloat64ArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64ArrayToStringPtr(o Float64ArrayInput, applier func(v []float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64ArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64ArrayToStringArray(o Float64ArrayInput, applier func(v []float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64ArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64ArrayToStringMap(o Float64ArrayInput, applier func(v []float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64ArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64ArrayToStringArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64ArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64ArrayToStringMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64ArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64ArrayToStringMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64ArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64ArrayToStringArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64ArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64ArrayToURN(o Float64ArrayInput, applier func(v []float64) (URN, error)) URNOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyFloat64ArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64ArrayToURNPtr(o Float64ArrayInput, applier func(v []float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64ArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64ArrayToURNArray(o Float64ArrayInput, applier func(v []float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64ArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64ArrayToURNMap(o Float64ArrayInput, applier func(v []float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64ArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64ArrayToURNArrayMap(o Float64ArrayInput, applier func(v []float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64ArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64ArrayToURNMapArray(o Float64ArrayInput, applier func(v []float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64ArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64ArrayToURNMapMap(o Float64ArrayInput, applier func(v []float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64ArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64ArrayToURNArrayArray(o Float64ArrayInput, applier func(v []float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64ArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64MapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64MapToArchive(o Float64MapInput, applier func(v map[string]float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64MapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64MapToArchiveArray(o Float64MapInput, applier func(v map[string]float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64MapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64MapToArchiveMap(o Float64MapInput, applier func(v map[string]float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64MapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64MapToArchiveArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64MapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64MapToArchiveMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64MapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64MapToArchiveMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64MapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64MapToArchiveArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64MapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64MapToAsset(o Float64MapInput, applier func(v map[string]float64) (Asset, error)) AssetOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64MapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64MapToAssetArray(o Float64MapInput, applier func(v map[string]float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64MapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64MapToAssetMap(o Float64MapInput, applier func(v map[string]float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64MapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64MapToAssetArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64MapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64MapToAssetMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64MapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64MapToAssetMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64MapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64MapToAssetArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64MapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64MapToAssetOrArchive(o Float64MapInput, applier func(v map[string]float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64MapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64MapToAssetOrArchiveArray(o Float64MapInput, applier func(v map[string]float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64MapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64MapToAssetOrArchiveMap(o Float64MapInput, applier func(v map[string]float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64MapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64MapToAssetOrArchiveArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64MapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64MapToAssetOrArchiveMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64MapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64MapToAssetOrArchiveMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64MapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64MapToAssetOrArchiveArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64MapToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64MapToBool(o Float64MapInput, applier func(v map[string]float64) (bool, error)) BoolOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64MapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64MapToBoolPtr(o Float64MapInput, applier func(v map[string]float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64MapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64MapToBoolArray(o Float64MapInput, applier func(v map[string]float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64MapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64MapToBoolMap(o Float64MapInput, applier func(v map[string]float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64MapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64MapToBoolArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64MapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64MapToBoolMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64MapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64MapToBoolMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64MapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64MapToBoolArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64MapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64MapToFloat64(o Float64MapInput, applier func(v map[string]float64) (float64, error)) Float64Output {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64Output)
}

// ApplyFloat64MapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64MapToFloat64Ptr(o Float64MapInput, applier func(v map[string]float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64MapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64MapToFloat64Array(o Float64MapInput, applier func(v map[string]float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64MapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64MapToFloat64Map(o Float64MapInput, applier func(v map[string]float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64MapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64MapToFloat64ArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64MapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64MapToFloat64MapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64MapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64MapToFloat64MapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64MapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64MapToFloat64ArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64MapToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64MapToID(o Float64MapInput, applier func(v map[string]float64) (ID, error)) IDOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDOutput)
}

// ApplyFloat64MapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64MapToIDPtr(o Float64MapInput, applier func(v map[string]float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64MapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64MapToIDArray(o Float64MapInput, applier func(v map[string]float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64MapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64MapToIDMap(o Float64MapInput, applier func(v map[string]float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64MapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64MapToIDArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64MapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64MapToIDMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64MapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64MapToIDMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64MapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64MapToIDArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64MapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64MapToArray(o Float64MapInput, applier func(v map[string]float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64MapToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64MapToMap(o Float64MapInput, applier func(v map[string]float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(MapOutput)
}

// ApplyFloat64MapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64MapToArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64MapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64MapToMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64MapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64MapToMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64MapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64MapToArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64MapToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64MapToInt(o Float64MapInput, applier func(v map[string]float64) (int, error)) IntOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntOutput)
}

// ApplyFloat64MapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64MapToIntPtr(o Float64MapInput, applier func(v map[string]float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64MapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64MapToIntArray(o Float64MapInput, applier func(v map[string]float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64MapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64MapToIntMap(o Float64MapInput, applier func(v map[string]float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64MapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64MapToIntArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64MapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64MapToIntMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64MapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64MapToIntMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64MapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64MapToIntArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64MapToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64MapToString(o Float64MapInput, applier func(v map[string]float64) (string, error)) StringOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringOutput)
}

// ApplyFloat64MapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64MapToStringPtr(o Float64MapInput, applier func(v map[string]float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64MapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64MapToStringArray(o Float64MapInput, applier func(v map[string]float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64MapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64MapToStringMap(o Float64MapInput, applier func(v map[string]float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64MapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64MapToStringArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64MapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64MapToStringMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64MapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64MapToStringMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64MapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64MapToStringArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64MapToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64MapToURN(o Float64MapInput, applier func(v map[string]float64) (URN, error)) URNOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNOutput)
}

// ApplyFloat64MapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64MapToURNPtr(o Float64MapInput, applier func(v map[string]float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64MapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64MapToURNArray(o Float64MapInput, applier func(v map[string]float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64MapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64MapToURNMap(o Float64MapInput, applier func(v map[string]float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64MapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64MapToURNArrayMap(o Float64MapInput, applier func(v map[string]float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64MapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64MapToURNMapArray(o Float64MapInput, applier func(v map[string]float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64MapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64MapToURNMapMap(o Float64MapInput, applier func(v map[string]float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64MapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64MapToURNArrayArray(o Float64MapInput, applier func(v map[string]float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64MapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64ArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64ArrayMapToArchive(o Float64ArrayMapInput, applier func(v map[string][]float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64ArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64ArrayMapToArchiveArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64ArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64ArrayMapToArchiveMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64ArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64ArrayMapToArchiveArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64ArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64ArrayMapToArchiveMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64ArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64ArrayMapToArchiveMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64ArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64ArrayMapToArchiveArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64ArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64ArrayMapToAsset(o Float64ArrayMapInput, applier func(v map[string][]float64) (Asset, error)) AssetOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64ArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64ArrayMapToAssetArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64ArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64ArrayMapToAssetMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64ArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64ArrayMapToAssetArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64ArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64ArrayMapToAssetMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64ArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64ArrayMapToAssetMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64ArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64ArrayMapToAssetArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64ArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64ArrayMapToAssetOrArchive(o Float64ArrayMapInput, applier func(v map[string][]float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64ArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64ArrayMapToAssetOrArchiveArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64ArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64ArrayMapToAssetOrArchiveMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64ArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64ArrayMapToAssetOrArchiveArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64ArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64ArrayMapToAssetOrArchiveMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64ArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64ArrayMapToAssetOrArchiveMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64ArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64ArrayMapToAssetOrArchiveArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64ArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64ArrayMapToBool(o Float64ArrayMapInput, applier func(v map[string][]float64) (bool, error)) BoolOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64ArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64ArrayMapToBoolPtr(o Float64ArrayMapInput, applier func(v map[string][]float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64ArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64ArrayMapToBoolArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64ArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64ArrayMapToBoolMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64ArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64ArrayMapToBoolArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64ArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64ArrayMapToBoolMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64ArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64ArrayMapToBoolMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64ArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64ArrayMapToBoolArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64ArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64ArrayMapToFloat64(o Float64ArrayMapInput, applier func(v map[string][]float64) (float64, error)) Float64Output {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyFloat64ArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64ArrayMapToFloat64Ptr(o Float64ArrayMapInput, applier func(v map[string][]float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64ArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64ArrayMapToFloat64Array(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64ArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64ArrayMapToFloat64Map(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64ArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64ArrayMapToFloat64ArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64ArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64ArrayMapToFloat64MapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64ArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64ArrayMapToFloat64MapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64ArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64ArrayMapToFloat64ArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64ArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64ArrayMapToID(o Float64ArrayMapInput, applier func(v map[string][]float64) (ID, error)) IDOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyFloat64ArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64ArrayMapToIDPtr(o Float64ArrayMapInput, applier func(v map[string][]float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64ArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64ArrayMapToIDArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64ArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64ArrayMapToIDMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64ArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64ArrayMapToIDArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64ArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64ArrayMapToIDMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64ArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64ArrayMapToIDMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64ArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64ArrayMapToIDArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64ArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64ArrayMapToArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64ArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64ArrayMapToMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyFloat64ArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64ArrayMapToArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64ArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64ArrayMapToMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64ArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64ArrayMapToMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64ArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64ArrayMapToArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64ArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64ArrayMapToInt(o Float64ArrayMapInput, applier func(v map[string][]float64) (int, error)) IntOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyFloat64ArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64ArrayMapToIntPtr(o Float64ArrayMapInput, applier func(v map[string][]float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64ArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64ArrayMapToIntArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64ArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64ArrayMapToIntMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64ArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64ArrayMapToIntArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64ArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64ArrayMapToIntMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64ArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64ArrayMapToIntMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64ArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64ArrayMapToIntArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64ArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64ArrayMapToString(o Float64ArrayMapInput, applier func(v map[string][]float64) (string, error)) StringOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyFloat64ArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64ArrayMapToStringPtr(o Float64ArrayMapInput, applier func(v map[string][]float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64ArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64ArrayMapToStringArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64ArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64ArrayMapToStringMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64ArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64ArrayMapToStringArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64ArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64ArrayMapToStringMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64ArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64ArrayMapToStringMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64ArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64ArrayMapToStringArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64ArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64ArrayMapToURN(o Float64ArrayMapInput, applier func(v map[string][]float64) (URN, error)) URNOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyFloat64ArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64ArrayMapToURNPtr(o Float64ArrayMapInput, applier func(v map[string][]float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64ArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64ArrayMapToURNArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64ArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64ArrayMapToURNMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64ArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64ArrayMapToURNArrayMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64ArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64ArrayMapToURNMapArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64ArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64ArrayMapToURNMapMap(o Float64ArrayMapInput, applier func(v map[string][]float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64ArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64ArrayMapToURNArrayArray(o Float64ArrayMapInput, applier func(v map[string][]float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64ArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64MapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64MapArrayToArchive(o Float64MapArrayInput, applier func(v []map[string]float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64MapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64MapArrayToArchiveArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64MapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64MapArrayToArchiveMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64MapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64MapArrayToArchiveArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64MapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64MapArrayToArchiveMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64MapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64MapArrayToArchiveMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64MapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64MapArrayToArchiveArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64MapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64MapArrayToAsset(o Float64MapArrayInput, applier func(v []map[string]float64) (Asset, error)) AssetOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64MapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64MapArrayToAssetArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64MapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64MapArrayToAssetMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64MapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64MapArrayToAssetArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64MapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64MapArrayToAssetMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64MapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64MapArrayToAssetMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64MapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64MapArrayToAssetArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64MapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64MapArrayToAssetOrArchive(o Float64MapArrayInput, applier func(v []map[string]float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64MapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64MapArrayToAssetOrArchiveArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64MapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64MapArrayToAssetOrArchiveMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64MapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64MapArrayToAssetOrArchiveArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64MapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64MapArrayToAssetOrArchiveMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64MapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64MapArrayToAssetOrArchiveMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64MapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64MapArrayToAssetOrArchiveArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64MapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64MapArrayToBool(o Float64MapArrayInput, applier func(v []map[string]float64) (bool, error)) BoolOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64MapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64MapArrayToBoolPtr(o Float64MapArrayInput, applier func(v []map[string]float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64MapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64MapArrayToBoolArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64MapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64MapArrayToBoolMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64MapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64MapArrayToBoolArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64MapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64MapArrayToBoolMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64MapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64MapArrayToBoolMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64MapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64MapArrayToBoolArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64MapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64MapArrayToFloat64(o Float64MapArrayInput, applier func(v []map[string]float64) (float64, error)) Float64Output {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyFloat64MapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64MapArrayToFloat64Ptr(o Float64MapArrayInput, applier func(v []map[string]float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64MapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64MapArrayToFloat64Array(o Float64MapArrayInput, applier func(v []map[string]float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64MapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64MapArrayToFloat64Map(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64MapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64MapArrayToFloat64ArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64MapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64MapArrayToFloat64MapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64MapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64MapArrayToFloat64MapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64MapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64MapArrayToFloat64ArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64MapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64MapArrayToID(o Float64MapArrayInput, applier func(v []map[string]float64) (ID, error)) IDOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyFloat64MapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64MapArrayToIDPtr(o Float64MapArrayInput, applier func(v []map[string]float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64MapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64MapArrayToIDArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64MapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64MapArrayToIDMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64MapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64MapArrayToIDArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64MapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64MapArrayToIDMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64MapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64MapArrayToIDMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64MapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64MapArrayToIDArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64MapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64MapArrayToArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64MapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64MapArrayToMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyFloat64MapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64MapArrayToArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64MapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64MapArrayToMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64MapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64MapArrayToMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64MapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64MapArrayToArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64MapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64MapArrayToInt(o Float64MapArrayInput, applier func(v []map[string]float64) (int, error)) IntOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyFloat64MapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64MapArrayToIntPtr(o Float64MapArrayInput, applier func(v []map[string]float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64MapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64MapArrayToIntArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64MapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64MapArrayToIntMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64MapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64MapArrayToIntArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64MapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64MapArrayToIntMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64MapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64MapArrayToIntMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64MapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64MapArrayToIntArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64MapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64MapArrayToString(o Float64MapArrayInput, applier func(v []map[string]float64) (string, error)) StringOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyFloat64MapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64MapArrayToStringPtr(o Float64MapArrayInput, applier func(v []map[string]float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64MapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64MapArrayToStringArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64MapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64MapArrayToStringMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64MapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64MapArrayToStringArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64MapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64MapArrayToStringMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64MapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64MapArrayToStringMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64MapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64MapArrayToStringArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64MapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64MapArrayToURN(o Float64MapArrayInput, applier func(v []map[string]float64) (URN, error)) URNOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyFloat64MapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64MapArrayToURNPtr(o Float64MapArrayInput, applier func(v []map[string]float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64MapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64MapArrayToURNArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64MapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64MapArrayToURNMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64MapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64MapArrayToURNArrayMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64MapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64MapArrayToURNMapArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64MapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64MapArrayToURNMapMap(o Float64MapArrayInput, applier func(v []map[string]float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64MapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64MapArrayToURNArrayArray(o Float64MapArrayInput, applier func(v []map[string]float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64MapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64MapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64MapMapToArchive(o Float64MapMapInput, applier func(v map[string]map[string]float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64MapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64MapMapToArchiveArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64MapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64MapMapToArchiveMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64MapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64MapMapToArchiveArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64MapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64MapMapToArchiveMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64MapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64MapMapToArchiveMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64MapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64MapMapToArchiveArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64MapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64MapMapToAsset(o Float64MapMapInput, applier func(v map[string]map[string]float64) (Asset, error)) AssetOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64MapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64MapMapToAssetArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64MapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64MapMapToAssetMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64MapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64MapMapToAssetArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64MapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64MapMapToAssetMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64MapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64MapMapToAssetMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64MapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64MapMapToAssetArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64MapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64MapMapToAssetOrArchive(o Float64MapMapInput, applier func(v map[string]map[string]float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64MapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64MapMapToAssetOrArchiveArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64MapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64MapMapToAssetOrArchiveMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64MapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64MapMapToAssetOrArchiveArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64MapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64MapMapToAssetOrArchiveMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64MapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64MapMapToAssetOrArchiveMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64MapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64MapMapToAssetOrArchiveArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64MapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64MapMapToBool(o Float64MapMapInput, applier func(v map[string]map[string]float64) (bool, error)) BoolOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64MapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64MapMapToBoolPtr(o Float64MapMapInput, applier func(v map[string]map[string]float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64MapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64MapMapToBoolArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64MapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64MapMapToBoolMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64MapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64MapMapToBoolArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64MapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64MapMapToBoolMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64MapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64MapMapToBoolMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64MapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64MapMapToBoolArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64MapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64MapMapToFloat64(o Float64MapMapInput, applier func(v map[string]map[string]float64) (float64, error)) Float64Output {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyFloat64MapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64MapMapToFloat64Ptr(o Float64MapMapInput, applier func(v map[string]map[string]float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64MapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64MapMapToFloat64Array(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64MapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64MapMapToFloat64Map(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64MapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64MapMapToFloat64ArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64MapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64MapMapToFloat64MapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64MapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64MapMapToFloat64MapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64MapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64MapMapToFloat64ArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64MapMapToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64MapMapToID(o Float64MapMapInput, applier func(v map[string]map[string]float64) (ID, error)) IDOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyFloat64MapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64MapMapToIDPtr(o Float64MapMapInput, applier func(v map[string]map[string]float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64MapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64MapMapToIDArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64MapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64MapMapToIDMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64MapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64MapMapToIDArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64MapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64MapMapToIDMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64MapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64MapMapToIDMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64MapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64MapMapToIDArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64MapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64MapMapToArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64MapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64MapMapToMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyFloat64MapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64MapMapToArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64MapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64MapMapToMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64MapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64MapMapToMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64MapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64MapMapToArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64MapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64MapMapToInt(o Float64MapMapInput, applier func(v map[string]map[string]float64) (int, error)) IntOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyFloat64MapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64MapMapToIntPtr(o Float64MapMapInput, applier func(v map[string]map[string]float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64MapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64MapMapToIntArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64MapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64MapMapToIntMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64MapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64MapMapToIntArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64MapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64MapMapToIntMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64MapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64MapMapToIntMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64MapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64MapMapToIntArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64MapMapToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64MapMapToString(o Float64MapMapInput, applier func(v map[string]map[string]float64) (string, error)) StringOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyFloat64MapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64MapMapToStringPtr(o Float64MapMapInput, applier func(v map[string]map[string]float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64MapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64MapMapToStringArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64MapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64MapMapToStringMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64MapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64MapMapToStringArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64MapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64MapMapToStringMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64MapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64MapMapToStringMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64MapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64MapMapToStringArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64MapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64MapMapToURN(o Float64MapMapInput, applier func(v map[string]map[string]float64) (URN, error)) URNOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyFloat64MapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64MapMapToURNPtr(o Float64MapMapInput, applier func(v map[string]map[string]float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64MapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64MapMapToURNArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64MapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64MapMapToURNMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64MapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64MapMapToURNArrayMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64MapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64MapMapToURNMapArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64MapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64MapMapToURNMapMap(o Float64MapMapInput, applier func(v map[string]map[string]float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64MapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64MapMapToURNArrayArray(o Float64MapMapInput, applier func(v map[string]map[string]float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64MapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyFloat64ArrayArrayToArchive(o Float64ArrayArrayInput, applier func(v [][]float64) (Archive, error)) ArchiveOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyFloat64ArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyFloat64ArrayArrayToArchiveArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyFloat64ArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyFloat64ArrayArrayToArchiveMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyFloat64ArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyFloat64ArrayArrayToArchiveArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyFloat64ArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyFloat64ArrayArrayToArchiveMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyFloat64ArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyFloat64ArrayArrayToArchiveMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyFloat64ArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyFloat64ArrayArrayToArchiveArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyFloat64ArrayArrayToAsset(o Float64ArrayArrayInput, applier func(v [][]float64) (Asset, error)) AssetOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyFloat64ArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyFloat64ArrayArrayToAssetArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]Asset, error)) AssetArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyFloat64ArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyFloat64ArrayArrayToAssetMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]Asset, error)) AssetMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyFloat64ArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyFloat64ArrayArrayToAssetArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyFloat64ArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyFloat64ArrayArrayToAssetMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyFloat64ArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyFloat64ArrayArrayToAssetMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyFloat64ArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyFloat64ArrayArrayToAssetArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyFloat64ArrayArrayToAssetOrArchive(o Float64ArrayArrayInput, applier func(v [][]float64) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyFloat64ArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyFloat64ArrayArrayToAssetOrArchiveArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyFloat64ArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyFloat64ArrayArrayToAssetOrArchiveMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyFloat64ArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyFloat64ArrayArrayToAssetOrArchiveArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyFloat64ArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyFloat64ArrayArrayToAssetOrArchiveMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyFloat64ArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyFloat64ArrayArrayToAssetOrArchiveMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyFloat64ArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyFloat64ArrayArrayToAssetOrArchiveArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyFloat64ArrayArrayToBool(o Float64ArrayArrayInput, applier func(v [][]float64) (bool, error)) BoolOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyFloat64ArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyFloat64ArrayArrayToBoolPtr(o Float64ArrayArrayInput, applier func(v [][]float64) (*bool, error)) BoolPtrOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyFloat64ArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyFloat64ArrayArrayToBoolArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]bool, error)) BoolArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyFloat64ArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyFloat64ArrayArrayToBoolMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]bool, error)) BoolMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyFloat64ArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyFloat64ArrayArrayToBoolArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyFloat64ArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyFloat64ArrayArrayToBoolMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyFloat64ArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyFloat64ArrayArrayToBoolMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyFloat64ArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyFloat64ArrayArrayToBoolArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyFloat64ArrayArrayToFloat64(o Float64ArrayArrayInput, applier func(v [][]float64) (float64, error)) Float64Output {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyFloat64ArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyFloat64ArrayArrayToFloat64Ptr(o Float64ArrayArrayInput, applier func(v [][]float64) (*float64, error)) Float64PtrOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyFloat64ArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyFloat64ArrayArrayToFloat64Array(o Float64ArrayArrayInput, applier func(v [][]float64) ([]float64, error)) Float64ArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyFloat64ArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyFloat64ArrayArrayToFloat64Map(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]float64, error)) Float64MapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyFloat64ArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyFloat64ArrayArrayToFloat64ArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyFloat64ArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyFloat64ArrayArrayToFloat64MapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyFloat64ArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyFloat64ArrayArrayToFloat64MapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyFloat64ArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyFloat64ArrayArrayToFloat64ArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyFloat64ArrayArrayToID(o Float64ArrayArrayInput, applier func(v [][]float64) (ID, error)) IDOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyFloat64ArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyFloat64ArrayArrayToIDPtr(o Float64ArrayArrayInput, applier func(v [][]float64) (*ID, error)) IDPtrOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyFloat64ArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyFloat64ArrayArrayToIDArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]ID, error)) IDArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyFloat64ArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyFloat64ArrayArrayToIDMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]ID, error)) IDMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyFloat64ArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyFloat64ArrayArrayToIDArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyFloat64ArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyFloat64ArrayArrayToIDMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyFloat64ArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyFloat64ArrayArrayToIDMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyFloat64ArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyFloat64ArrayArrayToIDArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyFloat64ArrayArrayToArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]interface{}, error)) ArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyFloat64ArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyFloat64ArrayArrayToMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]interface{}, error)) MapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyFloat64ArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyFloat64ArrayArrayToArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyFloat64ArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyFloat64ArrayArrayToMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyFloat64ArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyFloat64ArrayArrayToMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyFloat64ArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyFloat64ArrayArrayToArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyFloat64ArrayArrayToInt(o Float64ArrayArrayInput, applier func(v [][]float64) (int, error)) IntOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyFloat64ArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyFloat64ArrayArrayToIntPtr(o Float64ArrayArrayInput, applier func(v [][]float64) (*int, error)) IntPtrOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyFloat64ArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyFloat64ArrayArrayToIntArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]int, error)) IntArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyFloat64ArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyFloat64ArrayArrayToIntMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]int, error)) IntMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyFloat64ArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyFloat64ArrayArrayToIntArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyFloat64ArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyFloat64ArrayArrayToIntMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyFloat64ArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyFloat64ArrayArrayToIntMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyFloat64ArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyFloat64ArrayArrayToIntArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]int, error)) IntArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyFloat64ArrayArrayToString(o Float64ArrayArrayInput, applier func(v [][]float64) (string, error)) StringOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyFloat64ArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyFloat64ArrayArrayToStringPtr(o Float64ArrayArrayInput, applier func(v [][]float64) (*string, error)) StringPtrOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyFloat64ArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyFloat64ArrayArrayToStringArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]string, error)) StringArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyFloat64ArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyFloat64ArrayArrayToStringMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]string, error)) StringMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyFloat64ArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyFloat64ArrayArrayToStringArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyFloat64ArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyFloat64ArrayArrayToStringMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyFloat64ArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyFloat64ArrayArrayToStringMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyFloat64ArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyFloat64ArrayArrayToStringArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]string, error)) StringArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyFloat64ArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyFloat64ArrayArrayToURN(o Float64ArrayArrayInput, applier func(v [][]float64) (URN, error)) URNOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyFloat64ArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyFloat64ArrayArrayToURNPtr(o Float64ArrayArrayInput, applier func(v [][]float64) (*URN, error)) URNPtrOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyFloat64ArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyFloat64ArrayArrayToURNArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]URN, error)) URNArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyFloat64ArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyFloat64ArrayArrayToURNMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]URN, error)) URNMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyFloat64ArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyFloat64ArrayArrayToURNArrayMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyFloat64ArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyFloat64ArrayArrayToURNMapArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyFloat64ArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyFloat64ArrayArrayToURNMapMap(o Float64ArrayArrayInput, applier func(v [][]float64) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyFloat64ArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyFloat64ArrayArrayToURNArrayArray(o Float64ArrayArrayInput, applier func(v [][]float64) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToFloat64ArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDToArchive(o IDInput, applier func(v ID) (Archive, error)) ArchiveOutput {
	return o.ToIDOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDToArchiveArray(o IDInput, applier func(v ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDToArchiveMap(o IDInput, applier func(v ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDToArchiveArrayMap(o IDInput, applier func(v ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDToArchiveMapArray(o IDInput, applier func(v ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDToArchiveMapMap(o IDInput, applier func(v ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDToArchiveArrayArray(o IDInput, applier func(v ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDToAsset(o IDInput, applier func(v ID) (Asset, error)) AssetOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDToAssetArray(o IDInput, applier func(v ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDToAssetMap(o IDInput, applier func(v ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDToAssetArrayMap(o IDInput, applier func(v ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDToAssetMapArray(o IDInput, applier func(v ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDToAssetMapMap(o IDInput, applier func(v ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDToAssetArrayArray(o IDInput, applier func(v ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDToAssetOrArchive(o IDInput, applier func(v ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDToAssetOrArchiveArray(o IDInput, applier func(v ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDToAssetOrArchiveMap(o IDInput, applier func(v ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDToAssetOrArchiveArrayMap(o IDInput, applier func(v ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDToAssetOrArchiveMapArray(o IDInput, applier func(v ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDToAssetOrArchiveMapMap(o IDInput, applier func(v ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDToAssetOrArchiveArrayArray(o IDInput, applier func(v ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDToBool(o IDInput, applier func(v ID) (bool, error)) BoolOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDToBoolPtr(o IDInput, applier func(v ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDToBoolArray(o IDInput, applier func(v ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDToBoolMap(o IDInput, applier func(v ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDToBoolArrayMap(o IDInput, applier func(v ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDToBoolMapArray(o IDInput, applier func(v ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDToBoolMapMap(o IDInput, applier func(v ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDToBoolArrayArray(o IDInput, applier func(v ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDToFloat64(o IDInput, applier func(v ID) (float64, error)) Float64Output {
	return o.ToIDOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDToFloat64Ptr(o IDInput, applier func(v ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDToFloat64Array(o IDInput, applier func(v ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDToFloat64Map(o IDInput, applier func(v ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDToFloat64ArrayMap(o IDInput, applier func(v ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDToFloat64MapArray(o IDInput, applier func(v ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDToFloat64MapMap(o IDInput, applier func(v ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDToFloat64ArrayArray(o IDInput, applier func(v ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDToID is like ApplyT, but returns a IDOutput.
func ApplyIDToID(o IDInput, applier func(v ID) (ID, error)) IDOutput {
	return o.ToIDOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDToIDPtr(o IDInput, applier func(v ID) (*ID, error)) IDPtrOutput {
	return o.ToIDOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDToIDArray(o IDInput, applier func(v ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDToIDMap(o IDInput, applier func(v ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDToIDArrayMap(o IDInput, applier func(v ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDToIDMapArray(o IDInput, applier func(v ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDToIDMapMap(o IDInput, applier func(v ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDToIDArrayArray(o IDInput, applier func(v ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDToArray(o IDInput, applier func(v ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDToMap is like ApplyT, but returns a MapOutput.
func ApplyIDToMap(o IDInput, applier func(v ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDToArrayMap(o IDInput, applier func(v ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDToMapArray(o IDInput, applier func(v ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDToMapMap(o IDInput, applier func(v ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDToArrayArray(o IDInput, applier func(v ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDToInt is like ApplyT, but returns a IntOutput.
func ApplyIDToInt(o IDInput, applier func(v ID) (int, error)) IntOutput {
	return o.ToIDOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDToIntPtr(o IDInput, applier func(v ID) (*int, error)) IntPtrOutput {
	return o.ToIDOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDToIntArray(o IDInput, applier func(v ID) ([]int, error)) IntArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDToIntMap(o IDInput, applier func(v ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDToIntArrayMap(o IDInput, applier func(v ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDToIntMapArray(o IDInput, applier func(v ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDToIntMapMap(o IDInput, applier func(v ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDToIntArrayArray(o IDInput, applier func(v ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDToString is like ApplyT, but returns a StringOutput.
func ApplyIDToString(o IDInput, applier func(v ID) (string, error)) StringOutput {
	return o.ToIDOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDToStringPtr(o IDInput, applier func(v ID) (*string, error)) StringPtrOutput {
	return o.ToIDOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDToStringArray(o IDInput, applier func(v ID) ([]string, error)) StringArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDToStringMap(o IDInput, applier func(v ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDToStringArrayMap(o IDInput, applier func(v ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDToStringMapArray(o IDInput, applier func(v ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDToStringMapMap(o IDInput, applier func(v ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDToStringArrayArray(o IDInput, applier func(v ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDToURN is like ApplyT, but returns a URNOutput.
func ApplyIDToURN(o IDInput, applier func(v ID) (URN, error)) URNOutput {
	return o.ToIDOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDToURNPtr(o IDInput, applier func(v ID) (*URN, error)) URNPtrOutput {
	return o.ToIDOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDToURNArray(o IDInput, applier func(v ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDToURNMap(o IDInput, applier func(v ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDToURNArrayMap(o IDInput, applier func(v ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDToURNMapArray(o IDInput, applier func(v ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDToURNMapMap(o IDInput, applier func(v ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDToURNArrayArray(o IDInput, applier func(v ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDPtrToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDPtrToArchive(o IDPtrInput, applier func(v *ID) (Archive, error)) ArchiveOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDPtrToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDPtrToArchiveArray(o IDPtrInput, applier func(v *ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDPtrToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDPtrToArchiveMap(o IDPtrInput, applier func(v *ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDPtrToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDPtrToArchiveArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDPtrToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDPtrToArchiveMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDPtrToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDPtrToArchiveMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDPtrToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDPtrToArchiveArrayArray(o IDPtrInput, applier func(v *ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDPtrToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDPtrToAsset(o IDPtrInput, applier func(v *ID) (Asset, error)) AssetOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDPtrToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDPtrToAssetArray(o IDPtrInput, applier func(v *ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDPtrToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDPtrToAssetMap(o IDPtrInput, applier func(v *ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDPtrToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDPtrToAssetArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDPtrToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDPtrToAssetMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDPtrToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDPtrToAssetMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDPtrToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDPtrToAssetArrayArray(o IDPtrInput, applier func(v *ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDPtrToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDPtrToAssetOrArchive(o IDPtrInput, applier func(v *ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDPtrToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDPtrToAssetOrArchiveArray(o IDPtrInput, applier func(v *ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDPtrToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDPtrToAssetOrArchiveMap(o IDPtrInput, applier func(v *ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDPtrToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDPtrToAssetOrArchiveArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDPtrToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDPtrToAssetOrArchiveMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDPtrToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDPtrToAssetOrArchiveMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDPtrToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDPtrToAssetOrArchiveArrayArray(o IDPtrInput, applier func(v *ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDPtrToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDPtrToBool(o IDPtrInput, applier func(v *ID) (bool, error)) BoolOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDPtrToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDPtrToBoolPtr(o IDPtrInput, applier func(v *ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDPtrToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDPtrToBoolArray(o IDPtrInput, applier func(v *ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDPtrToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDPtrToBoolMap(o IDPtrInput, applier func(v *ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDPtrToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDPtrToBoolArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDPtrToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDPtrToBoolMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDPtrToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDPtrToBoolMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDPtrToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDPtrToBoolArrayArray(o IDPtrInput, applier func(v *ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDPtrToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDPtrToFloat64(o IDPtrInput, applier func(v *ID) (float64, error)) Float64Output {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDPtrToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDPtrToFloat64Ptr(o IDPtrInput, applier func(v *ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDPtrToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDPtrToFloat64Array(o IDPtrInput, applier func(v *ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDPtrToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDPtrToFloat64Map(o IDPtrInput, applier func(v *ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDPtrToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDPtrToFloat64ArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDPtrToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDPtrToFloat64MapArray(o IDPtrInput, applier func(v *ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDPtrToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDPtrToFloat64MapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDPtrToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDPtrToFloat64ArrayArray(o IDPtrInput, applier func(v *ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDPtrToID is like ApplyT, but returns a IDOutput.
func ApplyIDPtrToID(o IDPtrInput, applier func(v *ID) (ID, error)) IDOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDPtrToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDPtrToIDPtr(o IDPtrInput, applier func(v *ID) (*ID, error)) IDPtrOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDPtrToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDPtrToIDArray(o IDPtrInput, applier func(v *ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDPtrToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDPtrToIDMap(o IDPtrInput, applier func(v *ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDPtrToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDPtrToIDArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDPtrToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDPtrToIDMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDPtrToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDPtrToIDMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDPtrToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDPtrToIDArrayArray(o IDPtrInput, applier func(v *ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDPtrToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDPtrToArray(o IDPtrInput, applier func(v *ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDPtrToMap is like ApplyT, but returns a MapOutput.
func ApplyIDPtrToMap(o IDPtrInput, applier func(v *ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDPtrToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDPtrToArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDPtrToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDPtrToMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDPtrToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDPtrToMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDPtrToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDPtrToArrayArray(o IDPtrInput, applier func(v *ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDPtrToInt is like ApplyT, but returns a IntOutput.
func ApplyIDPtrToInt(o IDPtrInput, applier func(v *ID) (int, error)) IntOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDPtrToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDPtrToIntPtr(o IDPtrInput, applier func(v *ID) (*int, error)) IntPtrOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDPtrToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDPtrToIntArray(o IDPtrInput, applier func(v *ID) ([]int, error)) IntArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDPtrToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDPtrToIntMap(o IDPtrInput, applier func(v *ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDPtrToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDPtrToIntArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDPtrToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDPtrToIntMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDPtrToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDPtrToIntMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDPtrToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDPtrToIntArrayArray(o IDPtrInput, applier func(v *ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDPtrToString is like ApplyT, but returns a StringOutput.
func ApplyIDPtrToString(o IDPtrInput, applier func(v *ID) (string, error)) StringOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDPtrToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDPtrToStringPtr(o IDPtrInput, applier func(v *ID) (*string, error)) StringPtrOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDPtrToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDPtrToStringArray(o IDPtrInput, applier func(v *ID) ([]string, error)) StringArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDPtrToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDPtrToStringMap(o IDPtrInput, applier func(v *ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDPtrToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDPtrToStringArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDPtrToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDPtrToStringMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDPtrToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDPtrToStringMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDPtrToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDPtrToStringArrayArray(o IDPtrInput, applier func(v *ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDPtrToURN is like ApplyT, but returns a URNOutput.
func ApplyIDPtrToURN(o IDPtrInput, applier func(v *ID) (URN, error)) URNOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDPtrToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDPtrToURNPtr(o IDPtrInput, applier func(v *ID) (*URN, error)) URNPtrOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDPtrToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDPtrToURNArray(o IDPtrInput, applier func(v *ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDPtrToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDPtrToURNMap(o IDPtrInput, applier func(v *ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDPtrToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDPtrToURNArrayMap(o IDPtrInput, applier func(v *ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDPtrToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDPtrToURNMapArray(o IDPtrInput, applier func(v *ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDPtrToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDPtrToURNMapMap(o IDPtrInput, applier func(v *ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDPtrToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDPtrToURNArrayArray(o IDPtrInput, applier func(v *ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDPtrOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDArrayToArchive(o IDArrayInput, applier func(v []ID) (Archive, error)) ArchiveOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDArrayToArchiveArray(o IDArrayInput, applier func(v []ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDArrayToArchiveMap(o IDArrayInput, applier func(v []ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDArrayToArchiveArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDArrayToArchiveMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDArrayToArchiveMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDArrayToArchiveArrayArray(o IDArrayInput, applier func(v []ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDArrayToAsset(o IDArrayInput, applier func(v []ID) (Asset, error)) AssetOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDArrayToAssetArray(o IDArrayInput, applier func(v []ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDArrayToAssetMap(o IDArrayInput, applier func(v []ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDArrayToAssetArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDArrayToAssetMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDArrayToAssetMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDArrayToAssetArrayArray(o IDArrayInput, applier func(v []ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDArrayToAssetOrArchive(o IDArrayInput, applier func(v []ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDArrayToAssetOrArchiveArray(o IDArrayInput, applier func(v []ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDArrayToAssetOrArchiveMap(o IDArrayInput, applier func(v []ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDArrayToAssetOrArchiveArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDArrayToAssetOrArchiveMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDArrayToAssetOrArchiveMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDArrayToAssetOrArchiveArrayArray(o IDArrayInput, applier func(v []ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDArrayToBool(o IDArrayInput, applier func(v []ID) (bool, error)) BoolOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDArrayToBoolPtr(o IDArrayInput, applier func(v []ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDArrayToBoolArray(o IDArrayInput, applier func(v []ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDArrayToBoolMap(o IDArrayInput, applier func(v []ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDArrayToBoolArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDArrayToBoolMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDArrayToBoolMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDArrayToBoolArrayArray(o IDArrayInput, applier func(v []ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDArrayToFloat64(o IDArrayInput, applier func(v []ID) (float64, error)) Float64Output {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDArrayToFloat64Ptr(o IDArrayInput, applier func(v []ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDArrayToFloat64Array(o IDArrayInput, applier func(v []ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDArrayToFloat64Map(o IDArrayInput, applier func(v []ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDArrayToFloat64ArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDArrayToFloat64MapArray(o IDArrayInput, applier func(v []ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDArrayToFloat64MapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDArrayToFloat64ArrayArray(o IDArrayInput, applier func(v []ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDArrayToID is like ApplyT, but returns a IDOutput.
func ApplyIDArrayToID(o IDArrayInput, applier func(v []ID) (ID, error)) IDOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDArrayToIDPtr(o IDArrayInput, applier func(v []ID) (*ID, error)) IDPtrOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDArrayToIDArray(o IDArrayInput, applier func(v []ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDArrayToIDMap(o IDArrayInput, applier func(v []ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDArrayToIDArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDArrayToIDMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDArrayToIDMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDArrayToIDArrayArray(o IDArrayInput, applier func(v []ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDArrayToArray(o IDArrayInput, applier func(v []ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyIDArrayToMap(o IDArrayInput, applier func(v []ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDArrayToArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDArrayToMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDArrayToMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDArrayToArrayArray(o IDArrayInput, applier func(v []ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyIDArrayToInt(o IDArrayInput, applier func(v []ID) (int, error)) IntOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDArrayToIntPtr(o IDArrayInput, applier func(v []ID) (*int, error)) IntPtrOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDArrayToIntArray(o IDArrayInput, applier func(v []ID) ([]int, error)) IntArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDArrayToIntMap(o IDArrayInput, applier func(v []ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDArrayToIntArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDArrayToIntMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDArrayToIntMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDArrayToIntArrayArray(o IDArrayInput, applier func(v []ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDArrayToString is like ApplyT, but returns a StringOutput.
func ApplyIDArrayToString(o IDArrayInput, applier func(v []ID) (string, error)) StringOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDArrayToStringPtr(o IDArrayInput, applier func(v []ID) (*string, error)) StringPtrOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDArrayToStringArray(o IDArrayInput, applier func(v []ID) ([]string, error)) StringArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDArrayToStringMap(o IDArrayInput, applier func(v []ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDArrayToStringArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDArrayToStringMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDArrayToStringMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDArrayToStringArrayArray(o IDArrayInput, applier func(v []ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyIDArrayToURN(o IDArrayInput, applier func(v []ID) (URN, error)) URNOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDArrayToURNPtr(o IDArrayInput, applier func(v []ID) (*URN, error)) URNPtrOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDArrayToURNArray(o IDArrayInput, applier func(v []ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDArrayToURNMap(o IDArrayInput, applier func(v []ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDArrayToURNArrayMap(o IDArrayInput, applier func(v []ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDArrayToURNMapArray(o IDArrayInput, applier func(v []ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDArrayToURNMapMap(o IDArrayInput, applier func(v []ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDArrayToURNArrayArray(o IDArrayInput, applier func(v []ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDMapToArchive(o IDMapInput, applier func(v map[string]ID) (Archive, error)) ArchiveOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDMapToArchiveArray(o IDMapInput, applier func(v map[string]ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDMapToArchiveMap(o IDMapInput, applier func(v map[string]ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDMapToArchiveArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDMapToArchiveMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDMapToArchiveMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDMapToArchiveArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDMapToAsset(o IDMapInput, applier func(v map[string]ID) (Asset, error)) AssetOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDMapToAssetArray(o IDMapInput, applier func(v map[string]ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDMapToAssetMap(o IDMapInput, applier func(v map[string]ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDMapToAssetArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDMapToAssetMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDMapToAssetMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDMapToAssetArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDMapToAssetOrArchive(o IDMapInput, applier func(v map[string]ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDMapToAssetOrArchiveArray(o IDMapInput, applier func(v map[string]ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDMapToAssetOrArchiveMap(o IDMapInput, applier func(v map[string]ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDMapToAssetOrArchiveArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDMapToAssetOrArchiveMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDMapToAssetOrArchiveMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDMapToAssetOrArchiveArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDMapToBool(o IDMapInput, applier func(v map[string]ID) (bool, error)) BoolOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDMapToBoolPtr(o IDMapInput, applier func(v map[string]ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDMapToBoolArray(o IDMapInput, applier func(v map[string]ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDMapToBoolMap(o IDMapInput, applier func(v map[string]ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDMapToBoolArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDMapToBoolMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDMapToBoolMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDMapToBoolArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDMapToFloat64(o IDMapInput, applier func(v map[string]ID) (float64, error)) Float64Output {
	return o.ToIDMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDMapToFloat64Ptr(o IDMapInput, applier func(v map[string]ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDMapToFloat64Array(o IDMapInput, applier func(v map[string]ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDMapToFloat64Map(o IDMapInput, applier func(v map[string]ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDMapToFloat64ArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDMapToFloat64MapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDMapToFloat64MapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDMapToFloat64ArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDMapToID is like ApplyT, but returns a IDOutput.
func ApplyIDMapToID(o IDMapInput, applier func(v map[string]ID) (ID, error)) IDOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDMapToIDPtr(o IDMapInput, applier func(v map[string]ID) (*ID, error)) IDPtrOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDMapToIDArray(o IDMapInput, applier func(v map[string]ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDMapToIDMap(o IDMapInput, applier func(v map[string]ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDMapToIDArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDMapToIDMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDMapToIDMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDMapToIDArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDMapToArray(o IDMapInput, applier func(v map[string]ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDMapToMap is like ApplyT, but returns a MapOutput.
func ApplyIDMapToMap(o IDMapInput, applier func(v map[string]ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDMapToArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDMapToMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDMapToMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDMapToArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDMapToInt is like ApplyT, but returns a IntOutput.
func ApplyIDMapToInt(o IDMapInput, applier func(v map[string]ID) (int, error)) IntOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDMapToIntPtr(o IDMapInput, applier func(v map[string]ID) (*int, error)) IntPtrOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDMapToIntArray(o IDMapInput, applier func(v map[string]ID) ([]int, error)) IntArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDMapToIntMap(o IDMapInput, applier func(v map[string]ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDMapToIntArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDMapToIntMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDMapToIntMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDMapToIntArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDMapToString is like ApplyT, but returns a StringOutput.
func ApplyIDMapToString(o IDMapInput, applier func(v map[string]ID) (string, error)) StringOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDMapToStringPtr(o IDMapInput, applier func(v map[string]ID) (*string, error)) StringPtrOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDMapToStringArray(o IDMapInput, applier func(v map[string]ID) ([]string, error)) StringArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDMapToStringMap(o IDMapInput, applier func(v map[string]ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDMapToStringArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDMapToStringMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDMapToStringMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDMapToStringArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDMapToURN is like ApplyT, but returns a URNOutput.
func ApplyIDMapToURN(o IDMapInput, applier func(v map[string]ID) (URN, error)) URNOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDMapToURNPtr(o IDMapInput, applier func(v map[string]ID) (*URN, error)) URNPtrOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDMapToURNArray(o IDMapInput, applier func(v map[string]ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDMapToURNMap(o IDMapInput, applier func(v map[string]ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDMapToURNArrayMap(o IDMapInput, applier func(v map[string]ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDMapToURNMapArray(o IDMapInput, applier func(v map[string]ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDMapToURNMapMap(o IDMapInput, applier func(v map[string]ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDMapToURNArrayArray(o IDMapInput, applier func(v map[string]ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDArrayMapToArchive(o IDArrayMapInput, applier func(v map[string][]ID) (Archive, error)) ArchiveOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDArrayMapToArchiveArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDArrayMapToArchiveMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDArrayMapToArchiveArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDArrayMapToArchiveMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDArrayMapToArchiveMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDArrayMapToArchiveArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDArrayMapToAsset(o IDArrayMapInput, applier func(v map[string][]ID) (Asset, error)) AssetOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDArrayMapToAssetArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDArrayMapToAssetMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDArrayMapToAssetArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDArrayMapToAssetMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDArrayMapToAssetMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDArrayMapToAssetArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDArrayMapToAssetOrArchive(o IDArrayMapInput, applier func(v map[string][]ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDArrayMapToAssetOrArchiveArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDArrayMapToAssetOrArchiveMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDArrayMapToAssetOrArchiveArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDArrayMapToAssetOrArchiveMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDArrayMapToAssetOrArchiveMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDArrayMapToAssetOrArchiveArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDArrayMapToBool(o IDArrayMapInput, applier func(v map[string][]ID) (bool, error)) BoolOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDArrayMapToBoolPtr(o IDArrayMapInput, applier func(v map[string][]ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDArrayMapToBoolArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDArrayMapToBoolMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDArrayMapToBoolArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDArrayMapToBoolMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDArrayMapToBoolMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDArrayMapToBoolArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDArrayMapToFloat64(o IDArrayMapInput, applier func(v map[string][]ID) (float64, error)) Float64Output {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDArrayMapToFloat64Ptr(o IDArrayMapInput, applier func(v map[string][]ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDArrayMapToFloat64Array(o IDArrayMapInput, applier func(v map[string][]ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDArrayMapToFloat64Map(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDArrayMapToFloat64ArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDArrayMapToFloat64MapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDArrayMapToFloat64MapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDArrayMapToFloat64ArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyIDArrayMapToID(o IDArrayMapInput, applier func(v map[string][]ID) (ID, error)) IDOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDArrayMapToIDPtr(o IDArrayMapInput, applier func(v map[string][]ID) (*ID, error)) IDPtrOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDArrayMapToIDArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDArrayMapToIDMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDArrayMapToIDArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDArrayMapToIDMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDArrayMapToIDMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDArrayMapToIDArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDArrayMapToArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyIDArrayMapToMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDArrayMapToArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDArrayMapToMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDArrayMapToMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDArrayMapToArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyIDArrayMapToInt(o IDArrayMapInput, applier func(v map[string][]ID) (int, error)) IntOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDArrayMapToIntPtr(o IDArrayMapInput, applier func(v map[string][]ID) (*int, error)) IntPtrOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDArrayMapToIntArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]int, error)) IntArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDArrayMapToIntMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDArrayMapToIntArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDArrayMapToIntMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDArrayMapToIntMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDArrayMapToIntArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyIDArrayMapToString(o IDArrayMapInput, applier func(v map[string][]ID) (string, error)) StringOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDArrayMapToStringPtr(o IDArrayMapInput, applier func(v map[string][]ID) (*string, error)) StringPtrOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDArrayMapToStringArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]string, error)) StringArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDArrayMapToStringMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDArrayMapToStringArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDArrayMapToStringMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDArrayMapToStringMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDArrayMapToStringArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyIDArrayMapToURN(o IDArrayMapInput, applier func(v map[string][]ID) (URN, error)) URNOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDArrayMapToURNPtr(o IDArrayMapInput, applier func(v map[string][]ID) (*URN, error)) URNPtrOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDArrayMapToURNArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDArrayMapToURNMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDArrayMapToURNArrayMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDArrayMapToURNMapArray(o IDArrayMapInput, applier func(v map[string][]ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDArrayMapToURNMapMap(o IDArrayMapInput, applier func(v map[string][]ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDArrayMapToURNArrayArray(o IDArrayMapInput, applier func(v map[string][]ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDMapArrayToArchive(o IDMapArrayInput, applier func(v []map[string]ID) (Archive, error)) ArchiveOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDMapArrayToArchiveArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDMapArrayToArchiveMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDMapArrayToArchiveArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDMapArrayToArchiveMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDMapArrayToArchiveMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDMapArrayToArchiveArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDMapArrayToAsset(o IDMapArrayInput, applier func(v []map[string]ID) (Asset, error)) AssetOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDMapArrayToAssetArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDMapArrayToAssetMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDMapArrayToAssetArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDMapArrayToAssetMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDMapArrayToAssetMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDMapArrayToAssetArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDMapArrayToAssetOrArchive(o IDMapArrayInput, applier func(v []map[string]ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDMapArrayToAssetOrArchiveArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDMapArrayToAssetOrArchiveMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDMapArrayToAssetOrArchiveArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDMapArrayToAssetOrArchiveMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDMapArrayToAssetOrArchiveMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDMapArrayToAssetOrArchiveArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDMapArrayToBool(o IDMapArrayInput, applier func(v []map[string]ID) (bool, error)) BoolOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDMapArrayToBoolPtr(o IDMapArrayInput, applier func(v []map[string]ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDMapArrayToBoolArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDMapArrayToBoolMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDMapArrayToBoolArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDMapArrayToBoolMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDMapArrayToBoolMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDMapArrayToBoolArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDMapArrayToFloat64(o IDMapArrayInput, applier func(v []map[string]ID) (float64, error)) Float64Output {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDMapArrayToFloat64Ptr(o IDMapArrayInput, applier func(v []map[string]ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDMapArrayToFloat64Array(o IDMapArrayInput, applier func(v []map[string]ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDMapArrayToFloat64Map(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDMapArrayToFloat64ArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDMapArrayToFloat64MapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDMapArrayToFloat64MapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDMapArrayToFloat64ArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyIDMapArrayToID(o IDMapArrayInput, applier func(v []map[string]ID) (ID, error)) IDOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDMapArrayToIDPtr(o IDMapArrayInput, applier func(v []map[string]ID) (*ID, error)) IDPtrOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDMapArrayToIDArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDMapArrayToIDMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDMapArrayToIDArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDMapArrayToIDMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDMapArrayToIDMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDMapArrayToIDArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDMapArrayToArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyIDMapArrayToMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDMapArrayToArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDMapArrayToMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDMapArrayToMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDMapArrayToArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyIDMapArrayToInt(o IDMapArrayInput, applier func(v []map[string]ID) (int, error)) IntOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDMapArrayToIntPtr(o IDMapArrayInput, applier func(v []map[string]ID) (*int, error)) IntPtrOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDMapArrayToIntArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]int, error)) IntArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDMapArrayToIntMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDMapArrayToIntArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDMapArrayToIntMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDMapArrayToIntMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDMapArrayToIntArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyIDMapArrayToString(o IDMapArrayInput, applier func(v []map[string]ID) (string, error)) StringOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDMapArrayToStringPtr(o IDMapArrayInput, applier func(v []map[string]ID) (*string, error)) StringPtrOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDMapArrayToStringArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]string, error)) StringArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDMapArrayToStringMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDMapArrayToStringArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDMapArrayToStringMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDMapArrayToStringMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDMapArrayToStringArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyIDMapArrayToURN(o IDMapArrayInput, applier func(v []map[string]ID) (URN, error)) URNOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDMapArrayToURNPtr(o IDMapArrayInput, applier func(v []map[string]ID) (*URN, error)) URNPtrOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDMapArrayToURNArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDMapArrayToURNMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDMapArrayToURNArrayMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDMapArrayToURNMapArray(o IDMapArrayInput, applier func(v []map[string]ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDMapArrayToURNMapMap(o IDMapArrayInput, applier func(v []map[string]ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDMapArrayToURNArrayArray(o IDMapArrayInput, applier func(v []map[string]ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDMapMapToArchive(o IDMapMapInput, applier func(v map[string]map[string]ID) (Archive, error)) ArchiveOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDMapMapToArchiveArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDMapMapToArchiveMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDMapMapToArchiveArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDMapMapToArchiveMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDMapMapToArchiveMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDMapMapToArchiveArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDMapMapToAsset(o IDMapMapInput, applier func(v map[string]map[string]ID) (Asset, error)) AssetOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDMapMapToAssetArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDMapMapToAssetMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDMapMapToAssetArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDMapMapToAssetMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDMapMapToAssetMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDMapMapToAssetArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDMapMapToAssetOrArchive(o IDMapMapInput, applier func(v map[string]map[string]ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDMapMapToAssetOrArchiveArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDMapMapToAssetOrArchiveMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDMapMapToAssetOrArchiveArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDMapMapToAssetOrArchiveMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDMapMapToAssetOrArchiveMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDMapMapToAssetOrArchiveArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDMapMapToBool(o IDMapMapInput, applier func(v map[string]map[string]ID) (bool, error)) BoolOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDMapMapToBoolPtr(o IDMapMapInput, applier func(v map[string]map[string]ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDMapMapToBoolArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDMapMapToBoolMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDMapMapToBoolArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDMapMapToBoolMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDMapMapToBoolMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDMapMapToBoolArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDMapMapToFloat64(o IDMapMapInput, applier func(v map[string]map[string]ID) (float64, error)) Float64Output {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDMapMapToFloat64Ptr(o IDMapMapInput, applier func(v map[string]map[string]ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDMapMapToFloat64Array(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDMapMapToFloat64Map(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDMapMapToFloat64ArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDMapMapToFloat64MapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDMapMapToFloat64MapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDMapMapToFloat64ArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyIDMapMapToID(o IDMapMapInput, applier func(v map[string]map[string]ID) (ID, error)) IDOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDMapMapToIDPtr(o IDMapMapInput, applier func(v map[string]map[string]ID) (*ID, error)) IDPtrOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDMapMapToIDArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDMapMapToIDMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDMapMapToIDArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDMapMapToIDMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDMapMapToIDMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDMapMapToIDArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDMapMapToArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyIDMapMapToMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDMapMapToArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDMapMapToMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDMapMapToMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDMapMapToArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyIDMapMapToInt(o IDMapMapInput, applier func(v map[string]map[string]ID) (int, error)) IntOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDMapMapToIntPtr(o IDMapMapInput, applier func(v map[string]map[string]ID) (*int, error)) IntPtrOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDMapMapToIntArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]int, error)) IntArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDMapMapToIntMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDMapMapToIntArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDMapMapToIntMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDMapMapToIntMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDMapMapToIntArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyIDMapMapToString(o IDMapMapInput, applier func(v map[string]map[string]ID) (string, error)) StringOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDMapMapToStringPtr(o IDMapMapInput, applier func(v map[string]map[string]ID) (*string, error)) StringPtrOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDMapMapToStringArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]string, error)) StringArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDMapMapToStringMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDMapMapToStringArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDMapMapToStringMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDMapMapToStringMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDMapMapToStringArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyIDMapMapToURN(o IDMapMapInput, applier func(v map[string]map[string]ID) (URN, error)) URNOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDMapMapToURNPtr(o IDMapMapInput, applier func(v map[string]map[string]ID) (*URN, error)) URNPtrOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDMapMapToURNArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDMapMapToURNMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDMapMapToURNArrayMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDMapMapToURNMapArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDMapMapToURNMapMap(o IDMapMapInput, applier func(v map[string]map[string]ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDMapMapToURNArrayArray(o IDMapMapInput, applier func(v map[string]map[string]ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIDArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIDArrayArrayToArchive(o IDArrayArrayInput, applier func(v [][]ID) (Archive, error)) ArchiveOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIDArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIDArrayArrayToArchiveArray(o IDArrayArrayInput, applier func(v [][]ID) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIDArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIDArrayArrayToArchiveMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIDArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIDArrayArrayToArchiveArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIDArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIDArrayArrayToArchiveMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIDArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIDArrayArrayToArchiveMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIDArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIDArrayArrayToArchiveArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIDArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIDArrayArrayToAsset(o IDArrayArrayInput, applier func(v [][]ID) (Asset, error)) AssetOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIDArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIDArrayArrayToAssetArray(o IDArrayArrayInput, applier func(v [][]ID) ([]Asset, error)) AssetArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIDArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIDArrayArrayToAssetMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIDArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIDArrayArrayToAssetArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIDArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIDArrayArrayToAssetMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIDArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIDArrayArrayToAssetMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIDArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIDArrayArrayToAssetArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIDArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIDArrayArrayToAssetOrArchive(o IDArrayArrayInput, applier func(v [][]ID) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIDArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIDArrayArrayToAssetOrArchiveArray(o IDArrayArrayInput, applier func(v [][]ID) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIDArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIDArrayArrayToAssetOrArchiveMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIDArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIDArrayArrayToAssetOrArchiveArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIDArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIDArrayArrayToAssetOrArchiveMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIDArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIDArrayArrayToAssetOrArchiveMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIDArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIDArrayArrayToAssetOrArchiveArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIDArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyIDArrayArrayToBool(o IDArrayArrayInput, applier func(v [][]ID) (bool, error)) BoolOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIDArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIDArrayArrayToBoolPtr(o IDArrayArrayInput, applier func(v [][]ID) (*bool, error)) BoolPtrOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIDArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIDArrayArrayToBoolArray(o IDArrayArrayInput, applier func(v [][]ID) ([]bool, error)) BoolArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIDArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIDArrayArrayToBoolMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]bool, error)) BoolMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIDArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIDArrayArrayToBoolArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIDArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIDArrayArrayToBoolMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIDArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIDArrayArrayToBoolMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIDArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIDArrayArrayToBoolArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIDArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIDArrayArrayToFloat64(o IDArrayArrayInput, applier func(v [][]ID) (float64, error)) Float64Output {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyIDArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIDArrayArrayToFloat64Ptr(o IDArrayArrayInput, applier func(v [][]ID) (*float64, error)) Float64PtrOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIDArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIDArrayArrayToFloat64Array(o IDArrayArrayInput, applier func(v [][]ID) ([]float64, error)) Float64ArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIDArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIDArrayArrayToFloat64Map(o IDArrayArrayInput, applier func(v [][]ID) (map[string]float64, error)) Float64MapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIDArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIDArrayArrayToFloat64ArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIDArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIDArrayArrayToFloat64MapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIDArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIDArrayArrayToFloat64MapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIDArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIDArrayArrayToFloat64ArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIDArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyIDArrayArrayToID(o IDArrayArrayInput, applier func(v [][]ID) (ID, error)) IDOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyIDArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIDArrayArrayToIDPtr(o IDArrayArrayInput, applier func(v [][]ID) (*ID, error)) IDPtrOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIDArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIDArrayArrayToIDArray(o IDArrayArrayInput, applier func(v [][]ID) ([]ID, error)) IDArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIDArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIDArrayArrayToIDMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]ID, error)) IDMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIDArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIDArrayArrayToIDArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIDArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIDArrayArrayToIDMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIDArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIDArrayArrayToIDMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIDArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIDArrayArrayToIDArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIDArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIDArrayArrayToArray(o IDArrayArrayInput, applier func(v [][]ID) ([]interface{}, error)) ArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIDArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyIDArrayArrayToMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]interface{}, error)) MapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyIDArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIDArrayArrayToArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIDArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIDArrayArrayToMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIDArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIDArrayArrayToMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIDArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIDArrayArrayToArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIDArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyIDArrayArrayToInt(o IDArrayArrayInput, applier func(v [][]ID) (int, error)) IntOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyIDArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIDArrayArrayToIntPtr(o IDArrayArrayInput, applier func(v [][]ID) (*int, error)) IntPtrOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIDArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIDArrayArrayToIntArray(o IDArrayArrayInput, applier func(v [][]ID) ([]int, error)) IntArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIDArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIDArrayArrayToIntMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]int, error)) IntMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIDArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIDArrayArrayToIntArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIDArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIDArrayArrayToIntMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIDArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIDArrayArrayToIntMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIDArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIDArrayArrayToIntArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIDArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyIDArrayArrayToString(o IDArrayArrayInput, applier func(v [][]ID) (string, error)) StringOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyIDArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIDArrayArrayToStringPtr(o IDArrayArrayInput, applier func(v [][]ID) (*string, error)) StringPtrOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIDArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIDArrayArrayToStringArray(o IDArrayArrayInput, applier func(v [][]ID) ([]string, error)) StringArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIDArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIDArrayArrayToStringMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]string, error)) StringMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIDArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIDArrayArrayToStringArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIDArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIDArrayArrayToStringMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIDArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIDArrayArrayToStringMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIDArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIDArrayArrayToStringArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIDArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyIDArrayArrayToURN(o IDArrayArrayInput, applier func(v [][]ID) (URN, error)) URNOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyIDArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIDArrayArrayToURNPtr(o IDArrayArrayInput, applier func(v [][]ID) (*URN, error)) URNPtrOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIDArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIDArrayArrayToURNArray(o IDArrayArrayInput, applier func(v [][]ID) ([]URN, error)) URNArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIDArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIDArrayArrayToURNMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]URN, error)) URNMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIDArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIDArrayArrayToURNArrayMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIDArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIDArrayArrayToURNMapArray(o IDArrayArrayInput, applier func(v [][]ID) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIDArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIDArrayArrayToURNMapMap(o IDArrayArrayInput, applier func(v [][]ID) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIDArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIDArrayArrayToURNArrayArray(o IDArrayArrayInput, applier func(v [][]ID) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIDArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArrayToArchive(o ArrayInput, applier func(v []interface{}) (Archive, error)) ArchiveOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArrayToArchiveArray(o ArrayInput, applier func(v []interface{}) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArrayToArchiveMap(o ArrayInput, applier func(v []interface{}) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArrayToArchiveArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArrayToArchiveMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArrayToArchiveMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArrayToArchiveArrayArray(o ArrayInput, applier func(v []interface{}) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArrayToAsset(o ArrayInput, applier func(v []interface{}) (Asset, error)) AssetOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArrayToAssetArray(o ArrayInput, applier func(v []interface{}) ([]Asset, error)) AssetArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArrayToAssetMap(o ArrayInput, applier func(v []interface{}) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArrayToAssetArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArrayToAssetMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArrayToAssetMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArrayToAssetArrayArray(o ArrayInput, applier func(v []interface{}) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArrayToAssetOrArchive(o ArrayInput, applier func(v []interface{}) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArrayToAssetOrArchiveArray(o ArrayInput, applier func(v []interface{}) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArrayToAssetOrArchiveMap(o ArrayInput, applier func(v []interface{}) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArrayToAssetOrArchiveArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArrayToAssetOrArchiveMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArrayToAssetOrArchiveMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArrayToAssetOrArchiveArrayArray(o ArrayInput, applier func(v []interface{}) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyArrayToBool(o ArrayInput, applier func(v []interface{}) (bool, error)) BoolOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArrayToBoolPtr(o ArrayInput, applier func(v []interface{}) (*bool, error)) BoolPtrOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArrayToBoolArray(o ArrayInput, applier func(v []interface{}) ([]bool, error)) BoolArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArrayToBoolMap(o ArrayInput, applier func(v []interface{}) (map[string]bool, error)) BoolMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArrayToBoolArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArrayToBoolMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArrayToBoolMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArrayToBoolArrayArray(o ArrayInput, applier func(v []interface{}) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArrayToFloat64(o ArrayInput, applier func(v []interface{}) (float64, error)) Float64Output {
	return o.ToArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArrayToFloat64Ptr(o ArrayInput, applier func(v []interface{}) (*float64, error)) Float64PtrOutput {
	return o.ToArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArrayToFloat64Array(o ArrayInput, applier func(v []interface{}) ([]float64, error)) Float64ArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArrayToFloat64Map(o ArrayInput, applier func(v []interface{}) (map[string]float64, error)) Float64MapOutput {
	return o.ToArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArrayToFloat64ArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArrayToFloat64MapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArrayToFloat64MapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArrayToFloat64ArrayArray(o ArrayInput, applier func(v []interface{}) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArrayToID is like ApplyT, but returns a IDOutput.
func ApplyArrayToID(o ArrayInput, applier func(v []interface{}) (ID, error)) IDOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArrayToIDPtr(o ArrayInput, applier func(v []interface{}) (*ID, error)) IDPtrOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArrayToIDArray(o ArrayInput, applier func(v []interface{}) ([]ID, error)) IDArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArrayToIDMap(o ArrayInput, applier func(v []interface{}) (map[string]ID, error)) IDMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArrayToIDArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArrayToIDMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArrayToIDMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArrayToIDArrayArray(o ArrayInput, applier func(v []interface{}) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArrayToArray(o ArrayInput, applier func(v []interface{}) ([]interface{}, error)) ArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyArrayToMap(o ArrayInput, applier func(v []interface{}) (map[string]interface{}, error)) MapOutput {
	return o.ToArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArrayToArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArrayToMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArrayToMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArrayToArrayArray(o ArrayInput, applier func(v []interface{}) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyArrayToInt(o ArrayInput, applier func(v []interface{}) (int, error)) IntOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArrayToIntPtr(o ArrayInput, applier func(v []interface{}) (*int, error)) IntPtrOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArrayToIntArray(o ArrayInput, applier func(v []interface{}) ([]int, error)) IntArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArrayToIntMap(o ArrayInput, applier func(v []interface{}) (map[string]int, error)) IntMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArrayToIntArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArrayToIntMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArrayToIntMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArrayToIntArrayArray(o ArrayInput, applier func(v []interface{}) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArrayToString is like ApplyT, but returns a StringOutput.
func ApplyArrayToString(o ArrayInput, applier func(v []interface{}) (string, error)) StringOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArrayToStringPtr(o ArrayInput, applier func(v []interface{}) (*string, error)) StringPtrOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArrayToStringArray(o ArrayInput, applier func(v []interface{}) ([]string, error)) StringArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArrayToStringMap(o ArrayInput, applier func(v []interface{}) (map[string]string, error)) StringMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArrayToStringArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArrayToStringMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArrayToStringMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArrayToStringArrayArray(o ArrayInput, applier func(v []interface{}) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyArrayToURN(o ArrayInput, applier func(v []interface{}) (URN, error)) URNOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArrayToURNPtr(o ArrayInput, applier func(v []interface{}) (*URN, error)) URNPtrOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArrayToURNArray(o ArrayInput, applier func(v []interface{}) ([]URN, error)) URNArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArrayToURNMap(o ArrayInput, applier func(v []interface{}) (map[string]URN, error)) URNMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArrayToURNArrayMap(o ArrayInput, applier func(v []interface{}) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArrayToURNMapArray(o ArrayInput, applier func(v []interface{}) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArrayToURNMapMap(o ArrayInput, applier func(v []interface{}) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArrayToURNArrayArray(o ArrayInput, applier func(v []interface{}) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyMapToArchive(o MapInput, applier func(v map[string]interface{}) (Archive, error)) ArchiveOutput {
	return o.ToMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyMapToArchiveArray(o MapInput, applier func(v map[string]interface{}) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyMapToArchiveMap(o MapInput, applier func(v map[string]interface{}) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyMapToArchiveArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyMapToArchiveMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyMapToArchiveMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyMapToArchiveArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyMapToAsset(o MapInput, applier func(v map[string]interface{}) (Asset, error)) AssetOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyMapToAssetArray(o MapInput, applier func(v map[string]interface{}) ([]Asset, error)) AssetArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyMapToAssetMap(o MapInput, applier func(v map[string]interface{}) (map[string]Asset, error)) AssetMapOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyMapToAssetArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyMapToAssetMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyMapToAssetMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyMapToAssetArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyMapToAssetOrArchive(o MapInput, applier func(v map[string]interface{}) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyMapToAssetOrArchiveArray(o MapInput, applier func(v map[string]interface{}) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyMapToAssetOrArchiveMap(o MapInput, applier func(v map[string]interface{}) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyMapToAssetOrArchiveArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyMapToAssetOrArchiveMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyMapToAssetOrArchiveMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyMapToAssetOrArchiveArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyMapToBool(o MapInput, applier func(v map[string]interface{}) (bool, error)) BoolOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyMapToBoolPtr(o MapInput, applier func(v map[string]interface{}) (*bool, error)) BoolPtrOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyMapToBoolArray(o MapInput, applier func(v map[string]interface{}) ([]bool, error)) BoolArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyMapToBoolMap(o MapInput, applier func(v map[string]interface{}) (map[string]bool, error)) BoolMapOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyMapToBoolArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyMapToBoolMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyMapToBoolMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyMapToBoolArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyMapToFloat64(o MapInput, applier func(v map[string]interface{}) (float64, error)) Float64Output {
	return o.ToMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyMapToFloat64Ptr(o MapInput, applier func(v map[string]interface{}) (*float64, error)) Float64PtrOutput {
	return o.ToMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyMapToFloat64Array(o MapInput, applier func(v map[string]interface{}) ([]float64, error)) Float64ArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyMapToFloat64Map(o MapInput, applier func(v map[string]interface{}) (map[string]float64, error)) Float64MapOutput {
	return o.ToMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyMapToFloat64ArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyMapToFloat64MapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyMapToFloat64MapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyMapToFloat64ArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyMapToID is like ApplyT, but returns a IDOutput.
func ApplyMapToID(o MapInput, applier func(v map[string]interface{}) (ID, error)) IDOutput {
	return o.ToMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyMapToIDPtr(o MapInput, applier func(v map[string]interface{}) (*ID, error)) IDPtrOutput {
	return o.ToMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyMapToIDArray(o MapInput, applier func(v map[string]interface{}) ([]ID, error)) IDArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyMapToIDMap(o MapInput, applier func(v map[string]interface{}) (map[string]ID, error)) IDMapOutput {
	return o.ToMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyMapToIDArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyMapToIDMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyMapToIDMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyMapToIDArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyMapToArray(o MapInput, applier func(v map[string]interface{}) ([]interface{}, error)) ArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyMapToMap is like ApplyT, but returns a MapOutput.
func ApplyMapToMap(o MapInput, applier func(v map[string]interface{}) (map[string]interface{}, error)) MapOutput {
	return o.ToMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyMapToArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyMapToMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyMapToMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyMapToArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyMapToInt is like ApplyT, but returns a IntOutput.
func ApplyMapToInt(o MapInput, applier func(v map[string]interface{}) (int, error)) IntOutput {
	return o.ToMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyMapToIntPtr(o MapInput, applier func(v map[string]interface{}) (*int, error)) IntPtrOutput {
	return o.ToMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyMapToIntArray(o MapInput, applier func(v map[string]interface{}) ([]int, error)) IntArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyMapToIntMap(o MapInput, applier func(v map[string]interface{}) (map[string]int, error)) IntMapOutput {
	return o.ToMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyMapToIntArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyMapToIntMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyMapToIntMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyMapToIntArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]int, error)) IntArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyMapToString is like ApplyT, but returns a StringOutput.
func ApplyMapToString(o MapInput, applier func(v map[string]interface{}) (string, error)) StringOutput {
	return o.ToMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyMapToStringPtr(o MapInput, applier func(v map[string]interface{}) (*string, error)) StringPtrOutput {
	return o.ToMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyMapToStringArray(o MapInput, applier func(v map[string]interface{}) ([]string, error)) StringArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyMapToStringMap(o MapInput, applier func(v map[string]interface{}) (map[string]string, error)) StringMapOutput {
	return o.ToMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyMapToStringArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyMapToStringMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyMapToStringMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyMapToStringArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]string, error)) StringArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyMapToURN is like ApplyT, but returns a URNOutput.
func ApplyMapToURN(o MapInput, applier func(v map[string]interface{}) (URN, error)) URNOutput {
	return o.ToMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyMapToURNPtr(o MapInput, applier func(v map[string]interface{}) (*URN, error)) URNPtrOutput {
	return o.ToMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyMapToURNArray(o MapInput, applier func(v map[string]interface{}) ([]URN, error)) URNArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyMapToURNMap(o MapInput, applier func(v map[string]interface{}) (map[string]URN, error)) URNMapOutput {
	return o.ToMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyMapToURNArrayMap(o MapInput, applier func(v map[string]interface{}) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyMapToURNMapArray(o MapInput, applier func(v map[string]interface{}) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyMapToURNMapMap(o MapInput, applier func(v map[string]interface{}) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyMapToURNArrayArray(o MapInput, applier func(v map[string]interface{}) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArrayMapToArchive(o ArrayMapInput, applier func(v map[string][]interface{}) (Archive, error)) ArchiveOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArrayMapToArchiveArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArrayMapToArchiveMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArrayMapToArchiveArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArrayMapToArchiveMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArrayMapToArchiveMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArrayMapToArchiveArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArrayMapToAsset(o ArrayMapInput, applier func(v map[string][]interface{}) (Asset, error)) AssetOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArrayMapToAssetArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]Asset, error)) AssetArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArrayMapToAssetMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArrayMapToAssetArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArrayMapToAssetMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArrayMapToAssetMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArrayMapToAssetArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArrayMapToAssetOrArchive(o ArrayMapInput, applier func(v map[string][]interface{}) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArrayMapToAssetOrArchiveArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArrayMapToAssetOrArchiveMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArrayMapToAssetOrArchiveArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArrayMapToAssetOrArchiveMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArrayMapToAssetOrArchiveMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArrayMapToAssetOrArchiveArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyArrayMapToBool(o ArrayMapInput, applier func(v map[string][]interface{}) (bool, error)) BoolOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArrayMapToBoolPtr(o ArrayMapInput, applier func(v map[string][]interface{}) (*bool, error)) BoolPtrOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArrayMapToBoolArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]bool, error)) BoolArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArrayMapToBoolMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]bool, error)) BoolMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArrayMapToBoolArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArrayMapToBoolMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArrayMapToBoolMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArrayMapToBoolArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArrayMapToFloat64(o ArrayMapInput, applier func(v map[string][]interface{}) (float64, error)) Float64Output {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArrayMapToFloat64Ptr(o ArrayMapInput, applier func(v map[string][]interface{}) (*float64, error)) Float64PtrOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArrayMapToFloat64Array(o ArrayMapInput, applier func(v map[string][]interface{}) ([]float64, error)) Float64ArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArrayMapToFloat64Map(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]float64, error)) Float64MapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArrayMapToFloat64ArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArrayMapToFloat64MapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArrayMapToFloat64MapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArrayMapToFloat64ArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyArrayMapToID(o ArrayMapInput, applier func(v map[string][]interface{}) (ID, error)) IDOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArrayMapToIDPtr(o ArrayMapInput, applier func(v map[string][]interface{}) (*ID, error)) IDPtrOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArrayMapToIDArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]ID, error)) IDArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArrayMapToIDMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]ID, error)) IDMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArrayMapToIDArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArrayMapToIDMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArrayMapToIDMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArrayMapToIDArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArrayMapToArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]interface{}, error)) ArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyArrayMapToMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]interface{}, error)) MapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArrayMapToArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArrayMapToMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArrayMapToMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArrayMapToArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyArrayMapToInt(o ArrayMapInput, applier func(v map[string][]interface{}) (int, error)) IntOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArrayMapToIntPtr(o ArrayMapInput, applier func(v map[string][]interface{}) (*int, error)) IntPtrOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArrayMapToIntArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]int, error)) IntArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArrayMapToIntMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]int, error)) IntMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArrayMapToIntArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArrayMapToIntMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArrayMapToIntMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArrayMapToIntArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyArrayMapToString(o ArrayMapInput, applier func(v map[string][]interface{}) (string, error)) StringOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArrayMapToStringPtr(o ArrayMapInput, applier func(v map[string][]interface{}) (*string, error)) StringPtrOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArrayMapToStringArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]string, error)) StringArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArrayMapToStringMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]string, error)) StringMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArrayMapToStringArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArrayMapToStringMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArrayMapToStringMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArrayMapToStringArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyArrayMapToURN(o ArrayMapInput, applier func(v map[string][]interface{}) (URN, error)) URNOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArrayMapToURNPtr(o ArrayMapInput, applier func(v map[string][]interface{}) (*URN, error)) URNPtrOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArrayMapToURNArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]URN, error)) URNArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArrayMapToURNMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]URN, error)) URNMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArrayMapToURNArrayMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArrayMapToURNMapArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArrayMapToURNMapMap(o ArrayMapInput, applier func(v map[string][]interface{}) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArrayMapToURNArrayArray(o ArrayMapInput, applier func(v map[string][]interface{}) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyMapArrayToArchive(o MapArrayInput, applier func(v []map[string]interface{}) (Archive, error)) ArchiveOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyMapArrayToArchiveArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyMapArrayToArchiveMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyMapArrayToArchiveArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyMapArrayToArchiveMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyMapArrayToArchiveMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyMapArrayToArchiveArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyMapArrayToAsset(o MapArrayInput, applier func(v []map[string]interface{}) (Asset, error)) AssetOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyMapArrayToAssetArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]Asset, error)) AssetArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyMapArrayToAssetMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]Asset, error)) AssetMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyMapArrayToAssetArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyMapArrayToAssetMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyMapArrayToAssetMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyMapArrayToAssetArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyMapArrayToAssetOrArchive(o MapArrayInput, applier func(v []map[string]interface{}) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyMapArrayToAssetOrArchiveArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyMapArrayToAssetOrArchiveMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyMapArrayToAssetOrArchiveArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyMapArrayToAssetOrArchiveMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyMapArrayToAssetOrArchiveMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyMapArrayToAssetOrArchiveArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyMapArrayToBool(o MapArrayInput, applier func(v []map[string]interface{}) (bool, error)) BoolOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyMapArrayToBoolPtr(o MapArrayInput, applier func(v []map[string]interface{}) (*bool, error)) BoolPtrOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyMapArrayToBoolArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]bool, error)) BoolArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyMapArrayToBoolMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]bool, error)) BoolMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyMapArrayToBoolArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyMapArrayToBoolMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyMapArrayToBoolMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyMapArrayToBoolArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyMapArrayToFloat64(o MapArrayInput, applier func(v []map[string]interface{}) (float64, error)) Float64Output {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyMapArrayToFloat64Ptr(o MapArrayInput, applier func(v []map[string]interface{}) (*float64, error)) Float64PtrOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyMapArrayToFloat64Array(o MapArrayInput, applier func(v []map[string]interface{}) ([]float64, error)) Float64ArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyMapArrayToFloat64Map(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]float64, error)) Float64MapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyMapArrayToFloat64ArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyMapArrayToFloat64MapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyMapArrayToFloat64MapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyMapArrayToFloat64ArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyMapArrayToID(o MapArrayInput, applier func(v []map[string]interface{}) (ID, error)) IDOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyMapArrayToIDPtr(o MapArrayInput, applier func(v []map[string]interface{}) (*ID, error)) IDPtrOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyMapArrayToIDArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]ID, error)) IDArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyMapArrayToIDMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]ID, error)) IDMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyMapArrayToIDArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyMapArrayToIDMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyMapArrayToIDMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyMapArrayToIDArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyMapArrayToArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]interface{}, error)) ArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyMapArrayToMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]interface{}, error)) MapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyMapArrayToArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyMapArrayToMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyMapArrayToMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyMapArrayToArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyMapArrayToInt(o MapArrayInput, applier func(v []map[string]interface{}) (int, error)) IntOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyMapArrayToIntPtr(o MapArrayInput, applier func(v []map[string]interface{}) (*int, error)) IntPtrOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyMapArrayToIntArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]int, error)) IntArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyMapArrayToIntMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]int, error)) IntMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyMapArrayToIntArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyMapArrayToIntMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyMapArrayToIntMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyMapArrayToIntArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]int, error)) IntArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyMapArrayToString(o MapArrayInput, applier func(v []map[string]interface{}) (string, error)) StringOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyMapArrayToStringPtr(o MapArrayInput, applier func(v []map[string]interface{}) (*string, error)) StringPtrOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyMapArrayToStringArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]string, error)) StringArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyMapArrayToStringMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]string, error)) StringMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyMapArrayToStringArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyMapArrayToStringMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyMapArrayToStringMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyMapArrayToStringArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]string, error)) StringArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyMapArrayToURN(o MapArrayInput, applier func(v []map[string]interface{}) (URN, error)) URNOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyMapArrayToURNPtr(o MapArrayInput, applier func(v []map[string]interface{}) (*URN, error)) URNPtrOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyMapArrayToURNArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]URN, error)) URNArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyMapArrayToURNMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]URN, error)) URNMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyMapArrayToURNArrayMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyMapArrayToURNMapArray(o MapArrayInput, applier func(v []map[string]interface{}) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyMapArrayToURNMapMap(o MapArrayInput, applier func(v []map[string]interface{}) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyMapArrayToURNArrayArray(o MapArrayInput, applier func(v []map[string]interface{}) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyMapMapToArchive(o MapMapInput, applier func(v map[string]map[string]interface{}) (Archive, error)) ArchiveOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyMapMapToArchiveArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyMapMapToArchiveMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyMapMapToArchiveArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyMapMapToArchiveMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyMapMapToArchiveMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyMapMapToArchiveArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyMapMapToAsset(o MapMapInput, applier func(v map[string]map[string]interface{}) (Asset, error)) AssetOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyMapMapToAssetArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]Asset, error)) AssetArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyMapMapToAssetMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]Asset, error)) AssetMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyMapMapToAssetArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyMapMapToAssetMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyMapMapToAssetMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyMapMapToAssetArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyMapMapToAssetOrArchive(o MapMapInput, applier func(v map[string]map[string]interface{}) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyMapMapToAssetOrArchiveArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyMapMapToAssetOrArchiveMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyMapMapToAssetOrArchiveArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyMapMapToAssetOrArchiveMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyMapMapToAssetOrArchiveMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyMapMapToAssetOrArchiveArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyMapMapToBool(o MapMapInput, applier func(v map[string]map[string]interface{}) (bool, error)) BoolOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyMapMapToBoolPtr(o MapMapInput, applier func(v map[string]map[string]interface{}) (*bool, error)) BoolPtrOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyMapMapToBoolArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]bool, error)) BoolArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyMapMapToBoolMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]bool, error)) BoolMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyMapMapToBoolArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyMapMapToBoolMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyMapMapToBoolMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyMapMapToBoolArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyMapMapToFloat64(o MapMapInput, applier func(v map[string]map[string]interface{}) (float64, error)) Float64Output {
	return o.ToMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyMapMapToFloat64Ptr(o MapMapInput, applier func(v map[string]map[string]interface{}) (*float64, error)) Float64PtrOutput {
	return o.ToMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyMapMapToFloat64Array(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]float64, error)) Float64ArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyMapMapToFloat64Map(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]float64, error)) Float64MapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyMapMapToFloat64ArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyMapMapToFloat64MapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyMapMapToFloat64MapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyMapMapToFloat64ArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyMapMapToID(o MapMapInput, applier func(v map[string]map[string]interface{}) (ID, error)) IDOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyMapMapToIDPtr(o MapMapInput, applier func(v map[string]map[string]interface{}) (*ID, error)) IDPtrOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyMapMapToIDArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]ID, error)) IDArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyMapMapToIDMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]ID, error)) IDMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyMapMapToIDArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyMapMapToIDMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyMapMapToIDMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyMapMapToIDArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyMapMapToArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]interface{}, error)) ArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyMapMapToMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]interface{}, error)) MapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyMapMapToArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyMapMapToMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyMapMapToMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyMapMapToArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyMapMapToInt(o MapMapInput, applier func(v map[string]map[string]interface{}) (int, error)) IntOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyMapMapToIntPtr(o MapMapInput, applier func(v map[string]map[string]interface{}) (*int, error)) IntPtrOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyMapMapToIntArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]int, error)) IntArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyMapMapToIntMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]int, error)) IntMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyMapMapToIntArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyMapMapToIntMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyMapMapToIntMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyMapMapToIntArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]int, error)) IntArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyMapMapToString(o MapMapInput, applier func(v map[string]map[string]interface{}) (string, error)) StringOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyMapMapToStringPtr(o MapMapInput, applier func(v map[string]map[string]interface{}) (*string, error)) StringPtrOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyMapMapToStringArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]string, error)) StringArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyMapMapToStringMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]string, error)) StringMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyMapMapToStringArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyMapMapToStringMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyMapMapToStringMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyMapMapToStringArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]string, error)) StringArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyMapMapToURN(o MapMapInput, applier func(v map[string]map[string]interface{}) (URN, error)) URNOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyMapMapToURNPtr(o MapMapInput, applier func(v map[string]map[string]interface{}) (*URN, error)) URNPtrOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyMapMapToURNArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]URN, error)) URNArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyMapMapToURNMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]URN, error)) URNMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyMapMapToURNArrayMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyMapMapToURNMapArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyMapMapToURNMapMap(o MapMapInput, applier func(v map[string]map[string]interface{}) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyMapMapToURNArrayArray(o MapMapInput, applier func(v map[string]map[string]interface{}) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyArrayArrayToArchive(o ArrayArrayInput, applier func(v [][]interface{}) (Archive, error)) ArchiveOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyArrayArrayToArchiveArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyArrayArrayToArchiveMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyArrayArrayToArchiveArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyArrayArrayToArchiveMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyArrayArrayToArchiveMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyArrayArrayToArchiveArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyArrayArrayToAsset(o ArrayArrayInput, applier func(v [][]interface{}) (Asset, error)) AssetOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyArrayArrayToAssetArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]Asset, error)) AssetArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyArrayArrayToAssetMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]Asset, error)) AssetMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyArrayArrayToAssetArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyArrayArrayToAssetMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyArrayArrayToAssetMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyArrayArrayToAssetArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyArrayArrayToAssetOrArchive(o ArrayArrayInput, applier func(v [][]interface{}) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyArrayArrayToAssetOrArchiveArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyArrayArrayToAssetOrArchiveMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyArrayArrayToAssetOrArchiveArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyArrayArrayToAssetOrArchiveMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyArrayArrayToAssetOrArchiveMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyArrayArrayToAssetOrArchiveArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyArrayArrayToBool(o ArrayArrayInput, applier func(v [][]interface{}) (bool, error)) BoolOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyArrayArrayToBoolPtr(o ArrayArrayInput, applier func(v [][]interface{}) (*bool, error)) BoolPtrOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyArrayArrayToBoolArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]bool, error)) BoolArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyArrayArrayToBoolMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]bool, error)) BoolMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyArrayArrayToBoolArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyArrayArrayToBoolMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyArrayArrayToBoolMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyArrayArrayToBoolArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyArrayArrayToFloat64(o ArrayArrayInput, applier func(v [][]interface{}) (float64, error)) Float64Output {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyArrayArrayToFloat64Ptr(o ArrayArrayInput, applier func(v [][]interface{}) (*float64, error)) Float64PtrOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyArrayArrayToFloat64Array(o ArrayArrayInput, applier func(v [][]interface{}) ([]float64, error)) Float64ArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyArrayArrayToFloat64Map(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]float64, error)) Float64MapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyArrayArrayToFloat64ArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyArrayArrayToFloat64MapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyArrayArrayToFloat64MapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyArrayArrayToFloat64ArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyArrayArrayToID(o ArrayArrayInput, applier func(v [][]interface{}) (ID, error)) IDOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyArrayArrayToIDPtr(o ArrayArrayInput, applier func(v [][]interface{}) (*ID, error)) IDPtrOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyArrayArrayToIDArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]ID, error)) IDArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyArrayArrayToIDMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]ID, error)) IDMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyArrayArrayToIDArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyArrayArrayToIDMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyArrayArrayToIDMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyArrayArrayToIDArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyArrayArrayToArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]interface{}, error)) ArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyArrayArrayToMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]interface{}, error)) MapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyArrayArrayToArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyArrayArrayToMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyArrayArrayToMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyArrayArrayToArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyArrayArrayToInt(o ArrayArrayInput, applier func(v [][]interface{}) (int, error)) IntOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyArrayArrayToIntPtr(o ArrayArrayInput, applier func(v [][]interface{}) (*int, error)) IntPtrOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyArrayArrayToIntArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]int, error)) IntArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyArrayArrayToIntMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]int, error)) IntMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyArrayArrayToIntArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyArrayArrayToIntMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyArrayArrayToIntMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyArrayArrayToIntArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]int, error)) IntArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyArrayArrayToString(o ArrayArrayInput, applier func(v [][]interface{}) (string, error)) StringOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyArrayArrayToStringPtr(o ArrayArrayInput, applier func(v [][]interface{}) (*string, error)) StringPtrOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyArrayArrayToStringArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]string, error)) StringArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyArrayArrayToStringMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]string, error)) StringMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyArrayArrayToStringArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyArrayArrayToStringMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyArrayArrayToStringMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyArrayArrayToStringArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]string, error)) StringArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyArrayArrayToURN(o ArrayArrayInput, applier func(v [][]interface{}) (URN, error)) URNOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyArrayArrayToURNPtr(o ArrayArrayInput, applier func(v [][]interface{}) (*URN, error)) URNPtrOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyArrayArrayToURNArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]URN, error)) URNArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyArrayArrayToURNMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]URN, error)) URNMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyArrayArrayToURNArrayMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyArrayArrayToURNMapArray(o ArrayArrayInput, applier func(v [][]interface{}) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyArrayArrayToURNMapMap(o ArrayArrayInput, applier func(v [][]interface{}) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyArrayArrayToURNArrayArray(o ArrayArrayInput, applier func(v [][]interface{}) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntToArchive(o IntInput, applier func(v int) (Archive, error)) ArchiveOutput {
	return o.ToIntOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntToArchiveArray(o IntInput, applier func(v int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntToArchiveMap(o IntInput, applier func(v int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntToArchiveArrayMap(o IntInput, applier func(v int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntToArchiveMapArray(o IntInput, applier func(v int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntToArchiveMapMap(o IntInput, applier func(v int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntToArchiveArrayArray(o IntInput, applier func(v int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntToAsset(o IntInput, applier func(v int) (Asset, error)) AssetOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntToAssetArray(o IntInput, applier func(v int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntToAssetMap(o IntInput, applier func(v int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntToAssetArrayMap(o IntInput, applier func(v int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntToAssetMapArray(o IntInput, applier func(v int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntToAssetMapMap(o IntInput, applier func(v int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntToAssetArrayArray(o IntInput, applier func(v int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntToAssetOrArchive(o IntInput, applier func(v int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntToAssetOrArchiveArray(o IntInput, applier func(v int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntToAssetOrArchiveMap(o IntInput, applier func(v int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntToAssetOrArchiveArrayMap(o IntInput, applier func(v int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntToAssetOrArchiveMapArray(o IntInput, applier func(v int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntToAssetOrArchiveMapMap(o IntInput, applier func(v int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntToAssetOrArchiveArrayArray(o IntInput, applier func(v int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntToBool(o IntInput, applier func(v int) (bool, error)) BoolOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntToBoolPtr(o IntInput, applier func(v int) (*bool, error)) BoolPtrOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntToBoolArray(o IntInput, applier func(v int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntToBoolMap(o IntInput, applier func(v int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntToBoolArrayMap(o IntInput, applier func(v int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntToBoolMapArray(o IntInput, applier func(v int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntToBoolMapMap(o IntInput, applier func(v int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntToBoolArrayArray(o IntInput, applier func(v int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntToFloat64(o IntInput, applier func(v int) (float64, error)) Float64Output {
	return o.ToIntOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntToFloat64Ptr(o IntInput, applier func(v int) (*float64, error)) Float64PtrOutput {
	return o.ToIntOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntToFloat64Array(o IntInput, applier func(v int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntToFloat64Map(o IntInput, applier func(v int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntToFloat64ArrayMap(o IntInput, applier func(v int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntToFloat64MapArray(o IntInput, applier func(v int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntToFloat64MapMap(o IntInput, applier func(v int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntToFloat64ArrayArray(o IntInput, applier func(v int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntToID is like ApplyT, but returns a IDOutput.
func ApplyIntToID(o IntInput, applier func(v int) (ID, error)) IDOutput {
	return o.ToIntOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntToIDPtr(o IntInput, applier func(v int) (*ID, error)) IDPtrOutput {
	return o.ToIntOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntToIDArray(o IntInput, applier func(v int) ([]ID, error)) IDArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntToIDMap(o IntInput, applier func(v int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntToIDArrayMap(o IntInput, applier func(v int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntToIDMapArray(o IntInput, applier func(v int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntToIDMapMap(o IntInput, applier func(v int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntToIDArrayArray(o IntInput, applier func(v int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntToArray(o IntInput, applier func(v int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntToMap is like ApplyT, but returns a MapOutput.
func ApplyIntToMap(o IntInput, applier func(v int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntToArrayMap(o IntInput, applier func(v int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntToMapArray(o IntInput, applier func(v int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntToMapMap(o IntInput, applier func(v int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntToArrayArray(o IntInput, applier func(v int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntToInt is like ApplyT, but returns a IntOutput.
func ApplyIntToInt(o IntInput, applier func(v int) (int, error)) IntOutput {
	return o.ToIntOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntToIntPtr(o IntInput, applier func(v int) (*int, error)) IntPtrOutput {
	return o.ToIntOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntToIntArray(o IntInput, applier func(v int) ([]int, error)) IntArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntToIntMap(o IntInput, applier func(v int) (map[string]int, error)) IntMapOutput {
	return o.ToIntOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntToIntArrayMap(o IntInput, applier func(v int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntToIntMapArray(o IntInput, applier func(v int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntToIntMapMap(o IntInput, applier func(v int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntToIntArrayArray(o IntInput, applier func(v int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntToString is like ApplyT, but returns a StringOutput.
func ApplyIntToString(o IntInput, applier func(v int) (string, error)) StringOutput {
	return o.ToIntOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntToStringPtr(o IntInput, applier func(v int) (*string, error)) StringPtrOutput {
	return o.ToIntOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntToStringArray(o IntInput, applier func(v int) ([]string, error)) StringArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntToStringMap(o IntInput, applier func(v int) (map[string]string, error)) StringMapOutput {
	return o.ToIntOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntToStringArrayMap(o IntInput, applier func(v int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntToStringMapArray(o IntInput, applier func(v int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntToStringMapMap(o IntInput, applier func(v int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntToStringArrayArray(o IntInput, applier func(v int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntToURN is like ApplyT, but returns a URNOutput.
func ApplyIntToURN(o IntInput, applier func(v int) (URN, error)) URNOutput {
	return o.ToIntOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntToURNPtr(o IntInput, applier func(v int) (*URN, error)) URNPtrOutput {
	return o.ToIntOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntToURNArray(o IntInput, applier func(v int) ([]URN, error)) URNArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntToURNMap(o IntInput, applier func(v int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntToURNArrayMap(o IntInput, applier func(v int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntToURNMapArray(o IntInput, applier func(v int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntToURNMapMap(o IntInput, applier func(v int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntToURNArrayArray(o IntInput, applier func(v int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntPtrToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntPtrToArchive(o IntPtrInput, applier func(v *int) (Archive, error)) ArchiveOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntPtrToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntPtrToArchiveArray(o IntPtrInput, applier func(v *int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntPtrToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntPtrToArchiveMap(o IntPtrInput, applier func(v *int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntPtrToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntPtrToArchiveArrayMap(o IntPtrInput, applier func(v *int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntPtrToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntPtrToArchiveMapArray(o IntPtrInput, applier func(v *int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntPtrToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntPtrToArchiveMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntPtrToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntPtrToArchiveArrayArray(o IntPtrInput, applier func(v *int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntPtrToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntPtrToAsset(o IntPtrInput, applier func(v *int) (Asset, error)) AssetOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntPtrToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntPtrToAssetArray(o IntPtrInput, applier func(v *int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntPtrToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntPtrToAssetMap(o IntPtrInput, applier func(v *int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntPtrToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntPtrToAssetArrayMap(o IntPtrInput, applier func(v *int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntPtrToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntPtrToAssetMapArray(o IntPtrInput, applier func(v *int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntPtrToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntPtrToAssetMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntPtrToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntPtrToAssetArrayArray(o IntPtrInput, applier func(v *int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntPtrToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntPtrToAssetOrArchive(o IntPtrInput, applier func(v *int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntPtrToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntPtrToAssetOrArchiveArray(o IntPtrInput, applier func(v *int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntPtrToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntPtrToAssetOrArchiveMap(o IntPtrInput, applier func(v *int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntPtrToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntPtrToAssetOrArchiveArrayMap(o IntPtrInput, applier func(v *int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntPtrToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntPtrToAssetOrArchiveMapArray(o IntPtrInput, applier func(v *int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntPtrToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntPtrToAssetOrArchiveMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntPtrToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntPtrToAssetOrArchiveArrayArray(o IntPtrInput, applier func(v *int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntPtrToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntPtrToBool(o IntPtrInput, applier func(v *int) (bool, error)) BoolOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntPtrToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntPtrToBoolPtr(o IntPtrInput, applier func(v *int) (*bool, error)) BoolPtrOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntPtrToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntPtrToBoolArray(o IntPtrInput, applier func(v *int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntPtrToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntPtrToBoolMap(o IntPtrInput, applier func(v *int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntPtrToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntPtrToBoolArrayMap(o IntPtrInput, applier func(v *int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntPtrToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntPtrToBoolMapArray(o IntPtrInput, applier func(v *int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntPtrToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntPtrToBoolMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntPtrToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntPtrToBoolArrayArray(o IntPtrInput, applier func(v *int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntPtrToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntPtrToFloat64(o IntPtrInput, applier func(v *int) (float64, error)) Float64Output {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntPtrToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntPtrToFloat64Ptr(o IntPtrInput, applier func(v *int) (*float64, error)) Float64PtrOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntPtrToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntPtrToFloat64Array(o IntPtrInput, applier func(v *int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntPtrToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntPtrToFloat64Map(o IntPtrInput, applier func(v *int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntPtrToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntPtrToFloat64ArrayMap(o IntPtrInput, applier func(v *int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntPtrToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntPtrToFloat64MapArray(o IntPtrInput, applier func(v *int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntPtrToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntPtrToFloat64MapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntPtrToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntPtrToFloat64ArrayArray(o IntPtrInput, applier func(v *int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntPtrToID is like ApplyT, but returns a IDOutput.
func ApplyIntPtrToID(o IntPtrInput, applier func(v *int) (ID, error)) IDOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntPtrToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntPtrToIDPtr(o IntPtrInput, applier func(v *int) (*ID, error)) IDPtrOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntPtrToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntPtrToIDArray(o IntPtrInput, applier func(v *int) ([]ID, error)) IDArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntPtrToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntPtrToIDMap(o IntPtrInput, applier func(v *int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntPtrToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntPtrToIDArrayMap(o IntPtrInput, applier func(v *int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntPtrToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntPtrToIDMapArray(o IntPtrInput, applier func(v *int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntPtrToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntPtrToIDMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntPtrToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntPtrToIDArrayArray(o IntPtrInput, applier func(v *int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntPtrToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntPtrToArray(o IntPtrInput, applier func(v *int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntPtrToMap is like ApplyT, but returns a MapOutput.
func ApplyIntPtrToMap(o IntPtrInput, applier func(v *int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntPtrToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntPtrToArrayMap(o IntPtrInput, applier func(v *int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntPtrToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntPtrToMapArray(o IntPtrInput, applier func(v *int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntPtrToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntPtrToMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntPtrToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntPtrToArrayArray(o IntPtrInput, applier func(v *int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntPtrToInt is like ApplyT, but returns a IntOutput.
func ApplyIntPtrToInt(o IntPtrInput, applier func(v *int) (int, error)) IntOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntPtrToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntPtrToIntPtr(o IntPtrInput, applier func(v *int) (*int, error)) IntPtrOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntPtrToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntPtrToIntArray(o IntPtrInput, applier func(v *int) ([]int, error)) IntArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntPtrToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntPtrToIntMap(o IntPtrInput, applier func(v *int) (map[string]int, error)) IntMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntPtrToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntPtrToIntArrayMap(o IntPtrInput, applier func(v *int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntPtrToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntPtrToIntMapArray(o IntPtrInput, applier func(v *int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntPtrToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntPtrToIntMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntPtrToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntPtrToIntArrayArray(o IntPtrInput, applier func(v *int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntPtrToString is like ApplyT, but returns a StringOutput.
func ApplyIntPtrToString(o IntPtrInput, applier func(v *int) (string, error)) StringOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntPtrToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntPtrToStringPtr(o IntPtrInput, applier func(v *int) (*string, error)) StringPtrOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntPtrToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntPtrToStringArray(o IntPtrInput, applier func(v *int) ([]string, error)) StringArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntPtrToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntPtrToStringMap(o IntPtrInput, applier func(v *int) (map[string]string, error)) StringMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntPtrToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntPtrToStringArrayMap(o IntPtrInput, applier func(v *int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntPtrToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntPtrToStringMapArray(o IntPtrInput, applier func(v *int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntPtrToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntPtrToStringMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntPtrToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntPtrToStringArrayArray(o IntPtrInput, applier func(v *int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntPtrToURN is like ApplyT, but returns a URNOutput.
func ApplyIntPtrToURN(o IntPtrInput, applier func(v *int) (URN, error)) URNOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntPtrToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntPtrToURNPtr(o IntPtrInput, applier func(v *int) (*URN, error)) URNPtrOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntPtrToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntPtrToURNArray(o IntPtrInput, applier func(v *int) ([]URN, error)) URNArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntPtrToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntPtrToURNMap(o IntPtrInput, applier func(v *int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntPtrToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntPtrToURNArrayMap(o IntPtrInput, applier func(v *int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntPtrToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntPtrToURNMapArray(o IntPtrInput, applier func(v *int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntPtrToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntPtrToURNMapMap(o IntPtrInput, applier func(v *int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntPtrToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntPtrToURNArrayArray(o IntPtrInput, applier func(v *int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntPtrOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntArrayToArchive(o IntArrayInput, applier func(v []int) (Archive, error)) ArchiveOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntArrayToArchiveArray(o IntArrayInput, applier func(v []int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntArrayToArchiveMap(o IntArrayInput, applier func(v []int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntArrayToArchiveArrayMap(o IntArrayInput, applier func(v []int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntArrayToArchiveMapArray(o IntArrayInput, applier func(v []int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntArrayToArchiveMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntArrayToArchiveArrayArray(o IntArrayInput, applier func(v []int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntArrayToAsset(o IntArrayInput, applier func(v []int) (Asset, error)) AssetOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntArrayToAssetArray(o IntArrayInput, applier func(v []int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntArrayToAssetMap(o IntArrayInput, applier func(v []int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntArrayToAssetArrayMap(o IntArrayInput, applier func(v []int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntArrayToAssetMapArray(o IntArrayInput, applier func(v []int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntArrayToAssetMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntArrayToAssetArrayArray(o IntArrayInput, applier func(v []int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntArrayToAssetOrArchive(o IntArrayInput, applier func(v []int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntArrayToAssetOrArchiveArray(o IntArrayInput, applier func(v []int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntArrayToAssetOrArchiveMap(o IntArrayInput, applier func(v []int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntArrayToAssetOrArchiveArrayMap(o IntArrayInput, applier func(v []int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntArrayToAssetOrArchiveMapArray(o IntArrayInput, applier func(v []int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntArrayToAssetOrArchiveMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntArrayToAssetOrArchiveArrayArray(o IntArrayInput, applier func(v []int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntArrayToBool(o IntArrayInput, applier func(v []int) (bool, error)) BoolOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntArrayToBoolPtr(o IntArrayInput, applier func(v []int) (*bool, error)) BoolPtrOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntArrayToBoolArray(o IntArrayInput, applier func(v []int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntArrayToBoolMap(o IntArrayInput, applier func(v []int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntArrayToBoolArrayMap(o IntArrayInput, applier func(v []int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntArrayToBoolMapArray(o IntArrayInput, applier func(v []int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntArrayToBoolMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntArrayToBoolArrayArray(o IntArrayInput, applier func(v []int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntArrayToFloat64(o IntArrayInput, applier func(v []int) (float64, error)) Float64Output {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntArrayToFloat64Ptr(o IntArrayInput, applier func(v []int) (*float64, error)) Float64PtrOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntArrayToFloat64Array(o IntArrayInput, applier func(v []int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntArrayToFloat64Map(o IntArrayInput, applier func(v []int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntArrayToFloat64ArrayMap(o IntArrayInput, applier func(v []int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntArrayToFloat64MapArray(o IntArrayInput, applier func(v []int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntArrayToFloat64MapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntArrayToFloat64ArrayArray(o IntArrayInput, applier func(v []int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntArrayToID is like ApplyT, but returns a IDOutput.
func ApplyIntArrayToID(o IntArrayInput, applier func(v []int) (ID, error)) IDOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntArrayToIDPtr(o IntArrayInput, applier func(v []int) (*ID, error)) IDPtrOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntArrayToIDArray(o IntArrayInput, applier func(v []int) ([]ID, error)) IDArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntArrayToIDMap(o IntArrayInput, applier func(v []int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntArrayToIDArrayMap(o IntArrayInput, applier func(v []int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntArrayToIDMapArray(o IntArrayInput, applier func(v []int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntArrayToIDMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntArrayToIDArrayArray(o IntArrayInput, applier func(v []int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntArrayToArray(o IntArrayInput, applier func(v []int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyIntArrayToMap(o IntArrayInput, applier func(v []int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntArrayToArrayMap(o IntArrayInput, applier func(v []int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntArrayToMapArray(o IntArrayInput, applier func(v []int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntArrayToMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntArrayToArrayArray(o IntArrayInput, applier func(v []int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyIntArrayToInt(o IntArrayInput, applier func(v []int) (int, error)) IntOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntArrayToIntPtr(o IntArrayInput, applier func(v []int) (*int, error)) IntPtrOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntArrayToIntArray(o IntArrayInput, applier func(v []int) ([]int, error)) IntArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntArrayToIntMap(o IntArrayInput, applier func(v []int) (map[string]int, error)) IntMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntArrayToIntArrayMap(o IntArrayInput, applier func(v []int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntArrayToIntMapArray(o IntArrayInput, applier func(v []int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntArrayToIntMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntArrayToIntArrayArray(o IntArrayInput, applier func(v []int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntArrayToString is like ApplyT, but returns a StringOutput.
func ApplyIntArrayToString(o IntArrayInput, applier func(v []int) (string, error)) StringOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntArrayToStringPtr(o IntArrayInput, applier func(v []int) (*string, error)) StringPtrOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntArrayToStringArray(o IntArrayInput, applier func(v []int) ([]string, error)) StringArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntArrayToStringMap(o IntArrayInput, applier func(v []int) (map[string]string, error)) StringMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntArrayToStringArrayMap(o IntArrayInput, applier func(v []int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntArrayToStringMapArray(o IntArrayInput, applier func(v []int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntArrayToStringMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntArrayToStringArrayArray(o IntArrayInput, applier func(v []int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyIntArrayToURN(o IntArrayInput, applier func(v []int) (URN, error)) URNOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntArrayToURNPtr(o IntArrayInput, applier func(v []int) (*URN, error)) URNPtrOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntArrayToURNArray(o IntArrayInput, applier func(v []int) ([]URN, error)) URNArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntArrayToURNMap(o IntArrayInput, applier func(v []int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntArrayToURNArrayMap(o IntArrayInput, applier func(v []int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntArrayToURNMapArray(o IntArrayInput, applier func(v []int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntArrayToURNMapMap(o IntArrayInput, applier func(v []int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntArrayToURNArrayArray(o IntArrayInput, applier func(v []int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntMapToArchive(o IntMapInput, applier func(v map[string]int) (Archive, error)) ArchiveOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntMapToArchiveArray(o IntMapInput, applier func(v map[string]int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntMapToArchiveMap(o IntMapInput, applier func(v map[string]int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntMapToArchiveArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntMapToArchiveMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntMapToArchiveMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntMapToArchiveArrayArray(o IntMapInput, applier func(v map[string]int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntMapToAsset(o IntMapInput, applier func(v map[string]int) (Asset, error)) AssetOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntMapToAssetArray(o IntMapInput, applier func(v map[string]int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntMapToAssetMap(o IntMapInput, applier func(v map[string]int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntMapToAssetArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntMapToAssetMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntMapToAssetMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntMapToAssetArrayArray(o IntMapInput, applier func(v map[string]int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntMapToAssetOrArchive(o IntMapInput, applier func(v map[string]int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntMapToAssetOrArchiveArray(o IntMapInput, applier func(v map[string]int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntMapToAssetOrArchiveMap(o IntMapInput, applier func(v map[string]int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntMapToAssetOrArchiveArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntMapToAssetOrArchiveMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntMapToAssetOrArchiveMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntMapToAssetOrArchiveArrayArray(o IntMapInput, applier func(v map[string]int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntMapToBool(o IntMapInput, applier func(v map[string]int) (bool, error)) BoolOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntMapToBoolPtr(o IntMapInput, applier func(v map[string]int) (*bool, error)) BoolPtrOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntMapToBoolArray(o IntMapInput, applier func(v map[string]int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntMapToBoolMap(o IntMapInput, applier func(v map[string]int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntMapToBoolArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntMapToBoolMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntMapToBoolMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntMapToBoolArrayArray(o IntMapInput, applier func(v map[string]int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntMapToFloat64(o IntMapInput, applier func(v map[string]int) (float64, error)) Float64Output {
	return o.ToIntMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntMapToFloat64Ptr(o IntMapInput, applier func(v map[string]int) (*float64, error)) Float64PtrOutput {
	return o.ToIntMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntMapToFloat64Array(o IntMapInput, applier func(v map[string]int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntMapToFloat64Map(o IntMapInput, applier func(v map[string]int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntMapToFloat64ArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntMapToFloat64MapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntMapToFloat64MapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntMapToFloat64ArrayArray(o IntMapInput, applier func(v map[string]int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntMapToID is like ApplyT, but returns a IDOutput.
func ApplyIntMapToID(o IntMapInput, applier func(v map[string]int) (ID, error)) IDOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntMapToIDPtr(o IntMapInput, applier func(v map[string]int) (*ID, error)) IDPtrOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntMapToIDArray(o IntMapInput, applier func(v map[string]int) ([]ID, error)) IDArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntMapToIDMap(o IntMapInput, applier func(v map[string]int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntMapToIDArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntMapToIDMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntMapToIDMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntMapToIDArrayArray(o IntMapInput, applier func(v map[string]int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntMapToArray(o IntMapInput, applier func(v map[string]int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntMapToMap is like ApplyT, but returns a MapOutput.
func ApplyIntMapToMap(o IntMapInput, applier func(v map[string]int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntMapToArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntMapToMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntMapToMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntMapToArrayArray(o IntMapInput, applier func(v map[string]int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntMapToInt is like ApplyT, but returns a IntOutput.
func ApplyIntMapToInt(o IntMapInput, applier func(v map[string]int) (int, error)) IntOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntMapToIntPtr(o IntMapInput, applier func(v map[string]int) (*int, error)) IntPtrOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntMapToIntArray(o IntMapInput, applier func(v map[string]int) ([]int, error)) IntArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntMapToIntMap(o IntMapInput, applier func(v map[string]int) (map[string]int, error)) IntMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntMapToIntArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntMapToIntMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntMapToIntMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntMapToIntArrayArray(o IntMapInput, applier func(v map[string]int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntMapToString is like ApplyT, but returns a StringOutput.
func ApplyIntMapToString(o IntMapInput, applier func(v map[string]int) (string, error)) StringOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntMapToStringPtr(o IntMapInput, applier func(v map[string]int) (*string, error)) StringPtrOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntMapToStringArray(o IntMapInput, applier func(v map[string]int) ([]string, error)) StringArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntMapToStringMap(o IntMapInput, applier func(v map[string]int) (map[string]string, error)) StringMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntMapToStringArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntMapToStringMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntMapToStringMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntMapToStringArrayArray(o IntMapInput, applier func(v map[string]int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntMapToURN is like ApplyT, but returns a URNOutput.
func ApplyIntMapToURN(o IntMapInput, applier func(v map[string]int) (URN, error)) URNOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntMapToURNPtr(o IntMapInput, applier func(v map[string]int) (*URN, error)) URNPtrOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntMapToURNArray(o IntMapInput, applier func(v map[string]int) ([]URN, error)) URNArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntMapToURNMap(o IntMapInput, applier func(v map[string]int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntMapToURNArrayMap(o IntMapInput, applier func(v map[string]int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntMapToURNMapArray(o IntMapInput, applier func(v map[string]int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntMapToURNMapMap(o IntMapInput, applier func(v map[string]int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntMapToURNArrayArray(o IntMapInput, applier func(v map[string]int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntArrayMapToArchive(o IntArrayMapInput, applier func(v map[string][]int) (Archive, error)) ArchiveOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntArrayMapToArchiveArray(o IntArrayMapInput, applier func(v map[string][]int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntArrayMapToArchiveMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntArrayMapToArchiveArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntArrayMapToArchiveMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntArrayMapToArchiveMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntArrayMapToArchiveArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntArrayMapToAsset(o IntArrayMapInput, applier func(v map[string][]int) (Asset, error)) AssetOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntArrayMapToAssetArray(o IntArrayMapInput, applier func(v map[string][]int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntArrayMapToAssetMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntArrayMapToAssetArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntArrayMapToAssetMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntArrayMapToAssetMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntArrayMapToAssetArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntArrayMapToAssetOrArchive(o IntArrayMapInput, applier func(v map[string][]int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntArrayMapToAssetOrArchiveArray(o IntArrayMapInput, applier func(v map[string][]int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntArrayMapToAssetOrArchiveMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntArrayMapToAssetOrArchiveArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntArrayMapToAssetOrArchiveMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntArrayMapToAssetOrArchiveMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntArrayMapToAssetOrArchiveArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntArrayMapToBool(o IntArrayMapInput, applier func(v map[string][]int) (bool, error)) BoolOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntArrayMapToBoolPtr(o IntArrayMapInput, applier func(v map[string][]int) (*bool, error)) BoolPtrOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntArrayMapToBoolArray(o IntArrayMapInput, applier func(v map[string][]int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntArrayMapToBoolMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntArrayMapToBoolArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntArrayMapToBoolMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntArrayMapToBoolMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntArrayMapToBoolArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntArrayMapToFloat64(o IntArrayMapInput, applier func(v map[string][]int) (float64, error)) Float64Output {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntArrayMapToFloat64Ptr(o IntArrayMapInput, applier func(v map[string][]int) (*float64, error)) Float64PtrOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntArrayMapToFloat64Array(o IntArrayMapInput, applier func(v map[string][]int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntArrayMapToFloat64Map(o IntArrayMapInput, applier func(v map[string][]int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntArrayMapToFloat64ArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntArrayMapToFloat64MapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntArrayMapToFloat64MapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntArrayMapToFloat64ArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyIntArrayMapToID(o IntArrayMapInput, applier func(v map[string][]int) (ID, error)) IDOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntArrayMapToIDPtr(o IntArrayMapInput, applier func(v map[string][]int) (*ID, error)) IDPtrOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntArrayMapToIDArray(o IntArrayMapInput, applier func(v map[string][]int) ([]ID, error)) IDArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntArrayMapToIDMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntArrayMapToIDArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntArrayMapToIDMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntArrayMapToIDMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntArrayMapToIDArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntArrayMapToArray(o IntArrayMapInput, applier func(v map[string][]int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyIntArrayMapToMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntArrayMapToArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntArrayMapToMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntArrayMapToMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntArrayMapToArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyIntArrayMapToInt(o IntArrayMapInput, applier func(v map[string][]int) (int, error)) IntOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntArrayMapToIntPtr(o IntArrayMapInput, applier func(v map[string][]int) (*int, error)) IntPtrOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntArrayMapToIntArray(o IntArrayMapInput, applier func(v map[string][]int) ([]int, error)) IntArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntArrayMapToIntMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]int, error)) IntMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntArrayMapToIntArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntArrayMapToIntMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntArrayMapToIntMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntArrayMapToIntArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyIntArrayMapToString(o IntArrayMapInput, applier func(v map[string][]int) (string, error)) StringOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntArrayMapToStringPtr(o IntArrayMapInput, applier func(v map[string][]int) (*string, error)) StringPtrOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntArrayMapToStringArray(o IntArrayMapInput, applier func(v map[string][]int) ([]string, error)) StringArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntArrayMapToStringMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]string, error)) StringMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntArrayMapToStringArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntArrayMapToStringMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntArrayMapToStringMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntArrayMapToStringArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyIntArrayMapToURN(o IntArrayMapInput, applier func(v map[string][]int) (URN, error)) URNOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntArrayMapToURNPtr(o IntArrayMapInput, applier func(v map[string][]int) (*URN, error)) URNPtrOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntArrayMapToURNArray(o IntArrayMapInput, applier func(v map[string][]int) ([]URN, error)) URNArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntArrayMapToURNMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntArrayMapToURNArrayMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntArrayMapToURNMapArray(o IntArrayMapInput, applier func(v map[string][]int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntArrayMapToURNMapMap(o IntArrayMapInput, applier func(v map[string][]int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntArrayMapToURNArrayArray(o IntArrayMapInput, applier func(v map[string][]int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntMapArrayToArchive(o IntMapArrayInput, applier func(v []map[string]int) (Archive, error)) ArchiveOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntMapArrayToArchiveArray(o IntMapArrayInput, applier func(v []map[string]int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntMapArrayToArchiveMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntMapArrayToArchiveArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntMapArrayToArchiveMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntMapArrayToArchiveMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntMapArrayToArchiveArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntMapArrayToAsset(o IntMapArrayInput, applier func(v []map[string]int) (Asset, error)) AssetOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntMapArrayToAssetArray(o IntMapArrayInput, applier func(v []map[string]int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntMapArrayToAssetMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntMapArrayToAssetArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntMapArrayToAssetMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntMapArrayToAssetMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntMapArrayToAssetArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntMapArrayToAssetOrArchive(o IntMapArrayInput, applier func(v []map[string]int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntMapArrayToAssetOrArchiveArray(o IntMapArrayInput, applier func(v []map[string]int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntMapArrayToAssetOrArchiveMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntMapArrayToAssetOrArchiveArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntMapArrayToAssetOrArchiveMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntMapArrayToAssetOrArchiveMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntMapArrayToAssetOrArchiveArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntMapArrayToBool(o IntMapArrayInput, applier func(v []map[string]int) (bool, error)) BoolOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntMapArrayToBoolPtr(o IntMapArrayInput, applier func(v []map[string]int) (*bool, error)) BoolPtrOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntMapArrayToBoolArray(o IntMapArrayInput, applier func(v []map[string]int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntMapArrayToBoolMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntMapArrayToBoolArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntMapArrayToBoolMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntMapArrayToBoolMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntMapArrayToBoolArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntMapArrayToFloat64(o IntMapArrayInput, applier func(v []map[string]int) (float64, error)) Float64Output {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntMapArrayToFloat64Ptr(o IntMapArrayInput, applier func(v []map[string]int) (*float64, error)) Float64PtrOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntMapArrayToFloat64Array(o IntMapArrayInput, applier func(v []map[string]int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntMapArrayToFloat64Map(o IntMapArrayInput, applier func(v []map[string]int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntMapArrayToFloat64ArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntMapArrayToFloat64MapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntMapArrayToFloat64MapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntMapArrayToFloat64ArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyIntMapArrayToID(o IntMapArrayInput, applier func(v []map[string]int) (ID, error)) IDOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntMapArrayToIDPtr(o IntMapArrayInput, applier func(v []map[string]int) (*ID, error)) IDPtrOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntMapArrayToIDArray(o IntMapArrayInput, applier func(v []map[string]int) ([]ID, error)) IDArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntMapArrayToIDMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntMapArrayToIDArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntMapArrayToIDMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntMapArrayToIDMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntMapArrayToIDArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntMapArrayToArray(o IntMapArrayInput, applier func(v []map[string]int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyIntMapArrayToMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntMapArrayToArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntMapArrayToMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntMapArrayToMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntMapArrayToArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyIntMapArrayToInt(o IntMapArrayInput, applier func(v []map[string]int) (int, error)) IntOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntMapArrayToIntPtr(o IntMapArrayInput, applier func(v []map[string]int) (*int, error)) IntPtrOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntMapArrayToIntArray(o IntMapArrayInput, applier func(v []map[string]int) ([]int, error)) IntArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntMapArrayToIntMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]int, error)) IntMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntMapArrayToIntArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntMapArrayToIntMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntMapArrayToIntMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntMapArrayToIntArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyIntMapArrayToString(o IntMapArrayInput, applier func(v []map[string]int) (string, error)) StringOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntMapArrayToStringPtr(o IntMapArrayInput, applier func(v []map[string]int) (*string, error)) StringPtrOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntMapArrayToStringArray(o IntMapArrayInput, applier func(v []map[string]int) ([]string, error)) StringArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntMapArrayToStringMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]string, error)) StringMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntMapArrayToStringArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntMapArrayToStringMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntMapArrayToStringMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntMapArrayToStringArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyIntMapArrayToURN(o IntMapArrayInput, applier func(v []map[string]int) (URN, error)) URNOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntMapArrayToURNPtr(o IntMapArrayInput, applier func(v []map[string]int) (*URN, error)) URNPtrOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntMapArrayToURNArray(o IntMapArrayInput, applier func(v []map[string]int) ([]URN, error)) URNArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntMapArrayToURNMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntMapArrayToURNArrayMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntMapArrayToURNMapArray(o IntMapArrayInput, applier func(v []map[string]int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntMapArrayToURNMapMap(o IntMapArrayInput, applier func(v []map[string]int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntMapArrayToURNArrayArray(o IntMapArrayInput, applier func(v []map[string]int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntMapMapToArchive(o IntMapMapInput, applier func(v map[string]map[string]int) (Archive, error)) ArchiveOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntMapMapToArchiveArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntMapMapToArchiveMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntMapMapToArchiveArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntMapMapToArchiveMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntMapMapToArchiveMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntMapMapToArchiveArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntMapMapToAsset(o IntMapMapInput, applier func(v map[string]map[string]int) (Asset, error)) AssetOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntMapMapToAssetArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntMapMapToAssetMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntMapMapToAssetArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntMapMapToAssetMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntMapMapToAssetMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntMapMapToAssetArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntMapMapToAssetOrArchive(o IntMapMapInput, applier func(v map[string]map[string]int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntMapMapToAssetOrArchiveArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntMapMapToAssetOrArchiveMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntMapMapToAssetOrArchiveArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntMapMapToAssetOrArchiveMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntMapMapToAssetOrArchiveMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntMapMapToAssetOrArchiveArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntMapMapToBool(o IntMapMapInput, applier func(v map[string]map[string]int) (bool, error)) BoolOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntMapMapToBoolPtr(o IntMapMapInput, applier func(v map[string]map[string]int) (*bool, error)) BoolPtrOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntMapMapToBoolArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntMapMapToBoolMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntMapMapToBoolArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntMapMapToBoolMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntMapMapToBoolMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntMapMapToBoolArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntMapMapToFloat64(o IntMapMapInput, applier func(v map[string]map[string]int) (float64, error)) Float64Output {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntMapMapToFloat64Ptr(o IntMapMapInput, applier func(v map[string]map[string]int) (*float64, error)) Float64PtrOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntMapMapToFloat64Array(o IntMapMapInput, applier func(v map[string]map[string]int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntMapMapToFloat64Map(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntMapMapToFloat64ArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntMapMapToFloat64MapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntMapMapToFloat64MapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntMapMapToFloat64ArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyIntMapMapToID(o IntMapMapInput, applier func(v map[string]map[string]int) (ID, error)) IDOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntMapMapToIDPtr(o IntMapMapInput, applier func(v map[string]map[string]int) (*ID, error)) IDPtrOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntMapMapToIDArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]ID, error)) IDArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntMapMapToIDMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntMapMapToIDArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntMapMapToIDMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntMapMapToIDMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntMapMapToIDArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntMapMapToArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyIntMapMapToMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntMapMapToArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntMapMapToMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntMapMapToMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntMapMapToArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyIntMapMapToInt(o IntMapMapInput, applier func(v map[string]map[string]int) (int, error)) IntOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntMapMapToIntPtr(o IntMapMapInput, applier func(v map[string]map[string]int) (*int, error)) IntPtrOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntMapMapToIntArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]int, error)) IntArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntMapMapToIntMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]int, error)) IntMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntMapMapToIntArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntMapMapToIntMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntMapMapToIntMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntMapMapToIntArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyIntMapMapToString(o IntMapMapInput, applier func(v map[string]map[string]int) (string, error)) StringOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntMapMapToStringPtr(o IntMapMapInput, applier func(v map[string]map[string]int) (*string, error)) StringPtrOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntMapMapToStringArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]string, error)) StringArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntMapMapToStringMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]string, error)) StringMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntMapMapToStringArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntMapMapToStringMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntMapMapToStringMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntMapMapToStringArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyIntMapMapToURN(o IntMapMapInput, applier func(v map[string]map[string]int) (URN, error)) URNOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntMapMapToURNPtr(o IntMapMapInput, applier func(v map[string]map[string]int) (*URN, error)) URNPtrOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntMapMapToURNArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]URN, error)) URNArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntMapMapToURNMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntMapMapToURNArrayMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntMapMapToURNMapArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntMapMapToURNMapMap(o IntMapMapInput, applier func(v map[string]map[string]int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntMapMapToURNArrayArray(o IntMapMapInput, applier func(v map[string]map[string]int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyIntArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyIntArrayArrayToArchive(o IntArrayArrayInput, applier func(v [][]int) (Archive, error)) ArchiveOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyIntArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyIntArrayArrayToArchiveArray(o IntArrayArrayInput, applier func(v [][]int) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyIntArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyIntArrayArrayToArchiveMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyIntArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyIntArrayArrayToArchiveArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyIntArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyIntArrayArrayToArchiveMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyIntArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyIntArrayArrayToArchiveMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyIntArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyIntArrayArrayToArchiveArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyIntArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyIntArrayArrayToAsset(o IntArrayArrayInput, applier func(v [][]int) (Asset, error)) AssetOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyIntArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyIntArrayArrayToAssetArray(o IntArrayArrayInput, applier func(v [][]int) ([]Asset, error)) AssetArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyIntArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyIntArrayArrayToAssetMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]Asset, error)) AssetMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyIntArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyIntArrayArrayToAssetArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyIntArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyIntArrayArrayToAssetMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyIntArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyIntArrayArrayToAssetMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyIntArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyIntArrayArrayToAssetArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyIntArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyIntArrayArrayToAssetOrArchive(o IntArrayArrayInput, applier func(v [][]int) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyIntArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyIntArrayArrayToAssetOrArchiveArray(o IntArrayArrayInput, applier func(v [][]int) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyIntArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyIntArrayArrayToAssetOrArchiveMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyIntArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyIntArrayArrayToAssetOrArchiveArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyIntArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyIntArrayArrayToAssetOrArchiveMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyIntArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyIntArrayArrayToAssetOrArchiveMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyIntArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyIntArrayArrayToAssetOrArchiveArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyIntArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyIntArrayArrayToBool(o IntArrayArrayInput, applier func(v [][]int) (bool, error)) BoolOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyIntArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyIntArrayArrayToBoolPtr(o IntArrayArrayInput, applier func(v [][]int) (*bool, error)) BoolPtrOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyIntArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyIntArrayArrayToBoolArray(o IntArrayArrayInput, applier func(v [][]int) ([]bool, error)) BoolArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyIntArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyIntArrayArrayToBoolMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]bool, error)) BoolMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyIntArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyIntArrayArrayToBoolArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyIntArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyIntArrayArrayToBoolMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyIntArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyIntArrayArrayToBoolMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyIntArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyIntArrayArrayToBoolArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyIntArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyIntArrayArrayToFloat64(o IntArrayArrayInput, applier func(v [][]int) (float64, error)) Float64Output {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyIntArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyIntArrayArrayToFloat64Ptr(o IntArrayArrayInput, applier func(v [][]int) (*float64, error)) Float64PtrOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyIntArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyIntArrayArrayToFloat64Array(o IntArrayArrayInput, applier func(v [][]int) ([]float64, error)) Float64ArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyIntArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyIntArrayArrayToFloat64Map(o IntArrayArrayInput, applier func(v [][]int) (map[string]float64, error)) Float64MapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyIntArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyIntArrayArrayToFloat64ArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyIntArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyIntArrayArrayToFloat64MapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyIntArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyIntArrayArrayToFloat64MapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyIntArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyIntArrayArrayToFloat64ArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyIntArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyIntArrayArrayToID(o IntArrayArrayInput, applier func(v [][]int) (ID, error)) IDOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyIntArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyIntArrayArrayToIDPtr(o IntArrayArrayInput, applier func(v [][]int) (*ID, error)) IDPtrOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyIntArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyIntArrayArrayToIDArray(o IntArrayArrayInput, applier func(v [][]int) ([]ID, error)) IDArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyIntArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyIntArrayArrayToIDMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]ID, error)) IDMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyIntArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyIntArrayArrayToIDArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyIntArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyIntArrayArrayToIDMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyIntArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyIntArrayArrayToIDMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyIntArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyIntArrayArrayToIDArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyIntArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyIntArrayArrayToArray(o IntArrayArrayInput, applier func(v [][]int) ([]interface{}, error)) ArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyIntArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyIntArrayArrayToMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]interface{}, error)) MapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyIntArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyIntArrayArrayToArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyIntArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyIntArrayArrayToMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyIntArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyIntArrayArrayToMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyIntArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyIntArrayArrayToArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyIntArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyIntArrayArrayToInt(o IntArrayArrayInput, applier func(v [][]int) (int, error)) IntOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyIntArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyIntArrayArrayToIntPtr(o IntArrayArrayInput, applier func(v [][]int) (*int, error)) IntPtrOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyIntArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyIntArrayArrayToIntArray(o IntArrayArrayInput, applier func(v [][]int) ([]int, error)) IntArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyIntArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyIntArrayArrayToIntMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]int, error)) IntMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyIntArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyIntArrayArrayToIntArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyIntArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyIntArrayArrayToIntMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyIntArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyIntArrayArrayToIntMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyIntArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyIntArrayArrayToIntArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]int, error)) IntArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyIntArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyIntArrayArrayToString(o IntArrayArrayInput, applier func(v [][]int) (string, error)) StringOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyIntArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyIntArrayArrayToStringPtr(o IntArrayArrayInput, applier func(v [][]int) (*string, error)) StringPtrOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyIntArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyIntArrayArrayToStringArray(o IntArrayArrayInput, applier func(v [][]int) ([]string, error)) StringArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyIntArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyIntArrayArrayToStringMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]string, error)) StringMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyIntArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyIntArrayArrayToStringArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyIntArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyIntArrayArrayToStringMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyIntArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyIntArrayArrayToStringMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyIntArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyIntArrayArrayToStringArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]string, error)) StringArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyIntArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyIntArrayArrayToURN(o IntArrayArrayInput, applier func(v [][]int) (URN, error)) URNOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyIntArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyIntArrayArrayToURNPtr(o IntArrayArrayInput, applier func(v [][]int) (*URN, error)) URNPtrOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyIntArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyIntArrayArrayToURNArray(o IntArrayArrayInput, applier func(v [][]int) ([]URN, error)) URNArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyIntArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyIntArrayArrayToURNMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]URN, error)) URNMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyIntArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyIntArrayArrayToURNArrayMap(o IntArrayArrayInput, applier func(v [][]int) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyIntArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyIntArrayArrayToURNMapArray(o IntArrayArrayInput, applier func(v [][]int) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyIntArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyIntArrayArrayToURNMapMap(o IntArrayArrayInput, applier func(v [][]int) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyIntArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyIntArrayArrayToURNArrayArray(o IntArrayArrayInput, applier func(v [][]int) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToIntArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringToArchive(o StringInput, applier func(v string) (Archive, error)) ArchiveOutput {
	return o.ToStringOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringToArchiveArray(o StringInput, applier func(v string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringToArchiveMap(o StringInput, applier func(v string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringToArchiveArrayMap(o StringInput, applier func(v string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringToArchiveMapArray(o StringInput, applier func(v string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringToArchiveMapMap(o StringInput, applier func(v string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringToArchiveArrayArray(o StringInput, applier func(v string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringToAsset(o StringInput, applier func(v string) (Asset, error)) AssetOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringToAssetArray(o StringInput, applier func(v string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringToAssetMap(o StringInput, applier func(v string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringToAssetArrayMap(o StringInput, applier func(v string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringToAssetMapArray(o StringInput, applier func(v string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringToAssetMapMap(o StringInput, applier func(v string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringToAssetArrayArray(o StringInput, applier func(v string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringToAssetOrArchive(o StringInput, applier func(v string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringToAssetOrArchiveArray(o StringInput, applier func(v string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringToAssetOrArchiveMap(o StringInput, applier func(v string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringToAssetOrArchiveArrayMap(o StringInput, applier func(v string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringToAssetOrArchiveMapArray(o StringInput, applier func(v string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringToAssetOrArchiveMapMap(o StringInput, applier func(v string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringToAssetOrArchiveArrayArray(o StringInput, applier func(v string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringToBool(o StringInput, applier func(v string) (bool, error)) BoolOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringToBoolPtr(o StringInput, applier func(v string) (*bool, error)) BoolPtrOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringToBoolArray(o StringInput, applier func(v string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringToBoolMap(o StringInput, applier func(v string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringToBoolArrayMap(o StringInput, applier func(v string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringToBoolMapArray(o StringInput, applier func(v string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringToBoolMapMap(o StringInput, applier func(v string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringToBoolArrayArray(o StringInput, applier func(v string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringToFloat64(o StringInput, applier func(v string) (float64, error)) Float64Output {
	return o.ToStringOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringToFloat64Ptr(o StringInput, applier func(v string) (*float64, error)) Float64PtrOutput {
	return o.ToStringOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringToFloat64Array(o StringInput, applier func(v string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringToFloat64Map(o StringInput, applier func(v string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringToFloat64ArrayMap(o StringInput, applier func(v string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringToFloat64MapArray(o StringInput, applier func(v string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringToFloat64MapMap(o StringInput, applier func(v string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringToFloat64ArrayArray(o StringInput, applier func(v string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringToID is like ApplyT, but returns a IDOutput.
func ApplyStringToID(o StringInput, applier func(v string) (ID, error)) IDOutput {
	return o.ToStringOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringToIDPtr(o StringInput, applier func(v string) (*ID, error)) IDPtrOutput {
	return o.ToStringOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringToIDArray(o StringInput, applier func(v string) ([]ID, error)) IDArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringToIDMap(o StringInput, applier func(v string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringToIDArrayMap(o StringInput, applier func(v string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringToIDMapArray(o StringInput, applier func(v string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringToIDMapMap(o StringInput, applier func(v string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringToIDArrayArray(o StringInput, applier func(v string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringToArray(o StringInput, applier func(v string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringToMap is like ApplyT, but returns a MapOutput.
func ApplyStringToMap(o StringInput, applier func(v string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringToArrayMap(o StringInput, applier func(v string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringToMapArray(o StringInput, applier func(v string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringToMapMap(o StringInput, applier func(v string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringToArrayArray(o StringInput, applier func(v string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringToInt is like ApplyT, but returns a IntOutput.
func ApplyStringToInt(o StringInput, applier func(v string) (int, error)) IntOutput {
	return o.ToStringOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringToIntPtr(o StringInput, applier func(v string) (*int, error)) IntPtrOutput {
	return o.ToStringOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringToIntArray(o StringInput, applier func(v string) ([]int, error)) IntArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringToIntMap(o StringInput, applier func(v string) (map[string]int, error)) IntMapOutput {
	return o.ToStringOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringToIntArrayMap(o StringInput, applier func(v string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringToIntMapArray(o StringInput, applier func(v string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringToIntMapMap(o StringInput, applier func(v string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringToIntArrayArray(o StringInput, applier func(v string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringToString is like ApplyT, but returns a StringOutput.
func ApplyStringToString(o StringInput, applier func(v string) (string, error)) StringOutput {
	return o.ToStringOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringToStringPtr(o StringInput, applier func(v string) (*string, error)) StringPtrOutput {
	return o.ToStringOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringToStringArray(o StringInput, applier func(v string) ([]string, error)) StringArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringToStringMap(o StringInput, applier func(v string) (map[string]string, error)) StringMapOutput {
	return o.ToStringOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringToStringArrayMap(o StringInput, applier func(v string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringToStringMapArray(o StringInput, applier func(v string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringToStringMapMap(o StringInput, applier func(v string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringToStringArrayArray(o StringInput, applier func(v string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringToURN is like ApplyT, but returns a URNOutput.
func ApplyStringToURN(o StringInput, applier func(v string) (URN, error)) URNOutput {
	return o.ToStringOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringToURNPtr(o StringInput, applier func(v string) (*URN, error)) URNPtrOutput {
	return o.ToStringOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringToURNArray(o StringInput, applier func(v string) ([]URN, error)) URNArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringToURNMap(o StringInput, applier func(v string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringToURNArrayMap(o StringInput, applier func(v string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringToURNMapArray(o StringInput, applier func(v string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringToURNMapMap(o StringInput, applier func(v string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringToURNArrayArray(o StringInput, applier func(v string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringPtrToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringPtrToArchive(o StringPtrInput, applier func(v *string) (Archive, error)) ArchiveOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringPtrToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringPtrToArchiveArray(o StringPtrInput, applier func(v *string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringPtrToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringPtrToArchiveMap(o StringPtrInput, applier func(v *string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringPtrToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringPtrToArchiveArrayMap(o StringPtrInput, applier func(v *string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringPtrToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringPtrToArchiveMapArray(o StringPtrInput, applier func(v *string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringPtrToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringPtrToArchiveMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringPtrToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringPtrToArchiveArrayArray(o StringPtrInput, applier func(v *string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringPtrToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringPtrToAsset(o StringPtrInput, applier func(v *string) (Asset, error)) AssetOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringPtrToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringPtrToAssetArray(o StringPtrInput, applier func(v *string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringPtrToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringPtrToAssetMap(o StringPtrInput, applier func(v *string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringPtrToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringPtrToAssetArrayMap(o StringPtrInput, applier func(v *string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringPtrToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringPtrToAssetMapArray(o StringPtrInput, applier func(v *string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringPtrToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringPtrToAssetMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringPtrToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringPtrToAssetArrayArray(o StringPtrInput, applier func(v *string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringPtrToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringPtrToAssetOrArchive(o StringPtrInput, applier func(v *string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringPtrToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringPtrToAssetOrArchiveArray(o StringPtrInput, applier func(v *string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringPtrToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringPtrToAssetOrArchiveMap(o StringPtrInput, applier func(v *string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringPtrToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringPtrToAssetOrArchiveArrayMap(o StringPtrInput, applier func(v *string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringPtrToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringPtrToAssetOrArchiveMapArray(o StringPtrInput, applier func(v *string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringPtrToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringPtrToAssetOrArchiveMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringPtrToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringPtrToAssetOrArchiveArrayArray(o StringPtrInput, applier func(v *string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringPtrToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringPtrToBool(o StringPtrInput, applier func(v *string) (bool, error)) BoolOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringPtrToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringPtrToBoolPtr(o StringPtrInput, applier func(v *string) (*bool, error)) BoolPtrOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringPtrToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringPtrToBoolArray(o StringPtrInput, applier func(v *string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringPtrToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringPtrToBoolMap(o StringPtrInput, applier func(v *string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringPtrToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringPtrToBoolArrayMap(o StringPtrInput, applier func(v *string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringPtrToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringPtrToBoolMapArray(o StringPtrInput, applier func(v *string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringPtrToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringPtrToBoolMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringPtrToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringPtrToBoolArrayArray(o StringPtrInput, applier func(v *string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringPtrToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringPtrToFloat64(o StringPtrInput, applier func(v *string) (float64, error)) Float64Output {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringPtrToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringPtrToFloat64Ptr(o StringPtrInput, applier func(v *string) (*float64, error)) Float64PtrOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringPtrToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringPtrToFloat64Array(o StringPtrInput, applier func(v *string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringPtrToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringPtrToFloat64Map(o StringPtrInput, applier func(v *string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringPtrToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringPtrToFloat64ArrayMap(o StringPtrInput, applier func(v *string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringPtrToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringPtrToFloat64MapArray(o StringPtrInput, applier func(v *string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringPtrToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringPtrToFloat64MapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringPtrToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringPtrToFloat64ArrayArray(o StringPtrInput, applier func(v *string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringPtrToID is like ApplyT, but returns a IDOutput.
func ApplyStringPtrToID(o StringPtrInput, applier func(v *string) (ID, error)) IDOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringPtrToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringPtrToIDPtr(o StringPtrInput, applier func(v *string) (*ID, error)) IDPtrOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringPtrToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringPtrToIDArray(o StringPtrInput, applier func(v *string) ([]ID, error)) IDArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringPtrToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringPtrToIDMap(o StringPtrInput, applier func(v *string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringPtrToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringPtrToIDArrayMap(o StringPtrInput, applier func(v *string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringPtrToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringPtrToIDMapArray(o StringPtrInput, applier func(v *string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringPtrToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringPtrToIDMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringPtrToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringPtrToIDArrayArray(o StringPtrInput, applier func(v *string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringPtrToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringPtrToArray(o StringPtrInput, applier func(v *string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringPtrToMap is like ApplyT, but returns a MapOutput.
func ApplyStringPtrToMap(o StringPtrInput, applier func(v *string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringPtrToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringPtrToArrayMap(o StringPtrInput, applier func(v *string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringPtrToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringPtrToMapArray(o StringPtrInput, applier func(v *string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringPtrToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringPtrToMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringPtrToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringPtrToArrayArray(o StringPtrInput, applier func(v *string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringPtrToInt is like ApplyT, but returns a IntOutput.
func ApplyStringPtrToInt(o StringPtrInput, applier func(v *string) (int, error)) IntOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringPtrToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringPtrToIntPtr(o StringPtrInput, applier func(v *string) (*int, error)) IntPtrOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringPtrToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringPtrToIntArray(o StringPtrInput, applier func(v *string) ([]int, error)) IntArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringPtrToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringPtrToIntMap(o StringPtrInput, applier func(v *string) (map[string]int, error)) IntMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringPtrToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringPtrToIntArrayMap(o StringPtrInput, applier func(v *string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringPtrToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringPtrToIntMapArray(o StringPtrInput, applier func(v *string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringPtrToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringPtrToIntMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringPtrToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringPtrToIntArrayArray(o StringPtrInput, applier func(v *string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringPtrToString is like ApplyT, but returns a StringOutput.
func ApplyStringPtrToString(o StringPtrInput, applier func(v *string) (string, error)) StringOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringPtrToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringPtrToStringPtr(o StringPtrInput, applier func(v *string) (*string, error)) StringPtrOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringPtrToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringPtrToStringArray(o StringPtrInput, applier func(v *string) ([]string, error)) StringArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringPtrToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringPtrToStringMap(o StringPtrInput, applier func(v *string) (map[string]string, error)) StringMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringPtrToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringPtrToStringArrayMap(o StringPtrInput, applier func(v *string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringPtrToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringPtrToStringMapArray(o StringPtrInput, applier func(v *string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringPtrToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringPtrToStringMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringPtrToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringPtrToStringArrayArray(o StringPtrInput, applier func(v *string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringPtrToURN is like ApplyT, but returns a URNOutput.
func ApplyStringPtrToURN(o StringPtrInput, applier func(v *string) (URN, error)) URNOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringPtrToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringPtrToURNPtr(o StringPtrInput, applier func(v *string) (*URN, error)) URNPtrOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringPtrToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringPtrToURNArray(o StringPtrInput, applier func(v *string) ([]URN, error)) URNArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringPtrToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringPtrToURNMap(o StringPtrInput, applier func(v *string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringPtrToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringPtrToURNArrayMap(o StringPtrInput, applier func(v *string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringPtrToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringPtrToURNMapArray(o StringPtrInput, applier func(v *string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringPtrToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringPtrToURNMapMap(o StringPtrInput, applier func(v *string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringPtrToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringPtrToURNArrayArray(o StringPtrInput, applier func(v *string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringPtrOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringArrayToArchive(o StringArrayInput, applier func(v []string) (Archive, error)) ArchiveOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringArrayToArchiveArray(o StringArrayInput, applier func(v []string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringArrayToArchiveMap(o StringArrayInput, applier func(v []string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringArrayToArchiveArrayMap(o StringArrayInput, applier func(v []string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringArrayToArchiveMapArray(o StringArrayInput, applier func(v []string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringArrayToArchiveMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringArrayToArchiveArrayArray(o StringArrayInput, applier func(v []string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringArrayToAsset(o StringArrayInput, applier func(v []string) (Asset, error)) AssetOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringArrayToAssetArray(o StringArrayInput, applier func(v []string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringArrayToAssetMap(o StringArrayInput, applier func(v []string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringArrayToAssetArrayMap(o StringArrayInput, applier func(v []string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringArrayToAssetMapArray(o StringArrayInput, applier func(v []string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringArrayToAssetMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringArrayToAssetArrayArray(o StringArrayInput, applier func(v []string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringArrayToAssetOrArchive(o StringArrayInput, applier func(v []string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringArrayToAssetOrArchiveArray(o StringArrayInput, applier func(v []string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringArrayToAssetOrArchiveMap(o StringArrayInput, applier func(v []string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringArrayToAssetOrArchiveArrayMap(o StringArrayInput, applier func(v []string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringArrayToAssetOrArchiveMapArray(o StringArrayInput, applier func(v []string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringArrayToAssetOrArchiveMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringArrayToAssetOrArchiveArrayArray(o StringArrayInput, applier func(v []string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringArrayToBool(o StringArrayInput, applier func(v []string) (bool, error)) BoolOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringArrayToBoolPtr(o StringArrayInput, applier func(v []string) (*bool, error)) BoolPtrOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringArrayToBoolArray(o StringArrayInput, applier func(v []string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringArrayToBoolMap(o StringArrayInput, applier func(v []string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringArrayToBoolArrayMap(o StringArrayInput, applier func(v []string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringArrayToBoolMapArray(o StringArrayInput, applier func(v []string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringArrayToBoolMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringArrayToBoolArrayArray(o StringArrayInput, applier func(v []string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringArrayToFloat64(o StringArrayInput, applier func(v []string) (float64, error)) Float64Output {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringArrayToFloat64Ptr(o StringArrayInput, applier func(v []string) (*float64, error)) Float64PtrOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringArrayToFloat64Array(o StringArrayInput, applier func(v []string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringArrayToFloat64Map(o StringArrayInput, applier func(v []string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringArrayToFloat64ArrayMap(o StringArrayInput, applier func(v []string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringArrayToFloat64MapArray(o StringArrayInput, applier func(v []string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringArrayToFloat64MapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringArrayToFloat64ArrayArray(o StringArrayInput, applier func(v []string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringArrayToID is like ApplyT, but returns a IDOutput.
func ApplyStringArrayToID(o StringArrayInput, applier func(v []string) (ID, error)) IDOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringArrayToIDPtr(o StringArrayInput, applier func(v []string) (*ID, error)) IDPtrOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringArrayToIDArray(o StringArrayInput, applier func(v []string) ([]ID, error)) IDArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringArrayToIDMap(o StringArrayInput, applier func(v []string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringArrayToIDArrayMap(o StringArrayInput, applier func(v []string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringArrayToIDMapArray(o StringArrayInput, applier func(v []string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringArrayToIDMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringArrayToIDArrayArray(o StringArrayInput, applier func(v []string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringArrayToArray(o StringArrayInput, applier func(v []string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyStringArrayToMap(o StringArrayInput, applier func(v []string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringArrayToArrayMap(o StringArrayInput, applier func(v []string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringArrayToMapArray(o StringArrayInput, applier func(v []string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringArrayToMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringArrayToArrayArray(o StringArrayInput, applier func(v []string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyStringArrayToInt(o StringArrayInput, applier func(v []string) (int, error)) IntOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringArrayToIntPtr(o StringArrayInput, applier func(v []string) (*int, error)) IntPtrOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringArrayToIntArray(o StringArrayInput, applier func(v []string) ([]int, error)) IntArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringArrayToIntMap(o StringArrayInput, applier func(v []string) (map[string]int, error)) IntMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringArrayToIntArrayMap(o StringArrayInput, applier func(v []string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringArrayToIntMapArray(o StringArrayInput, applier func(v []string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringArrayToIntMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringArrayToIntArrayArray(o StringArrayInput, applier func(v []string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringArrayToString is like ApplyT, but returns a StringOutput.
func ApplyStringArrayToString(o StringArrayInput, applier func(v []string) (string, error)) StringOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringArrayToStringPtr(o StringArrayInput, applier func(v []string) (*string, error)) StringPtrOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringArrayToStringArray(o StringArrayInput, applier func(v []string) ([]string, error)) StringArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringArrayToStringMap(o StringArrayInput, applier func(v []string) (map[string]string, error)) StringMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringArrayToStringArrayMap(o StringArrayInput, applier func(v []string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringArrayToStringMapArray(o StringArrayInput, applier func(v []string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringArrayToStringMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringArrayToStringArrayArray(o StringArrayInput, applier func(v []string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyStringArrayToURN(o StringArrayInput, applier func(v []string) (URN, error)) URNOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringArrayToURNPtr(o StringArrayInput, applier func(v []string) (*URN, error)) URNPtrOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringArrayToURNArray(o StringArrayInput, applier func(v []string) ([]URN, error)) URNArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringArrayToURNMap(o StringArrayInput, applier func(v []string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringArrayToURNArrayMap(o StringArrayInput, applier func(v []string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringArrayToURNMapArray(o StringArrayInput, applier func(v []string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringArrayToURNMapMap(o StringArrayInput, applier func(v []string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringArrayToURNArrayArray(o StringArrayInput, applier func(v []string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringMapToArchive(o StringMapInput, applier func(v map[string]string) (Archive, error)) ArchiveOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringMapToArchiveArray(o StringMapInput, applier func(v map[string]string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringMapToArchiveMap(o StringMapInput, applier func(v map[string]string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringMapToArchiveArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringMapToArchiveMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringMapToArchiveMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringMapToArchiveArrayArray(o StringMapInput, applier func(v map[string]string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringMapToAsset(o StringMapInput, applier func(v map[string]string) (Asset, error)) AssetOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringMapToAssetArray(o StringMapInput, applier func(v map[string]string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringMapToAssetMap(o StringMapInput, applier func(v map[string]string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringMapToAssetArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringMapToAssetMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringMapToAssetMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringMapToAssetArrayArray(o StringMapInput, applier func(v map[string]string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringMapToAssetOrArchive(o StringMapInput, applier func(v map[string]string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringMapToAssetOrArchiveArray(o StringMapInput, applier func(v map[string]string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringMapToAssetOrArchiveMap(o StringMapInput, applier func(v map[string]string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringMapToAssetOrArchiveArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringMapToAssetOrArchiveMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringMapToAssetOrArchiveMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringMapToAssetOrArchiveArrayArray(o StringMapInput, applier func(v map[string]string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringMapToBool(o StringMapInput, applier func(v map[string]string) (bool, error)) BoolOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringMapToBoolPtr(o StringMapInput, applier func(v map[string]string) (*bool, error)) BoolPtrOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringMapToBoolArray(o StringMapInput, applier func(v map[string]string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringMapToBoolMap(o StringMapInput, applier func(v map[string]string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringMapToBoolArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringMapToBoolMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringMapToBoolMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringMapToBoolArrayArray(o StringMapInput, applier func(v map[string]string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringMapToFloat64(o StringMapInput, applier func(v map[string]string) (float64, error)) Float64Output {
	return o.ToStringMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringMapToFloat64Ptr(o StringMapInput, applier func(v map[string]string) (*float64, error)) Float64PtrOutput {
	return o.ToStringMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringMapToFloat64Array(o StringMapInput, applier func(v map[string]string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringMapToFloat64Map(o StringMapInput, applier func(v map[string]string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringMapToFloat64ArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringMapToFloat64MapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringMapToFloat64MapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringMapToFloat64ArrayArray(o StringMapInput, applier func(v map[string]string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringMapToID is like ApplyT, but returns a IDOutput.
func ApplyStringMapToID(o StringMapInput, applier func(v map[string]string) (ID, error)) IDOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringMapToIDPtr(o StringMapInput, applier func(v map[string]string) (*ID, error)) IDPtrOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringMapToIDArray(o StringMapInput, applier func(v map[string]string) ([]ID, error)) IDArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringMapToIDMap(o StringMapInput, applier func(v map[string]string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringMapToIDArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringMapToIDMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringMapToIDMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringMapToIDArrayArray(o StringMapInput, applier func(v map[string]string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringMapToArray(o StringMapInput, applier func(v map[string]string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringMapToMap is like ApplyT, but returns a MapOutput.
func ApplyStringMapToMap(o StringMapInput, applier func(v map[string]string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringMapToArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringMapToMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringMapToMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringMapToArrayArray(o StringMapInput, applier func(v map[string]string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringMapToInt is like ApplyT, but returns a IntOutput.
func ApplyStringMapToInt(o StringMapInput, applier func(v map[string]string) (int, error)) IntOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringMapToIntPtr(o StringMapInput, applier func(v map[string]string) (*int, error)) IntPtrOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringMapToIntArray(o StringMapInput, applier func(v map[string]string) ([]int, error)) IntArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringMapToIntMap(o StringMapInput, applier func(v map[string]string) (map[string]int, error)) IntMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringMapToIntArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringMapToIntMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringMapToIntMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringMapToIntArrayArray(o StringMapInput, applier func(v map[string]string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringMapToString is like ApplyT, but returns a StringOutput.
func ApplyStringMapToString(o StringMapInput, applier func(v map[string]string) (string, error)) StringOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringMapToStringPtr(o StringMapInput, applier func(v map[string]string) (*string, error)) StringPtrOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringMapToStringArray(o StringMapInput, applier func(v map[string]string) ([]string, error)) StringArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringMapToStringMap(o StringMapInput, applier func(v map[string]string) (map[string]string, error)) StringMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringMapToStringArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringMapToStringMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringMapToStringMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringMapToStringArrayArray(o StringMapInput, applier func(v map[string]string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringMapToURN is like ApplyT, but returns a URNOutput.
func ApplyStringMapToURN(o StringMapInput, applier func(v map[string]string) (URN, error)) URNOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringMapToURNPtr(o StringMapInput, applier func(v map[string]string) (*URN, error)) URNPtrOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringMapToURNArray(o StringMapInput, applier func(v map[string]string) ([]URN, error)) URNArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringMapToURNMap(o StringMapInput, applier func(v map[string]string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringMapToURNArrayMap(o StringMapInput, applier func(v map[string]string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringMapToURNMapArray(o StringMapInput, applier func(v map[string]string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringMapToURNMapMap(o StringMapInput, applier func(v map[string]string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringMapToURNArrayArray(o StringMapInput, applier func(v map[string]string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringArrayMapToArchive(o StringArrayMapInput, applier func(v map[string][]string) (Archive, error)) ArchiveOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringArrayMapToArchiveArray(o StringArrayMapInput, applier func(v map[string][]string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringArrayMapToArchiveMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringArrayMapToArchiveArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringArrayMapToArchiveMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringArrayMapToArchiveMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringArrayMapToArchiveArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringArrayMapToAsset(o StringArrayMapInput, applier func(v map[string][]string) (Asset, error)) AssetOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringArrayMapToAssetArray(o StringArrayMapInput, applier func(v map[string][]string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringArrayMapToAssetMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringArrayMapToAssetArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringArrayMapToAssetMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringArrayMapToAssetMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringArrayMapToAssetArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringArrayMapToAssetOrArchive(o StringArrayMapInput, applier func(v map[string][]string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringArrayMapToAssetOrArchiveArray(o StringArrayMapInput, applier func(v map[string][]string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringArrayMapToAssetOrArchiveMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringArrayMapToAssetOrArchiveArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringArrayMapToAssetOrArchiveMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringArrayMapToAssetOrArchiveMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringArrayMapToAssetOrArchiveArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringArrayMapToBool(o StringArrayMapInput, applier func(v map[string][]string) (bool, error)) BoolOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringArrayMapToBoolPtr(o StringArrayMapInput, applier func(v map[string][]string) (*bool, error)) BoolPtrOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringArrayMapToBoolArray(o StringArrayMapInput, applier func(v map[string][]string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringArrayMapToBoolMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringArrayMapToBoolArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringArrayMapToBoolMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringArrayMapToBoolMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringArrayMapToBoolArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringArrayMapToFloat64(o StringArrayMapInput, applier func(v map[string][]string) (float64, error)) Float64Output {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringArrayMapToFloat64Ptr(o StringArrayMapInput, applier func(v map[string][]string) (*float64, error)) Float64PtrOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringArrayMapToFloat64Array(o StringArrayMapInput, applier func(v map[string][]string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringArrayMapToFloat64Map(o StringArrayMapInput, applier func(v map[string][]string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringArrayMapToFloat64ArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringArrayMapToFloat64MapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringArrayMapToFloat64MapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringArrayMapToFloat64ArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyStringArrayMapToID(o StringArrayMapInput, applier func(v map[string][]string) (ID, error)) IDOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringArrayMapToIDPtr(o StringArrayMapInput, applier func(v map[string][]string) (*ID, error)) IDPtrOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringArrayMapToIDArray(o StringArrayMapInput, applier func(v map[string][]string) ([]ID, error)) IDArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringArrayMapToIDMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringArrayMapToIDArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringArrayMapToIDMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringArrayMapToIDMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringArrayMapToIDArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringArrayMapToArray(o StringArrayMapInput, applier func(v map[string][]string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyStringArrayMapToMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringArrayMapToArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringArrayMapToMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringArrayMapToMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringArrayMapToArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyStringArrayMapToInt(o StringArrayMapInput, applier func(v map[string][]string) (int, error)) IntOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringArrayMapToIntPtr(o StringArrayMapInput, applier func(v map[string][]string) (*int, error)) IntPtrOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringArrayMapToIntArray(o StringArrayMapInput, applier func(v map[string][]string) ([]int, error)) IntArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringArrayMapToIntMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]int, error)) IntMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringArrayMapToIntArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringArrayMapToIntMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringArrayMapToIntMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringArrayMapToIntArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyStringArrayMapToString(o StringArrayMapInput, applier func(v map[string][]string) (string, error)) StringOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringArrayMapToStringPtr(o StringArrayMapInput, applier func(v map[string][]string) (*string, error)) StringPtrOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringArrayMapToStringArray(o StringArrayMapInput, applier func(v map[string][]string) ([]string, error)) StringArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringArrayMapToStringMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]string, error)) StringMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringArrayMapToStringArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringArrayMapToStringMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringArrayMapToStringMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringArrayMapToStringArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyStringArrayMapToURN(o StringArrayMapInput, applier func(v map[string][]string) (URN, error)) URNOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringArrayMapToURNPtr(o StringArrayMapInput, applier func(v map[string][]string) (*URN, error)) URNPtrOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringArrayMapToURNArray(o StringArrayMapInput, applier func(v map[string][]string) ([]URN, error)) URNArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringArrayMapToURNMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringArrayMapToURNArrayMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringArrayMapToURNMapArray(o StringArrayMapInput, applier func(v map[string][]string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringArrayMapToURNMapMap(o StringArrayMapInput, applier func(v map[string][]string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringArrayMapToURNArrayArray(o StringArrayMapInput, applier func(v map[string][]string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringMapArrayToArchive(o StringMapArrayInput, applier func(v []map[string]string) (Archive, error)) ArchiveOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringMapArrayToArchiveArray(o StringMapArrayInput, applier func(v []map[string]string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringMapArrayToArchiveMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringMapArrayToArchiveArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringMapArrayToArchiveMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringMapArrayToArchiveMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringMapArrayToArchiveArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringMapArrayToAsset(o StringMapArrayInput, applier func(v []map[string]string) (Asset, error)) AssetOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringMapArrayToAssetArray(o StringMapArrayInput, applier func(v []map[string]string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringMapArrayToAssetMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringMapArrayToAssetArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringMapArrayToAssetMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringMapArrayToAssetMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringMapArrayToAssetArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringMapArrayToAssetOrArchive(o StringMapArrayInput, applier func(v []map[string]string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringMapArrayToAssetOrArchiveArray(o StringMapArrayInput, applier func(v []map[string]string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringMapArrayToAssetOrArchiveMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringMapArrayToAssetOrArchiveArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringMapArrayToAssetOrArchiveMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringMapArrayToAssetOrArchiveMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringMapArrayToAssetOrArchiveArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringMapArrayToBool(o StringMapArrayInput, applier func(v []map[string]string) (bool, error)) BoolOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringMapArrayToBoolPtr(o StringMapArrayInput, applier func(v []map[string]string) (*bool, error)) BoolPtrOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringMapArrayToBoolArray(o StringMapArrayInput, applier func(v []map[string]string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringMapArrayToBoolMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringMapArrayToBoolArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringMapArrayToBoolMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringMapArrayToBoolMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringMapArrayToBoolArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringMapArrayToFloat64(o StringMapArrayInput, applier func(v []map[string]string) (float64, error)) Float64Output {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringMapArrayToFloat64Ptr(o StringMapArrayInput, applier func(v []map[string]string) (*float64, error)) Float64PtrOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringMapArrayToFloat64Array(o StringMapArrayInput, applier func(v []map[string]string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringMapArrayToFloat64Map(o StringMapArrayInput, applier func(v []map[string]string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringMapArrayToFloat64ArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringMapArrayToFloat64MapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringMapArrayToFloat64MapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringMapArrayToFloat64ArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyStringMapArrayToID(o StringMapArrayInput, applier func(v []map[string]string) (ID, error)) IDOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringMapArrayToIDPtr(o StringMapArrayInput, applier func(v []map[string]string) (*ID, error)) IDPtrOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringMapArrayToIDArray(o StringMapArrayInput, applier func(v []map[string]string) ([]ID, error)) IDArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringMapArrayToIDMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringMapArrayToIDArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringMapArrayToIDMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringMapArrayToIDMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringMapArrayToIDArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringMapArrayToArray(o StringMapArrayInput, applier func(v []map[string]string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyStringMapArrayToMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringMapArrayToArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringMapArrayToMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringMapArrayToMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringMapArrayToArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyStringMapArrayToInt(o StringMapArrayInput, applier func(v []map[string]string) (int, error)) IntOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringMapArrayToIntPtr(o StringMapArrayInput, applier func(v []map[string]string) (*int, error)) IntPtrOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringMapArrayToIntArray(o StringMapArrayInput, applier func(v []map[string]string) ([]int, error)) IntArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringMapArrayToIntMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]int, error)) IntMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringMapArrayToIntArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringMapArrayToIntMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringMapArrayToIntMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringMapArrayToIntArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyStringMapArrayToString(o StringMapArrayInput, applier func(v []map[string]string) (string, error)) StringOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringMapArrayToStringPtr(o StringMapArrayInput, applier func(v []map[string]string) (*string, error)) StringPtrOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringMapArrayToStringArray(o StringMapArrayInput, applier func(v []map[string]string) ([]string, error)) StringArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringMapArrayToStringMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]string, error)) StringMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringMapArrayToStringArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringMapArrayToStringMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringMapArrayToStringMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringMapArrayToStringArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyStringMapArrayToURN(o StringMapArrayInput, applier func(v []map[string]string) (URN, error)) URNOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringMapArrayToURNPtr(o StringMapArrayInput, applier func(v []map[string]string) (*URN, error)) URNPtrOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringMapArrayToURNArray(o StringMapArrayInput, applier func(v []map[string]string) ([]URN, error)) URNArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringMapArrayToURNMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringMapArrayToURNArrayMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringMapArrayToURNMapArray(o StringMapArrayInput, applier func(v []map[string]string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringMapArrayToURNMapMap(o StringMapArrayInput, applier func(v []map[string]string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringMapArrayToURNArrayArray(o StringMapArrayInput, applier func(v []map[string]string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringMapMapToArchive(o StringMapMapInput, applier func(v map[string]map[string]string) (Archive, error)) ArchiveOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringMapMapToArchiveArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringMapMapToArchiveMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringMapMapToArchiveArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringMapMapToArchiveMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringMapMapToArchiveMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringMapMapToArchiveArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringMapMapToAsset(o StringMapMapInput, applier func(v map[string]map[string]string) (Asset, error)) AssetOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringMapMapToAssetArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringMapMapToAssetMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringMapMapToAssetArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringMapMapToAssetMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringMapMapToAssetMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringMapMapToAssetArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringMapMapToAssetOrArchive(o StringMapMapInput, applier func(v map[string]map[string]string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringMapMapToAssetOrArchiveArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringMapMapToAssetOrArchiveMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringMapMapToAssetOrArchiveArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringMapMapToAssetOrArchiveMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringMapMapToAssetOrArchiveMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringMapMapToAssetOrArchiveArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringMapMapToBool(o StringMapMapInput, applier func(v map[string]map[string]string) (bool, error)) BoolOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringMapMapToBoolPtr(o StringMapMapInput, applier func(v map[string]map[string]string) (*bool, error)) BoolPtrOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringMapMapToBoolArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringMapMapToBoolMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringMapMapToBoolArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringMapMapToBoolMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringMapMapToBoolMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringMapMapToBoolArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringMapMapToFloat64(o StringMapMapInput, applier func(v map[string]map[string]string) (float64, error)) Float64Output {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringMapMapToFloat64Ptr(o StringMapMapInput, applier func(v map[string]map[string]string) (*float64, error)) Float64PtrOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringMapMapToFloat64Array(o StringMapMapInput, applier func(v map[string]map[string]string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringMapMapToFloat64Map(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringMapMapToFloat64ArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringMapMapToFloat64MapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringMapMapToFloat64MapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringMapMapToFloat64ArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyStringMapMapToID(o StringMapMapInput, applier func(v map[string]map[string]string) (ID, error)) IDOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringMapMapToIDPtr(o StringMapMapInput, applier func(v map[string]map[string]string) (*ID, error)) IDPtrOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringMapMapToIDArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]ID, error)) IDArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringMapMapToIDMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringMapMapToIDArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringMapMapToIDMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringMapMapToIDMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringMapMapToIDArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringMapMapToArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyStringMapMapToMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringMapMapToArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringMapMapToMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringMapMapToMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringMapMapToArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyStringMapMapToInt(o StringMapMapInput, applier func(v map[string]map[string]string) (int, error)) IntOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringMapMapToIntPtr(o StringMapMapInput, applier func(v map[string]map[string]string) (*int, error)) IntPtrOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringMapMapToIntArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]int, error)) IntArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringMapMapToIntMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]int, error)) IntMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringMapMapToIntArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringMapMapToIntMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringMapMapToIntMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringMapMapToIntArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyStringMapMapToString(o StringMapMapInput, applier func(v map[string]map[string]string) (string, error)) StringOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringMapMapToStringPtr(o StringMapMapInput, applier func(v map[string]map[string]string) (*string, error)) StringPtrOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringMapMapToStringArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]string, error)) StringArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringMapMapToStringMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]string, error)) StringMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringMapMapToStringArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringMapMapToStringMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringMapMapToStringMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringMapMapToStringArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyStringMapMapToURN(o StringMapMapInput, applier func(v map[string]map[string]string) (URN, error)) URNOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringMapMapToURNPtr(o StringMapMapInput, applier func(v map[string]map[string]string) (*URN, error)) URNPtrOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringMapMapToURNArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]URN, error)) URNArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringMapMapToURNMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringMapMapToURNArrayMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringMapMapToURNMapArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringMapMapToURNMapMap(o StringMapMapInput, applier func(v map[string]map[string]string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringMapMapToURNArrayArray(o StringMapMapInput, applier func(v map[string]map[string]string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyStringArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyStringArrayArrayToArchive(o StringArrayArrayInput, applier func(v [][]string) (Archive, error)) ArchiveOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyStringArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyStringArrayArrayToArchiveArray(o StringArrayArrayInput, applier func(v [][]string) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyStringArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyStringArrayArrayToArchiveMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyStringArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyStringArrayArrayToArchiveArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyStringArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyStringArrayArrayToArchiveMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyStringArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyStringArrayArrayToArchiveMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyStringArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyStringArrayArrayToArchiveArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyStringArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyStringArrayArrayToAsset(o StringArrayArrayInput, applier func(v [][]string) (Asset, error)) AssetOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyStringArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyStringArrayArrayToAssetArray(o StringArrayArrayInput, applier func(v [][]string) ([]Asset, error)) AssetArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyStringArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyStringArrayArrayToAssetMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]Asset, error)) AssetMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyStringArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyStringArrayArrayToAssetArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyStringArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyStringArrayArrayToAssetMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyStringArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyStringArrayArrayToAssetMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyStringArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyStringArrayArrayToAssetArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyStringArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyStringArrayArrayToAssetOrArchive(o StringArrayArrayInput, applier func(v [][]string) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyStringArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyStringArrayArrayToAssetOrArchiveArray(o StringArrayArrayInput, applier func(v [][]string) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyStringArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyStringArrayArrayToAssetOrArchiveMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyStringArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyStringArrayArrayToAssetOrArchiveArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyStringArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyStringArrayArrayToAssetOrArchiveMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyStringArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyStringArrayArrayToAssetOrArchiveMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyStringArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyStringArrayArrayToAssetOrArchiveArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyStringArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyStringArrayArrayToBool(o StringArrayArrayInput, applier func(v [][]string) (bool, error)) BoolOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyStringArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyStringArrayArrayToBoolPtr(o StringArrayArrayInput, applier func(v [][]string) (*bool, error)) BoolPtrOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyStringArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyStringArrayArrayToBoolArray(o StringArrayArrayInput, applier func(v [][]string) ([]bool, error)) BoolArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyStringArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyStringArrayArrayToBoolMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]bool, error)) BoolMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyStringArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyStringArrayArrayToBoolArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyStringArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyStringArrayArrayToBoolMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyStringArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyStringArrayArrayToBoolMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyStringArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyStringArrayArrayToBoolArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyStringArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyStringArrayArrayToFloat64(o StringArrayArrayInput, applier func(v [][]string) (float64, error)) Float64Output {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyStringArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyStringArrayArrayToFloat64Ptr(o StringArrayArrayInput, applier func(v [][]string) (*float64, error)) Float64PtrOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyStringArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyStringArrayArrayToFloat64Array(o StringArrayArrayInput, applier func(v [][]string) ([]float64, error)) Float64ArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyStringArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyStringArrayArrayToFloat64Map(o StringArrayArrayInput, applier func(v [][]string) (map[string]float64, error)) Float64MapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyStringArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyStringArrayArrayToFloat64ArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyStringArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyStringArrayArrayToFloat64MapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyStringArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyStringArrayArrayToFloat64MapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyStringArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyStringArrayArrayToFloat64ArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyStringArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyStringArrayArrayToID(o StringArrayArrayInput, applier func(v [][]string) (ID, error)) IDOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyStringArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyStringArrayArrayToIDPtr(o StringArrayArrayInput, applier func(v [][]string) (*ID, error)) IDPtrOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyStringArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyStringArrayArrayToIDArray(o StringArrayArrayInput, applier func(v [][]string) ([]ID, error)) IDArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyStringArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyStringArrayArrayToIDMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]ID, error)) IDMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyStringArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyStringArrayArrayToIDArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyStringArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyStringArrayArrayToIDMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyStringArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyStringArrayArrayToIDMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyStringArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyStringArrayArrayToIDArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyStringArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyStringArrayArrayToArray(o StringArrayArrayInput, applier func(v [][]string) ([]interface{}, error)) ArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyStringArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyStringArrayArrayToMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]interface{}, error)) MapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyStringArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyStringArrayArrayToArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyStringArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyStringArrayArrayToMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyStringArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyStringArrayArrayToMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyStringArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyStringArrayArrayToArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyStringArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyStringArrayArrayToInt(o StringArrayArrayInput, applier func(v [][]string) (int, error)) IntOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyStringArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyStringArrayArrayToIntPtr(o StringArrayArrayInput, applier func(v [][]string) (*int, error)) IntPtrOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyStringArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyStringArrayArrayToIntArray(o StringArrayArrayInput, applier func(v [][]string) ([]int, error)) IntArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyStringArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyStringArrayArrayToIntMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]int, error)) IntMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyStringArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyStringArrayArrayToIntArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyStringArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyStringArrayArrayToIntMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyStringArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyStringArrayArrayToIntMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyStringArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyStringArrayArrayToIntArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]int, error)) IntArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyStringArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyStringArrayArrayToString(o StringArrayArrayInput, applier func(v [][]string) (string, error)) StringOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyStringArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyStringArrayArrayToStringPtr(o StringArrayArrayInput, applier func(v [][]string) (*string, error)) StringPtrOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyStringArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyStringArrayArrayToStringArray(o StringArrayArrayInput, applier func(v [][]string) ([]string, error)) StringArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyStringArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyStringArrayArrayToStringMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]string, error)) StringMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyStringArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyStringArrayArrayToStringArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyStringArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyStringArrayArrayToStringMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyStringArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyStringArrayArrayToStringMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyStringArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyStringArrayArrayToStringArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]string, error)) StringArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyStringArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyStringArrayArrayToURN(o StringArrayArrayInput, applier func(v [][]string) (URN, error)) URNOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyStringArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyStringArrayArrayToURNPtr(o StringArrayArrayInput, applier func(v [][]string) (*URN, error)) URNPtrOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyStringArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyStringArrayArrayToURNArray(o StringArrayArrayInput, applier func(v [][]string) ([]URN, error)) URNArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyStringArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyStringArrayArrayToURNMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]URN, error)) URNMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyStringArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyStringArrayArrayToURNArrayMap(o StringArrayArrayInput, applier func(v [][]string) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyStringArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyStringArrayArrayToURNMapArray(o StringArrayArrayInput, applier func(v [][]string) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyStringArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyStringArrayArrayToURNMapMap(o StringArrayArrayInput, applier func(v [][]string) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyStringArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyStringArrayArrayToURNArrayArray(o StringArrayArrayInput, applier func(v [][]string) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToStringArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNToArchive(o URNInput, applier func(v URN) (Archive, error)) ArchiveOutput {
	return o.ToURNOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNToArchiveArray(o URNInput, applier func(v URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNToArchiveMap(o URNInput, applier func(v URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNToArchiveArrayMap(o URNInput, applier func(v URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNToArchiveMapArray(o URNInput, applier func(v URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNToArchiveMapMap(o URNInput, applier func(v URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNToArchiveArrayArray(o URNInput, applier func(v URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNToAsset(o URNInput, applier func(v URN) (Asset, error)) AssetOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNToAssetArray(o URNInput, applier func(v URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNToAssetMap(o URNInput, applier func(v URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNToAssetArrayMap(o URNInput, applier func(v URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNToAssetMapArray(o URNInput, applier func(v URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNToAssetMapMap(o URNInput, applier func(v URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNToAssetArrayArray(o URNInput, applier func(v URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNToAssetOrArchive(o URNInput, applier func(v URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNToAssetOrArchiveArray(o URNInput, applier func(v URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNToAssetOrArchiveMap(o URNInput, applier func(v URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNToAssetOrArchiveArrayMap(o URNInput, applier func(v URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNToAssetOrArchiveMapArray(o URNInput, applier func(v URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNToAssetOrArchiveMapMap(o URNInput, applier func(v URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNToAssetOrArchiveArrayArray(o URNInput, applier func(v URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNToBool(o URNInput, applier func(v URN) (bool, error)) BoolOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNToBoolPtr(o URNInput, applier func(v URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNToBoolArray(o URNInput, applier func(v URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNToBoolMap(o URNInput, applier func(v URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNToBoolArrayMap(o URNInput, applier func(v URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNToBoolMapArray(o URNInput, applier func(v URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNToBoolMapMap(o URNInput, applier func(v URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNToBoolArrayArray(o URNInput, applier func(v URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNToFloat64(o URNInput, applier func(v URN) (float64, error)) Float64Output {
	return o.ToURNOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNToFloat64Ptr(o URNInput, applier func(v URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNToFloat64Array(o URNInput, applier func(v URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNToFloat64Map(o URNInput, applier func(v URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNToFloat64ArrayMap(o URNInput, applier func(v URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNToFloat64MapArray(o URNInput, applier func(v URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNToFloat64MapMap(o URNInput, applier func(v URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNToFloat64ArrayArray(o URNInput, applier func(v URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNToID is like ApplyT, but returns a IDOutput.
func ApplyURNToID(o URNInput, applier func(v URN) (ID, error)) IDOutput {
	return o.ToURNOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNToIDPtr(o URNInput, applier func(v URN) (*ID, error)) IDPtrOutput {
	return o.ToURNOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNToIDArray(o URNInput, applier func(v URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNToIDMap(o URNInput, applier func(v URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNToIDArrayMap(o URNInput, applier func(v URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNToIDMapArray(o URNInput, applier func(v URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNToIDMapMap(o URNInput, applier func(v URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNToIDArrayArray(o URNInput, applier func(v URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNToArray(o URNInput, applier func(v URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNToMap is like ApplyT, but returns a MapOutput.
func ApplyURNToMap(o URNInput, applier func(v URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNToArrayMap(o URNInput, applier func(v URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNToMapArray(o URNInput, applier func(v URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNToMapMap(o URNInput, applier func(v URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNToArrayArray(o URNInput, applier func(v URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNToInt is like ApplyT, but returns a IntOutput.
func ApplyURNToInt(o URNInput, applier func(v URN) (int, error)) IntOutput {
	return o.ToURNOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNToIntPtr(o URNInput, applier func(v URN) (*int, error)) IntPtrOutput {
	return o.ToURNOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNToIntArray(o URNInput, applier func(v URN) ([]int, error)) IntArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNToIntMap(o URNInput, applier func(v URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNToIntArrayMap(o URNInput, applier func(v URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNToIntMapArray(o URNInput, applier func(v URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNToIntMapMap(o URNInput, applier func(v URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNToIntArrayArray(o URNInput, applier func(v URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNToString is like ApplyT, but returns a StringOutput.
func ApplyURNToString(o URNInput, applier func(v URN) (string, error)) StringOutput {
	return o.ToURNOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNToStringPtr(o URNInput, applier func(v URN) (*string, error)) StringPtrOutput {
	return o.ToURNOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNToStringArray(o URNInput, applier func(v URN) ([]string, error)) StringArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNToStringMap(o URNInput, applier func(v URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNToStringArrayMap(o URNInput, applier func(v URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNToStringMapArray(o URNInput, applier func(v URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNToStringMapMap(o URNInput, applier func(v URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNToStringArrayArray(o URNInput, applier func(v URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNToURN is like ApplyT, but returns a URNOutput.
func ApplyURNToURN(o URNInput, applier func(v URN) (URN, error)) URNOutput {
	return o.ToURNOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNToURNPtr(o URNInput, applier func(v URN) (*URN, error)) URNPtrOutput {
	return o.ToURNOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNToURNArray(o URNInput, applier func(v URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNToURNMap(o URNInput, applier func(v URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNToURNArrayMap(o URNInput, applier func(v URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNToURNMapArray(o URNInput, applier func(v URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNToURNMapMap(o URNInput, applier func(v URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNToURNArrayArray(o URNInput, applier func(v URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNPtrToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNPtrToArchive(o URNPtrInput, applier func(v *URN) (Archive, error)) ArchiveOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNPtrToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNPtrToArchiveArray(o URNPtrInput, applier func(v *URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNPtrToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNPtrToArchiveMap(o URNPtrInput, applier func(v *URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNPtrToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNPtrToArchiveArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNPtrToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNPtrToArchiveMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNPtrToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNPtrToArchiveMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNPtrToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNPtrToArchiveArrayArray(o URNPtrInput, applier func(v *URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNPtrToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNPtrToAsset(o URNPtrInput, applier func(v *URN) (Asset, error)) AssetOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNPtrToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNPtrToAssetArray(o URNPtrInput, applier func(v *URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNPtrToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNPtrToAssetMap(o URNPtrInput, applier func(v *URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNPtrToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNPtrToAssetArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNPtrToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNPtrToAssetMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNPtrToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNPtrToAssetMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNPtrToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNPtrToAssetArrayArray(o URNPtrInput, applier func(v *URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNPtrToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNPtrToAssetOrArchive(o URNPtrInput, applier func(v *URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNPtrToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNPtrToAssetOrArchiveArray(o URNPtrInput, applier func(v *URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNPtrToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNPtrToAssetOrArchiveMap(o URNPtrInput, applier func(v *URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNPtrToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNPtrToAssetOrArchiveArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNPtrToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNPtrToAssetOrArchiveMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNPtrToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNPtrToAssetOrArchiveMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNPtrToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNPtrToAssetOrArchiveArrayArray(o URNPtrInput, applier func(v *URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNPtrToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNPtrToBool(o URNPtrInput, applier func(v *URN) (bool, error)) BoolOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNPtrToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNPtrToBoolPtr(o URNPtrInput, applier func(v *URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNPtrToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNPtrToBoolArray(o URNPtrInput, applier func(v *URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNPtrToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNPtrToBoolMap(o URNPtrInput, applier func(v *URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNPtrToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNPtrToBoolArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNPtrToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNPtrToBoolMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNPtrToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNPtrToBoolMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNPtrToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNPtrToBoolArrayArray(o URNPtrInput, applier func(v *URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNPtrToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNPtrToFloat64(o URNPtrInput, applier func(v *URN) (float64, error)) Float64Output {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNPtrToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNPtrToFloat64Ptr(o URNPtrInput, applier func(v *URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNPtrToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNPtrToFloat64Array(o URNPtrInput, applier func(v *URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNPtrToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNPtrToFloat64Map(o URNPtrInput, applier func(v *URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNPtrToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNPtrToFloat64ArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNPtrToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNPtrToFloat64MapArray(o URNPtrInput, applier func(v *URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNPtrToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNPtrToFloat64MapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNPtrToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNPtrToFloat64ArrayArray(o URNPtrInput, applier func(v *URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNPtrToID is like ApplyT, but returns a IDOutput.
func ApplyURNPtrToID(o URNPtrInput, applier func(v *URN) (ID, error)) IDOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNPtrToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNPtrToIDPtr(o URNPtrInput, applier func(v *URN) (*ID, error)) IDPtrOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNPtrToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNPtrToIDArray(o URNPtrInput, applier func(v *URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNPtrToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNPtrToIDMap(o URNPtrInput, applier func(v *URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNPtrToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNPtrToIDArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNPtrToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNPtrToIDMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNPtrToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNPtrToIDMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNPtrToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNPtrToIDArrayArray(o URNPtrInput, applier func(v *URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNPtrToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNPtrToArray(o URNPtrInput, applier func(v *URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNPtrToMap is like ApplyT, but returns a MapOutput.
func ApplyURNPtrToMap(o URNPtrInput, applier func(v *URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNPtrToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNPtrToArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNPtrToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNPtrToMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNPtrToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNPtrToMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNPtrToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNPtrToArrayArray(o URNPtrInput, applier func(v *URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNPtrToInt is like ApplyT, but returns a IntOutput.
func ApplyURNPtrToInt(o URNPtrInput, applier func(v *URN) (int, error)) IntOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNPtrToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNPtrToIntPtr(o URNPtrInput, applier func(v *URN) (*int, error)) IntPtrOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNPtrToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNPtrToIntArray(o URNPtrInput, applier func(v *URN) ([]int, error)) IntArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNPtrToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNPtrToIntMap(o URNPtrInput, applier func(v *URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNPtrToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNPtrToIntArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNPtrToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNPtrToIntMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNPtrToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNPtrToIntMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNPtrToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNPtrToIntArrayArray(o URNPtrInput, applier func(v *URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNPtrToString is like ApplyT, but returns a StringOutput.
func ApplyURNPtrToString(o URNPtrInput, applier func(v *URN) (string, error)) StringOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNPtrToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNPtrToStringPtr(o URNPtrInput, applier func(v *URN) (*string, error)) StringPtrOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNPtrToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNPtrToStringArray(o URNPtrInput, applier func(v *URN) ([]string, error)) StringArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNPtrToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNPtrToStringMap(o URNPtrInput, applier func(v *URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNPtrToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNPtrToStringArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNPtrToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNPtrToStringMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNPtrToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNPtrToStringMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNPtrToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNPtrToStringArrayArray(o URNPtrInput, applier func(v *URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNPtrToURN is like ApplyT, but returns a URNOutput.
func ApplyURNPtrToURN(o URNPtrInput, applier func(v *URN) (URN, error)) URNOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNPtrToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNPtrToURNPtr(o URNPtrInput, applier func(v *URN) (*URN, error)) URNPtrOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNPtrToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNPtrToURNArray(o URNPtrInput, applier func(v *URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNPtrToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNPtrToURNMap(o URNPtrInput, applier func(v *URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNPtrToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNPtrToURNArrayMap(o URNPtrInput, applier func(v *URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNPtrToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNPtrToURNMapArray(o URNPtrInput, applier func(v *URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNPtrToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNPtrToURNMapMap(o URNPtrInput, applier func(v *URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNPtrToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNPtrToURNArrayArray(o URNPtrInput, applier func(v *URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNPtrOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNArrayToArchive(o URNArrayInput, applier func(v []URN) (Archive, error)) ArchiveOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNArrayToArchiveArray(o URNArrayInput, applier func(v []URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNArrayToArchiveMap(o URNArrayInput, applier func(v []URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNArrayToArchiveArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNArrayToArchiveMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNArrayToArchiveMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNArrayToArchiveArrayArray(o URNArrayInput, applier func(v []URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNArrayToAsset(o URNArrayInput, applier func(v []URN) (Asset, error)) AssetOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNArrayToAssetArray(o URNArrayInput, applier func(v []URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNArrayToAssetMap(o URNArrayInput, applier func(v []URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNArrayToAssetArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNArrayToAssetMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNArrayToAssetMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNArrayToAssetArrayArray(o URNArrayInput, applier func(v []URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNArrayToAssetOrArchive(o URNArrayInput, applier func(v []URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNArrayToAssetOrArchiveArray(o URNArrayInput, applier func(v []URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNArrayToAssetOrArchiveMap(o URNArrayInput, applier func(v []URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNArrayToAssetOrArchiveArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNArrayToAssetOrArchiveMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNArrayToAssetOrArchiveMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNArrayToAssetOrArchiveArrayArray(o URNArrayInput, applier func(v []URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNArrayToBool(o URNArrayInput, applier func(v []URN) (bool, error)) BoolOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNArrayToBoolPtr(o URNArrayInput, applier func(v []URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNArrayToBoolArray(o URNArrayInput, applier func(v []URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNArrayToBoolMap(o URNArrayInput, applier func(v []URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNArrayToBoolArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNArrayToBoolMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNArrayToBoolMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNArrayToBoolArrayArray(o URNArrayInput, applier func(v []URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNArrayToFloat64(o URNArrayInput, applier func(v []URN) (float64, error)) Float64Output {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNArrayToFloat64Ptr(o URNArrayInput, applier func(v []URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNArrayToFloat64Array(o URNArrayInput, applier func(v []URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNArrayToFloat64Map(o URNArrayInput, applier func(v []URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNArrayToFloat64ArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNArrayToFloat64MapArray(o URNArrayInput, applier func(v []URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNArrayToFloat64MapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNArrayToFloat64ArrayArray(o URNArrayInput, applier func(v []URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNArrayToID is like ApplyT, but returns a IDOutput.
func ApplyURNArrayToID(o URNArrayInput, applier func(v []URN) (ID, error)) IDOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNArrayToIDPtr(o URNArrayInput, applier func(v []URN) (*ID, error)) IDPtrOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNArrayToIDArray(o URNArrayInput, applier func(v []URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNArrayToIDMap(o URNArrayInput, applier func(v []URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNArrayToIDArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNArrayToIDMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNArrayToIDMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNArrayToIDArrayArray(o URNArrayInput, applier func(v []URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNArrayToArray(o URNArrayInput, applier func(v []URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyURNArrayToMap(o URNArrayInput, applier func(v []URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNArrayToArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNArrayToMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNArrayToMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNArrayToArrayArray(o URNArrayInput, applier func(v []URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyURNArrayToInt(o URNArrayInput, applier func(v []URN) (int, error)) IntOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNArrayToIntPtr(o URNArrayInput, applier func(v []URN) (*int, error)) IntPtrOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNArrayToIntArray(o URNArrayInput, applier func(v []URN) ([]int, error)) IntArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNArrayToIntMap(o URNArrayInput, applier func(v []URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNArrayToIntArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNArrayToIntMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNArrayToIntMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNArrayToIntArrayArray(o URNArrayInput, applier func(v []URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNArrayToString is like ApplyT, but returns a StringOutput.
func ApplyURNArrayToString(o URNArrayInput, applier func(v []URN) (string, error)) StringOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNArrayToStringPtr(o URNArrayInput, applier func(v []URN) (*string, error)) StringPtrOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNArrayToStringArray(o URNArrayInput, applier func(v []URN) ([]string, error)) StringArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNArrayToStringMap(o URNArrayInput, applier func(v []URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNArrayToStringArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNArrayToStringMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNArrayToStringMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNArrayToStringArrayArray(o URNArrayInput, applier func(v []URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyURNArrayToURN(o URNArrayInput, applier func(v []URN) (URN, error)) URNOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNArrayToURNPtr(o URNArrayInput, applier func(v []URN) (*URN, error)) URNPtrOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNArrayToURNArray(o URNArrayInput, applier func(v []URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNArrayToURNMap(o URNArrayInput, applier func(v []URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNArrayToURNArrayMap(o URNArrayInput, applier func(v []URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNArrayToURNMapArray(o URNArrayInput, applier func(v []URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNArrayToURNMapMap(o URNArrayInput, applier func(v []URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNArrayToURNArrayArray(o URNArrayInput, applier func(v []URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNMapToArchive(o URNMapInput, applier func(v map[string]URN) (Archive, error)) ArchiveOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNMapToArchiveArray(o URNMapInput, applier func(v map[string]URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNMapToArchiveMap(o URNMapInput, applier func(v map[string]URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNMapToArchiveArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNMapToArchiveMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNMapToArchiveMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNMapToArchiveArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNMapToAsset(o URNMapInput, applier func(v map[string]URN) (Asset, error)) AssetOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNMapToAssetArray(o URNMapInput, applier func(v map[string]URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNMapToAssetMap(o URNMapInput, applier func(v map[string]URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNMapToAssetArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNMapToAssetMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNMapToAssetMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNMapToAssetArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNMapToAssetOrArchive(o URNMapInput, applier func(v map[string]URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNMapToAssetOrArchiveArray(o URNMapInput, applier func(v map[string]URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNMapToAssetOrArchiveMap(o URNMapInput, applier func(v map[string]URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNMapToAssetOrArchiveArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNMapToAssetOrArchiveMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNMapToAssetOrArchiveMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNMapToAssetOrArchiveArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNMapToBool(o URNMapInput, applier func(v map[string]URN) (bool, error)) BoolOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNMapToBoolPtr(o URNMapInput, applier func(v map[string]URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNMapToBoolArray(o URNMapInput, applier func(v map[string]URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNMapToBoolMap(o URNMapInput, applier func(v map[string]URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNMapToBoolArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNMapToBoolMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNMapToBoolMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNMapToBoolArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNMapToFloat64(o URNMapInput, applier func(v map[string]URN) (float64, error)) Float64Output {
	return o.ToURNMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNMapToFloat64Ptr(o URNMapInput, applier func(v map[string]URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNMapToFloat64Array(o URNMapInput, applier func(v map[string]URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNMapToFloat64Map(o URNMapInput, applier func(v map[string]URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNMapToFloat64ArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNMapToFloat64MapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNMapToFloat64MapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNMapToFloat64ArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNMapToID is like ApplyT, but returns a IDOutput.
func ApplyURNMapToID(o URNMapInput, applier func(v map[string]URN) (ID, error)) IDOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNMapToIDPtr(o URNMapInput, applier func(v map[string]URN) (*ID, error)) IDPtrOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNMapToIDArray(o URNMapInput, applier func(v map[string]URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNMapToIDMap(o URNMapInput, applier func(v map[string]URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNMapToIDArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNMapToIDMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNMapToIDMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNMapToIDArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNMapToArray(o URNMapInput, applier func(v map[string]URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNMapToMap is like ApplyT, but returns a MapOutput.
func ApplyURNMapToMap(o URNMapInput, applier func(v map[string]URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNMapToArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNMapToMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNMapToMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNMapToArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNMapToInt is like ApplyT, but returns a IntOutput.
func ApplyURNMapToInt(o URNMapInput, applier func(v map[string]URN) (int, error)) IntOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNMapToIntPtr(o URNMapInput, applier func(v map[string]URN) (*int, error)) IntPtrOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNMapToIntArray(o URNMapInput, applier func(v map[string]URN) ([]int, error)) IntArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNMapToIntMap(o URNMapInput, applier func(v map[string]URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNMapToIntArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNMapToIntMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNMapToIntMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNMapToIntArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNMapToString is like ApplyT, but returns a StringOutput.
func ApplyURNMapToString(o URNMapInput, applier func(v map[string]URN) (string, error)) StringOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNMapToStringPtr(o URNMapInput, applier func(v map[string]URN) (*string, error)) StringPtrOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNMapToStringArray(o URNMapInput, applier func(v map[string]URN) ([]string, error)) StringArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNMapToStringMap(o URNMapInput, applier func(v map[string]URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNMapToStringArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNMapToStringMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNMapToStringMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNMapToStringArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNMapToURN is like ApplyT, but returns a URNOutput.
func ApplyURNMapToURN(o URNMapInput, applier func(v map[string]URN) (URN, error)) URNOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNMapToURNPtr(o URNMapInput, applier func(v map[string]URN) (*URN, error)) URNPtrOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNMapToURNArray(o URNMapInput, applier func(v map[string]URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNMapToURNMap(o URNMapInput, applier func(v map[string]URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNMapToURNArrayMap(o URNMapInput, applier func(v map[string]URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNMapToURNMapArray(o URNMapInput, applier func(v map[string]URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNMapToURNMapMap(o URNMapInput, applier func(v map[string]URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNMapToURNArrayArray(o URNMapInput, applier func(v map[string]URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNArrayMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNArrayMapToArchive(o URNArrayMapInput, applier func(v map[string][]URN) (Archive, error)) ArchiveOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNArrayMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNArrayMapToArchiveArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNArrayMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNArrayMapToArchiveMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNArrayMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNArrayMapToArchiveArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNArrayMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNArrayMapToArchiveMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNArrayMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNArrayMapToArchiveMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNArrayMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNArrayMapToArchiveArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNArrayMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNArrayMapToAsset(o URNArrayMapInput, applier func(v map[string][]URN) (Asset, error)) AssetOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNArrayMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNArrayMapToAssetArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNArrayMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNArrayMapToAssetMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNArrayMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNArrayMapToAssetArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNArrayMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNArrayMapToAssetMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNArrayMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNArrayMapToAssetMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNArrayMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNArrayMapToAssetArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNArrayMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNArrayMapToAssetOrArchive(o URNArrayMapInput, applier func(v map[string][]URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNArrayMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNArrayMapToAssetOrArchiveArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNArrayMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNArrayMapToAssetOrArchiveMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNArrayMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNArrayMapToAssetOrArchiveArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNArrayMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNArrayMapToAssetOrArchiveMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNArrayMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNArrayMapToAssetOrArchiveMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNArrayMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNArrayMapToAssetOrArchiveArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNArrayMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNArrayMapToBool(o URNArrayMapInput, applier func(v map[string][]URN) (bool, error)) BoolOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNArrayMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNArrayMapToBoolPtr(o URNArrayMapInput, applier func(v map[string][]URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNArrayMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNArrayMapToBoolArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNArrayMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNArrayMapToBoolMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNArrayMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNArrayMapToBoolArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNArrayMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNArrayMapToBoolMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNArrayMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNArrayMapToBoolMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNArrayMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNArrayMapToBoolArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNArrayMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNArrayMapToFloat64(o URNArrayMapInput, applier func(v map[string][]URN) (float64, error)) Float64Output {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNArrayMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNArrayMapToFloat64Ptr(o URNArrayMapInput, applier func(v map[string][]URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNArrayMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNArrayMapToFloat64Array(o URNArrayMapInput, applier func(v map[string][]URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNArrayMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNArrayMapToFloat64Map(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNArrayMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNArrayMapToFloat64ArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNArrayMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNArrayMapToFloat64MapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNArrayMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNArrayMapToFloat64MapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNArrayMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNArrayMapToFloat64ArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNArrayMapToID is like ApplyT, but returns a IDOutput.
func ApplyURNArrayMapToID(o URNArrayMapInput, applier func(v map[string][]URN) (ID, error)) IDOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNArrayMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNArrayMapToIDPtr(o URNArrayMapInput, applier func(v map[string][]URN) (*ID, error)) IDPtrOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNArrayMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNArrayMapToIDArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNArrayMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNArrayMapToIDMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNArrayMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNArrayMapToIDArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNArrayMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNArrayMapToIDMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNArrayMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNArrayMapToIDMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNArrayMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNArrayMapToIDArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNArrayMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNArrayMapToArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNArrayMapToMap is like ApplyT, but returns a MapOutput.
func ApplyURNArrayMapToMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNArrayMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNArrayMapToArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNArrayMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNArrayMapToMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNArrayMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNArrayMapToMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNArrayMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNArrayMapToArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNArrayMapToInt is like ApplyT, but returns a IntOutput.
func ApplyURNArrayMapToInt(o URNArrayMapInput, applier func(v map[string][]URN) (int, error)) IntOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNArrayMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNArrayMapToIntPtr(o URNArrayMapInput, applier func(v map[string][]URN) (*int, error)) IntPtrOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNArrayMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNArrayMapToIntArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]int, error)) IntArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNArrayMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNArrayMapToIntMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNArrayMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNArrayMapToIntArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNArrayMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNArrayMapToIntMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNArrayMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNArrayMapToIntMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNArrayMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNArrayMapToIntArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNArrayMapToString is like ApplyT, but returns a StringOutput.
func ApplyURNArrayMapToString(o URNArrayMapInput, applier func(v map[string][]URN) (string, error)) StringOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNArrayMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNArrayMapToStringPtr(o URNArrayMapInput, applier func(v map[string][]URN) (*string, error)) StringPtrOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNArrayMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNArrayMapToStringArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]string, error)) StringArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNArrayMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNArrayMapToStringMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNArrayMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNArrayMapToStringArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNArrayMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNArrayMapToStringMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNArrayMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNArrayMapToStringMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNArrayMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNArrayMapToStringArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNArrayMapToURN is like ApplyT, but returns a URNOutput.
func ApplyURNArrayMapToURN(o URNArrayMapInput, applier func(v map[string][]URN) (URN, error)) URNOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNArrayMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNArrayMapToURNPtr(o URNArrayMapInput, applier func(v map[string][]URN) (*URN, error)) URNPtrOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNArrayMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNArrayMapToURNArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNArrayMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNArrayMapToURNMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNArrayMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNArrayMapToURNArrayMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNArrayMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNArrayMapToURNMapArray(o URNArrayMapInput, applier func(v map[string][]URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNArrayMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNArrayMapToURNMapMap(o URNArrayMapInput, applier func(v map[string][]URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNArrayMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNArrayMapToURNArrayArray(o URNArrayMapInput, applier func(v map[string][]URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNArrayMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNMapArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNMapArrayToArchive(o URNMapArrayInput, applier func(v []map[string]URN) (Archive, error)) ArchiveOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNMapArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNMapArrayToArchiveArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNMapArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNMapArrayToArchiveMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNMapArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNMapArrayToArchiveArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNMapArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNMapArrayToArchiveMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNMapArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNMapArrayToArchiveMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNMapArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNMapArrayToArchiveArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNMapArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNMapArrayToAsset(o URNMapArrayInput, applier func(v []map[string]URN) (Asset, error)) AssetOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNMapArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNMapArrayToAssetArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNMapArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNMapArrayToAssetMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNMapArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNMapArrayToAssetArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNMapArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNMapArrayToAssetMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNMapArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNMapArrayToAssetMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNMapArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNMapArrayToAssetArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNMapArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNMapArrayToAssetOrArchive(o URNMapArrayInput, applier func(v []map[string]URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNMapArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNMapArrayToAssetOrArchiveArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNMapArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNMapArrayToAssetOrArchiveMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNMapArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNMapArrayToAssetOrArchiveArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNMapArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNMapArrayToAssetOrArchiveMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNMapArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNMapArrayToAssetOrArchiveMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNMapArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNMapArrayToAssetOrArchiveArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNMapArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNMapArrayToBool(o URNMapArrayInput, applier func(v []map[string]URN) (bool, error)) BoolOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNMapArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNMapArrayToBoolPtr(o URNMapArrayInput, applier func(v []map[string]URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNMapArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNMapArrayToBoolArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNMapArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNMapArrayToBoolMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNMapArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNMapArrayToBoolArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNMapArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNMapArrayToBoolMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNMapArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNMapArrayToBoolMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNMapArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNMapArrayToBoolArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNMapArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNMapArrayToFloat64(o URNMapArrayInput, applier func(v []map[string]URN) (float64, error)) Float64Output {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNMapArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNMapArrayToFloat64Ptr(o URNMapArrayInput, applier func(v []map[string]URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNMapArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNMapArrayToFloat64Array(o URNMapArrayInput, applier func(v []map[string]URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNMapArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNMapArrayToFloat64Map(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNMapArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNMapArrayToFloat64ArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNMapArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNMapArrayToFloat64MapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNMapArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNMapArrayToFloat64MapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNMapArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNMapArrayToFloat64ArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNMapArrayToID is like ApplyT, but returns a IDOutput.
func ApplyURNMapArrayToID(o URNMapArrayInput, applier func(v []map[string]URN) (ID, error)) IDOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNMapArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNMapArrayToIDPtr(o URNMapArrayInput, applier func(v []map[string]URN) (*ID, error)) IDPtrOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNMapArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNMapArrayToIDArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNMapArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNMapArrayToIDMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNMapArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNMapArrayToIDArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNMapArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNMapArrayToIDMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNMapArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNMapArrayToIDMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNMapArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNMapArrayToIDArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNMapArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNMapArrayToArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNMapArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyURNMapArrayToMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNMapArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNMapArrayToArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNMapArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNMapArrayToMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNMapArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNMapArrayToMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNMapArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNMapArrayToArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNMapArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyURNMapArrayToInt(o URNMapArrayInput, applier func(v []map[string]URN) (int, error)) IntOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNMapArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNMapArrayToIntPtr(o URNMapArrayInput, applier func(v []map[string]URN) (*int, error)) IntPtrOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNMapArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNMapArrayToIntArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]int, error)) IntArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNMapArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNMapArrayToIntMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNMapArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNMapArrayToIntArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNMapArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNMapArrayToIntMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNMapArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNMapArrayToIntMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNMapArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNMapArrayToIntArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNMapArrayToString is like ApplyT, but returns a StringOutput.
func ApplyURNMapArrayToString(o URNMapArrayInput, applier func(v []map[string]URN) (string, error)) StringOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNMapArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNMapArrayToStringPtr(o URNMapArrayInput, applier func(v []map[string]URN) (*string, error)) StringPtrOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNMapArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNMapArrayToStringArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]string, error)) StringArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNMapArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNMapArrayToStringMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNMapArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNMapArrayToStringArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNMapArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNMapArrayToStringMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNMapArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNMapArrayToStringMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNMapArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNMapArrayToStringArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNMapArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyURNMapArrayToURN(o URNMapArrayInput, applier func(v []map[string]URN) (URN, error)) URNOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNMapArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNMapArrayToURNPtr(o URNMapArrayInput, applier func(v []map[string]URN) (*URN, error)) URNPtrOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNMapArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNMapArrayToURNArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNMapArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNMapArrayToURNMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNMapArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNMapArrayToURNArrayMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNMapArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNMapArrayToURNMapArray(o URNMapArrayInput, applier func(v []map[string]URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNMapArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNMapArrayToURNMapMap(o URNMapArrayInput, applier func(v []map[string]URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNMapArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNMapArrayToURNArrayArray(o URNMapArrayInput, applier func(v []map[string]URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNMapArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNMapMapToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNMapMapToArchive(o URNMapMapInput, applier func(v map[string]map[string]URN) (Archive, error)) ArchiveOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNMapMapToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNMapMapToArchiveArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNMapMapToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNMapMapToArchiveMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNMapMapToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNMapMapToArchiveArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNMapMapToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNMapMapToArchiveMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNMapMapToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNMapMapToArchiveMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNMapMapToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNMapMapToArchiveArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNMapMapToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNMapMapToAsset(o URNMapMapInput, applier func(v map[string]map[string]URN) (Asset, error)) AssetOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNMapMapToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNMapMapToAssetArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNMapMapToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNMapMapToAssetMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNMapMapToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNMapMapToAssetArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNMapMapToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNMapMapToAssetMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNMapMapToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNMapMapToAssetMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNMapMapToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNMapMapToAssetArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNMapMapToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNMapMapToAssetOrArchive(o URNMapMapInput, applier func(v map[string]map[string]URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNMapMapToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNMapMapToAssetOrArchiveArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNMapMapToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNMapMapToAssetOrArchiveMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNMapMapToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNMapMapToAssetOrArchiveArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNMapMapToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNMapMapToAssetOrArchiveMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNMapMapToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNMapMapToAssetOrArchiveMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNMapMapToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNMapMapToAssetOrArchiveArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNMapMapToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNMapMapToBool(o URNMapMapInput, applier func(v map[string]map[string]URN) (bool, error)) BoolOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNMapMapToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNMapMapToBoolPtr(o URNMapMapInput, applier func(v map[string]map[string]URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNMapMapToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNMapMapToBoolArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNMapMapToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNMapMapToBoolMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNMapMapToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNMapMapToBoolArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNMapMapToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNMapMapToBoolMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNMapMapToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNMapMapToBoolMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNMapMapToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNMapMapToBoolArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNMapMapToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNMapMapToFloat64(o URNMapMapInput, applier func(v map[string]map[string]URN) (float64, error)) Float64Output {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNMapMapToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNMapMapToFloat64Ptr(o URNMapMapInput, applier func(v map[string]map[string]URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNMapMapToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNMapMapToFloat64Array(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNMapMapToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNMapMapToFloat64Map(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNMapMapToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNMapMapToFloat64ArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNMapMapToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNMapMapToFloat64MapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNMapMapToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNMapMapToFloat64MapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNMapMapToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNMapMapToFloat64ArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNMapMapToID is like ApplyT, but returns a IDOutput.
func ApplyURNMapMapToID(o URNMapMapInput, applier func(v map[string]map[string]URN) (ID, error)) IDOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNMapMapToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNMapMapToIDPtr(o URNMapMapInput, applier func(v map[string]map[string]URN) (*ID, error)) IDPtrOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNMapMapToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNMapMapToIDArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNMapMapToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNMapMapToIDMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNMapMapToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNMapMapToIDArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNMapMapToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNMapMapToIDMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNMapMapToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNMapMapToIDMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNMapMapToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNMapMapToIDArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNMapMapToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNMapMapToArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNMapMapToMap is like ApplyT, but returns a MapOutput.
func ApplyURNMapMapToMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNMapMapToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNMapMapToArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNMapMapToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNMapMapToMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNMapMapToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNMapMapToMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNMapMapToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNMapMapToArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNMapMapToInt is like ApplyT, but returns a IntOutput.
func ApplyURNMapMapToInt(o URNMapMapInput, applier func(v map[string]map[string]URN) (int, error)) IntOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNMapMapToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNMapMapToIntPtr(o URNMapMapInput, applier func(v map[string]map[string]URN) (*int, error)) IntPtrOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNMapMapToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNMapMapToIntArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]int, error)) IntArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNMapMapToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNMapMapToIntMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNMapMapToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNMapMapToIntArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNMapMapToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNMapMapToIntMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNMapMapToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNMapMapToIntMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNMapMapToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNMapMapToIntArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNMapMapToString is like ApplyT, but returns a StringOutput.
func ApplyURNMapMapToString(o URNMapMapInput, applier func(v map[string]map[string]URN) (string, error)) StringOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNMapMapToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNMapMapToStringPtr(o URNMapMapInput, applier func(v map[string]map[string]URN) (*string, error)) StringPtrOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNMapMapToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNMapMapToStringArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]string, error)) StringArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNMapMapToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNMapMapToStringMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNMapMapToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNMapMapToStringArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNMapMapToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNMapMapToStringMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNMapMapToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNMapMapToStringMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNMapMapToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNMapMapToStringArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNMapMapToURN is like ApplyT, but returns a URNOutput.
func ApplyURNMapMapToURN(o URNMapMapInput, applier func(v map[string]map[string]URN) (URN, error)) URNOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNMapMapToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNMapMapToURNPtr(o URNMapMapInput, applier func(v map[string]map[string]URN) (*URN, error)) URNPtrOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNMapMapToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNMapMapToURNArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNMapMapToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNMapMapToURNMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNMapMapToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNMapMapToURNArrayMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNMapMapToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNMapMapToURNMapArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNMapMapToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNMapMapToURNMapMap(o URNMapMapInput, applier func(v map[string]map[string]URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNMapMapToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNMapMapToURNArrayArray(o URNMapMapInput, applier func(v map[string]map[string]URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNMapMapOutput().ApplyT(applier).(URNArrayArrayOutput)
}

// ApplyURNArrayArrayToArchive is like ApplyT, but returns a ArchiveOutput.
func ApplyURNArrayArrayToArchive(o URNArrayArrayInput, applier func(v [][]URN) (Archive, error)) ArchiveOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArchiveOutput)
}

// ApplyURNArrayArrayToArchiveArray is like ApplyT, but returns a ArchiveArrayOutput.
func ApplyURNArrayArrayToArchiveArray(o URNArrayArrayInput, applier func(v [][]URN) ([]Archive, error)) ArchiveArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArchiveArrayOutput)
}

// ApplyURNArrayArrayToArchiveMap is like ApplyT, but returns a ArchiveMapOutput.
func ApplyURNArrayArrayToArchiveMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]Archive, error)) ArchiveMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArchiveMapOutput)
}

// ApplyURNArrayArrayToArchiveArrayMap is like ApplyT, but returns a ArchiveArrayMapOutput.
func ApplyURNArrayArrayToArchiveArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]Archive, error)) ArchiveArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArchiveArrayMapOutput)
}

// ApplyURNArrayArrayToArchiveMapArray is like ApplyT, but returns a ArchiveMapArrayOutput.
func ApplyURNArrayArrayToArchiveMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]Archive, error)) ArchiveMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArchiveMapArrayOutput)
}

// ApplyURNArrayArrayToArchiveMapMap is like ApplyT, but returns a ArchiveMapMapOutput.
func ApplyURNArrayArrayToArchiveMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]Archive, error)) ArchiveMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArchiveMapMapOutput)
}

// ApplyURNArrayArrayToArchiveArrayArray is like ApplyT, but returns a ArchiveArrayArrayOutput.
func ApplyURNArrayArrayToArchiveArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]Archive, error)) ArchiveArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArchiveArrayArrayOutput)
}

// ApplyURNArrayArrayToAsset is like ApplyT, but returns a AssetOutput.
func ApplyURNArrayArrayToAsset(o URNArrayArrayInput, applier func(v [][]URN) (Asset, error)) AssetOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOutput)
}

// ApplyURNArrayArrayToAssetArray is like ApplyT, but returns a AssetArrayOutput.
func ApplyURNArrayArrayToAssetArray(o URNArrayArrayInput, applier func(v [][]URN) ([]Asset, error)) AssetArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetArrayOutput)
}

// ApplyURNArrayArrayToAssetMap is like ApplyT, but returns a AssetMapOutput.
func ApplyURNArrayArrayToAssetMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]Asset, error)) AssetMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetMapOutput)
}

// ApplyURNArrayArrayToAssetArrayMap is like ApplyT, but returns a AssetArrayMapOutput.
func ApplyURNArrayArrayToAssetArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]Asset, error)) AssetArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetArrayMapOutput)
}

// ApplyURNArrayArrayToAssetMapArray is like ApplyT, but returns a AssetMapArrayOutput.
func ApplyURNArrayArrayToAssetMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]Asset, error)) AssetMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetMapArrayOutput)
}

// ApplyURNArrayArrayToAssetMapMap is like ApplyT, but returns a AssetMapMapOutput.
func ApplyURNArrayArrayToAssetMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]Asset, error)) AssetMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetMapMapOutput)
}

// ApplyURNArrayArrayToAssetArrayArray is like ApplyT, but returns a AssetArrayArrayOutput.
func ApplyURNArrayArrayToAssetArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]Asset, error)) AssetArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetArrayArrayOutput)
}

// ApplyURNArrayArrayToAssetOrArchive is like ApplyT, but returns a AssetOrArchiveOutput.
func ApplyURNArrayArrayToAssetOrArchive(o URNArrayArrayInput, applier func(v [][]URN) (AssetOrArchive, error)) AssetOrArchiveOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOrArchiveOutput)
}

// ApplyURNArrayArrayToAssetOrArchiveArray is like ApplyT, but returns a AssetOrArchiveArrayOutput.
func ApplyURNArrayArrayToAssetOrArchiveArray(o URNArrayArrayInput, applier func(v [][]URN) ([]AssetOrArchive, error)) AssetOrArchiveArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayOutput)
}

// ApplyURNArrayArrayToAssetOrArchiveMap is like ApplyT, but returns a AssetOrArchiveMapOutput.
func ApplyURNArrayArrayToAssetOrArchiveMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]AssetOrArchive, error)) AssetOrArchiveMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapOutput)
}

// ApplyURNArrayArrayToAssetOrArchiveArrayMap is like ApplyT, but returns a AssetOrArchiveArrayMapOutput.
func ApplyURNArrayArrayToAssetOrArchiveArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]AssetOrArchive, error)) AssetOrArchiveArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayMapOutput)
}

// ApplyURNArrayArrayToAssetOrArchiveMapArray is like ApplyT, but returns a AssetOrArchiveMapArrayOutput.
func ApplyURNArrayArrayToAssetOrArchiveMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]AssetOrArchive, error)) AssetOrArchiveMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapArrayOutput)
}

// ApplyURNArrayArrayToAssetOrArchiveMapMap is like ApplyT, but returns a AssetOrArchiveMapMapOutput.
func ApplyURNArrayArrayToAssetOrArchiveMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]AssetOrArchive, error)) AssetOrArchiveMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOrArchiveMapMapOutput)
}

// ApplyURNArrayArrayToAssetOrArchiveArrayArray is like ApplyT, but returns a AssetOrArchiveArrayArrayOutput.
func ApplyURNArrayArrayToAssetOrArchiveArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]AssetOrArchive, error)) AssetOrArchiveArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(AssetOrArchiveArrayArrayOutput)
}

// ApplyURNArrayArrayToBool is like ApplyT, but returns a BoolOutput.
func ApplyURNArrayArrayToBool(o URNArrayArrayInput, applier func(v [][]URN) (bool, error)) BoolOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolOutput)
}

// ApplyURNArrayArrayToBoolPtr is like ApplyT, but returns a BoolPtrOutput.
func ApplyURNArrayArrayToBoolPtr(o URNArrayArrayInput, applier func(v [][]URN) (*bool, error)) BoolPtrOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolPtrOutput)
}

// ApplyURNArrayArrayToBoolArray is like ApplyT, but returns a BoolArrayOutput.
func ApplyURNArrayArrayToBoolArray(o URNArrayArrayInput, applier func(v [][]URN) ([]bool, error)) BoolArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolArrayOutput)
}

// ApplyURNArrayArrayToBoolMap is like ApplyT, but returns a BoolMapOutput.
func ApplyURNArrayArrayToBoolMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]bool, error)) BoolMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolMapOutput)
}

// ApplyURNArrayArrayToBoolArrayMap is like ApplyT, but returns a BoolArrayMapOutput.
func ApplyURNArrayArrayToBoolArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]bool, error)) BoolArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolArrayMapOutput)
}

// ApplyURNArrayArrayToBoolMapArray is like ApplyT, but returns a BoolMapArrayOutput.
func ApplyURNArrayArrayToBoolMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]bool, error)) BoolMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolMapArrayOutput)
}

// ApplyURNArrayArrayToBoolMapMap is like ApplyT, but returns a BoolMapMapOutput.
func ApplyURNArrayArrayToBoolMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]bool, error)) BoolMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolMapMapOutput)
}

// ApplyURNArrayArrayToBoolArrayArray is like ApplyT, but returns a BoolArrayArrayOutput.
func ApplyURNArrayArrayToBoolArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]bool, error)) BoolArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(BoolArrayArrayOutput)
}

// ApplyURNArrayArrayToFloat64 is like ApplyT, but returns a Float64Output.
func ApplyURNArrayArrayToFloat64(o URNArrayArrayInput, applier func(v [][]URN) (float64, error)) Float64Output {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64Output)
}

// ApplyURNArrayArrayToFloat64Ptr is like ApplyT, but returns a Float64PtrOutput.
func ApplyURNArrayArrayToFloat64Ptr(o URNArrayArrayInput, applier func(v [][]URN) (*float64, error)) Float64PtrOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64PtrOutput)
}

// ApplyURNArrayArrayToFloat64Array is like ApplyT, but returns a Float64ArrayOutput.
func ApplyURNArrayArrayToFloat64Array(o URNArrayArrayInput, applier func(v [][]URN) ([]float64, error)) Float64ArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64ArrayOutput)
}

// ApplyURNArrayArrayToFloat64Map is like ApplyT, but returns a Float64MapOutput.
func ApplyURNArrayArrayToFloat64Map(o URNArrayArrayInput, applier func(v [][]URN) (map[string]float64, error)) Float64MapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64MapOutput)
}

// ApplyURNArrayArrayToFloat64ArrayMap is like ApplyT, but returns a Float64ArrayMapOutput.
func ApplyURNArrayArrayToFloat64ArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]float64, error)) Float64ArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64ArrayMapOutput)
}

// ApplyURNArrayArrayToFloat64MapArray is like ApplyT, but returns a Float64MapArrayOutput.
func ApplyURNArrayArrayToFloat64MapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]float64, error)) Float64MapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64MapArrayOutput)
}

// ApplyURNArrayArrayToFloat64MapMap is like ApplyT, but returns a Float64MapMapOutput.
func ApplyURNArrayArrayToFloat64MapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]float64, error)) Float64MapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64MapMapOutput)
}

// ApplyURNArrayArrayToFloat64ArrayArray is like ApplyT, but returns a Float64ArrayArrayOutput.
func ApplyURNArrayArrayToFloat64ArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]float64, error)) Float64ArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(Float64ArrayArrayOutput)
}

// ApplyURNArrayArrayToID is like ApplyT, but returns a IDOutput.
func ApplyURNArrayArrayToID(o URNArrayArrayInput, applier func(v [][]URN) (ID, error)) IDOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDOutput)
}

// ApplyURNArrayArrayToIDPtr is like ApplyT, but returns a IDPtrOutput.
func ApplyURNArrayArrayToIDPtr(o URNArrayArrayInput, applier func(v [][]URN) (*ID, error)) IDPtrOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDPtrOutput)
}

// ApplyURNArrayArrayToIDArray is like ApplyT, but returns a IDArrayOutput.
func ApplyURNArrayArrayToIDArray(o URNArrayArrayInput, applier func(v [][]URN) ([]ID, error)) IDArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDArrayOutput)
}

// ApplyURNArrayArrayToIDMap is like ApplyT, but returns a IDMapOutput.
func ApplyURNArrayArrayToIDMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]ID, error)) IDMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDMapOutput)
}

// ApplyURNArrayArrayToIDArrayMap is like ApplyT, but returns a IDArrayMapOutput.
func ApplyURNArrayArrayToIDArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]ID, error)) IDArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDArrayMapOutput)
}

// ApplyURNArrayArrayToIDMapArray is like ApplyT, but returns a IDMapArrayOutput.
func ApplyURNArrayArrayToIDMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]ID, error)) IDMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDMapArrayOutput)
}

// ApplyURNArrayArrayToIDMapMap is like ApplyT, but returns a IDMapMapOutput.
func ApplyURNArrayArrayToIDMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]ID, error)) IDMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDMapMapOutput)
}

// ApplyURNArrayArrayToIDArrayArray is like ApplyT, but returns a IDArrayArrayOutput.
func ApplyURNArrayArrayToIDArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]ID, error)) IDArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IDArrayArrayOutput)
}

// ApplyURNArrayArrayToArray is like ApplyT, but returns a ArrayOutput.
func ApplyURNArrayArrayToArray(o URNArrayArrayInput, applier func(v [][]URN) ([]interface{}, error)) ArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArrayOutput)
}

// ApplyURNArrayArrayToMap is like ApplyT, but returns a MapOutput.
func ApplyURNArrayArrayToMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]interface{}, error)) MapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(MapOutput)
}

// ApplyURNArrayArrayToArrayMap is like ApplyT, but returns a ArrayMapOutput.
func ApplyURNArrayArrayToArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]interface{}, error)) ArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArrayMapOutput)
}

// ApplyURNArrayArrayToMapArray is like ApplyT, but returns a MapArrayOutput.
func ApplyURNArrayArrayToMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]interface{}, error)) MapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(MapArrayOutput)
}

// ApplyURNArrayArrayToMapMap is like ApplyT, but returns a MapMapOutput.
func ApplyURNArrayArrayToMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]interface{}, error)) MapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(MapMapOutput)
}

// ApplyURNArrayArrayToArrayArray is like ApplyT, but returns a ArrayArrayOutput.
func ApplyURNArrayArrayToArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]interface{}, error)) ArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(ArrayArrayOutput)
}

// ApplyURNArrayArrayToInt is like ApplyT, but returns a IntOutput.
func ApplyURNArrayArrayToInt(o URNArrayArrayInput, applier func(v [][]URN) (int, error)) IntOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntOutput)
}

// ApplyURNArrayArrayToIntPtr is like ApplyT, but returns a IntPtrOutput.
func ApplyURNArrayArrayToIntPtr(o URNArrayArrayInput, applier func(v [][]URN) (*int, error)) IntPtrOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntPtrOutput)
}

// ApplyURNArrayArrayToIntArray is like ApplyT, but returns a IntArrayOutput.
func ApplyURNArrayArrayToIntArray(o URNArrayArrayInput, applier func(v [][]URN) ([]int, error)) IntArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntArrayOutput)
}

// ApplyURNArrayArrayToIntMap is like ApplyT, but returns a IntMapOutput.
func ApplyURNArrayArrayToIntMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]int, error)) IntMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntMapOutput)
}

// ApplyURNArrayArrayToIntArrayMap is like ApplyT, but returns a IntArrayMapOutput.
func ApplyURNArrayArrayToIntArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]int, error)) IntArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntArrayMapOutput)
}

// ApplyURNArrayArrayToIntMapArray is like ApplyT, but returns a IntMapArrayOutput.
func ApplyURNArrayArrayToIntMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]int, error)) IntMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntMapArrayOutput)
}

// ApplyURNArrayArrayToIntMapMap is like ApplyT, but returns a IntMapMapOutput.
func ApplyURNArrayArrayToIntMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]int, error)) IntMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntMapMapOutput)
}

// ApplyURNArrayArrayToIntArrayArray is like ApplyT, but returns a IntArrayArrayOutput.
func ApplyURNArrayArrayToIntArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]int, error)) IntArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(IntArrayArrayOutput)
}

// ApplyURNArrayArrayToString is like ApplyT, but returns a StringOutput.
func ApplyURNArrayArrayToString(o URNArrayArrayInput, applier func(v [][]URN) (string, error)) StringOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringOutput)
}

// ApplyURNArrayArrayToStringPtr is like ApplyT, but returns a StringPtrOutput.
func ApplyURNArrayArrayToStringPtr(o URNArrayArrayInput, applier func(v [][]URN) (*string, error)) StringPtrOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringPtrOutput)
}

// ApplyURNArrayArrayToStringArray is like ApplyT, but returns a StringArrayOutput.
func ApplyURNArrayArrayToStringArray(o URNArrayArrayInput, applier func(v [][]URN) ([]string, error)) StringArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringArrayOutput)
}

// ApplyURNArrayArrayToStringMap is like ApplyT, but returns a StringMapOutput.
func ApplyURNArrayArrayToStringMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]string, error)) StringMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringMapOutput)
}

// ApplyURNArrayArrayToStringArrayMap is like ApplyT, but returns a StringArrayMapOutput.
func ApplyURNArrayArrayToStringArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]string, error)) StringArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringArrayMapOutput)
}

// ApplyURNArrayArrayToStringMapArray is like ApplyT, but returns a StringMapArrayOutput.
func ApplyURNArrayArrayToStringMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]string, error)) StringMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringMapArrayOutput)
}

// ApplyURNArrayArrayToStringMapMap is like ApplyT, but returns a StringMapMapOutput.
func ApplyURNArrayArrayToStringMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]string, error)) StringMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringMapMapOutput)
}

// ApplyURNArrayArrayToStringArrayArray is like ApplyT, but returns a StringArrayArrayOutput.
func ApplyURNArrayArrayToStringArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]string, error)) StringArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(StringArrayArrayOutput)
}

// ApplyURNArrayArrayToURN is like ApplyT, but returns a URNOutput.
func ApplyURNArrayArrayToURN(o URNArrayArrayInput, applier func(v [][]URN) (URN, error)) URNOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNOutput)
}

// ApplyURNArrayArrayToURNPtr is like ApplyT, but returns a URNPtrOutput.
func ApplyURNArrayArrayToURNPtr(o URNArrayArrayInput, applier func(v [][]URN) (*URN, error)) URNPtrOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNPtrOutput)
}

// ApplyURNArrayArrayToURNArray is like ApplyT, but returns a URNArrayOutput.
func ApplyURNArrayArrayToURNArray(o URNArrayArrayInput, applier func(v [][]URN) ([]URN, error)) URNArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNArrayOutput)
}

// ApplyURNArrayArrayToURNMap is like ApplyT, but returns a URNMapOutput.
func ApplyURNArrayArrayToURNMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]URN, error)) URNMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNMapOutput)
}

// ApplyURNArrayArrayToURNArrayMap is like ApplyT, but returns a URNArrayMapOutput.
func ApplyURNArrayArrayToURNArrayMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string][]URN, error)) URNArrayMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNArrayMapOutput)
}

// ApplyURNArrayArrayToURNMapArray is like ApplyT, but returns a URNMapArrayOutput.
func ApplyURNArrayArrayToURNMapArray(o URNArrayArrayInput, applier func(v [][]URN) ([]map[string]URN, error)) URNMapArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNMapArrayOutput)
}

// ApplyURNArrayArrayToURNMapMap is like ApplyT, but returns a URNMapMapOutput.
func ApplyURNArrayArrayToURNMapMap(o URNArrayArrayInput, applier func(v [][]URN) (map[string]map[string]URN, error)) URNMapMapOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNMapMapOutput)
}

// ApplyURNArrayArrayToURNArrayArray is like ApplyT, but returns a URNArrayArrayOutput.
func ApplyURNArrayArrayToURNArrayArray(o URNArrayArrayInput, applier func(v [][]URN) ([][]URN, error)) URNArrayArrayOutput {
	return o.ToURNArrayArrayOutput().ApplyT(applier).(URNArrayArrayOutput)
}
